#+title: Groovy

- [[https://docs.groovy-lang.org/docs/next/html/documentation/#developing-ast-xforms][Groovy Language Documentation Developing AST transformations]]
- [[https://github.com/ajoberstar/grgit][ajoberstar/grgit: The Groovy way to use Git.]]
- [[https://github.com/sshoogr/sshoogr][sshoogr/sshoogr: A Groovy-based DSL for working with remote SSH servers.]]
- [[https://github.com/int128/gradle-ssh-plugin][int128/gradle-ssh-plugin: Gradle SSH Plugin]]
- [[https://github.com/jdereg/json-io][jdereg/json-io: Convert Java to JSON. Convert JSON to Java. Pretty print JSON. Java JSON serializer.]]

https://groovy-lang.org/groovysh.html

:set verbosity DEBUG
:set interpreterMode true

* Closure

https://groovy-lang.org/closures.html

groovy:000> ({ it })(2)
===> 2

groovy:000> ({f1, f2 -> f1})("foo", "bar")
===> foo
groovy:000> ({f1, f2 -> f2})("foo", "bar")
===> bar

* Examples
  #+begin_src groovy
    #!/usr/bin/env groovy

    List<String> deployments = ["ns", "router", "swarm", "web", "nginx", "webmail", "jenkins"]
    List<String> releases = ["20.09", "unstable"]
    buildJobs = releases.collect({ release ->
            deployments.collect({ deployment ->
                    [(release): {
                            ansiColor("xterm") {
                                println("nix-shell -I https://nixos.org/channels/nixos-${release}/nixexprs.tar.xz --run 'nixops deploy -d ${deployment} --show-trace --build-only'")
                            }
                        }]
                })
        })

    println(buildJobs)
  #+end_src
