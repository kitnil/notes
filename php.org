:PROPERTIES:
:ID:       ada31b57-7637-413a-afce-4da687df7c8d
:END:
#+title: PHP

- [[https://prudnitskiy.pro/2015/11/26/pinba/][Отслеживаем PHP с помощью PINBA на debian]]
- [[https://github.com/fabpot/local-php-security-checker][fabpot/local-php-security-checker: PHP security vulnerabilities checker]]
- [[https://github.com/fossar/nix-phps][fossar/nix-phps: Repository of Nix expressions for old PHP versions]]
- [[https://github.com/VKCOM/kphp][VKCOM/kphp: KPHP — a PHP compiler]]
- [[https://github.com/spiral/roadrunner][spiral/roadrunner: High-performance PHP application server, load-balancer and process manager written in Golang]]
- [[https://github.com/thephpleague/flysystem][thephpleague/flysystem: Abstraction for local and remote filesystems]]
- [[https://github.com/laradock/laradock][laradock/laradock: Full PHP development environment for Docker.]]
- [[https://github.com/lazy-ants/remote-manager][lazy-ants/remote-manager: This tool is intended for mass management and monitoring of remote servers. Getting information about the status of remote servers, analyze it, provide maintenance as easily as possible, extend for your needs.]]
- [[https://github.com/VKCOM/noverify][VKCOM/noverify: Pretty fast linter (code static analysis utility) for PHP]]
- [[https://github.com/jeremypenner/nix-php52/blob/master/php52-backports-security-20130717.patch][nix-php52/php52-backports-security-20130717.patch at master · jeremypenner/nix-php52]]
- [[https://github.com/cedvan/docker-toran-proxy][cedvan/docker-toran-proxy: Docker image to launch a toran proxy application self hosted to manage PHP dependencies]]
- [[https://github.com/daveearley/cli.fyi][daveearley/cli.fyi: A Potentially Useful Command Line Query Tool]]
- [[https://github.com/svanderburg/pndp][svanderburg/pndp: PNDP: An internal DSL for Nix in PHP]]
- [[https://github.com/VKCOM/nocolor][VKCOM/nocolor: Validate the architecture of your PHP project based on the concept of function colors]]
- [[https://github.com/mm0r1/exploits/tree/master/php-concat-bypass][exploits/php-concat-bypass at master · mm0r1/exploits]]
- [[https://github.com/Lambdish/phunctional][Lambdish/phunctional: ⚡️ λ PHP functional library focused on simplicity and performance]]
- [[https://github.com/phel-lang/phel-lang][phel-lang/phel-lang: Phel is a functional programming language that compiles to PHP. It is a dialect of Lisp inspired by Clojure and Janet.]]
- [[https://github.com/spatie/browsershot][spatie/browsershot: Convert HTML to an image, PDF or string]]

* Security
- [[https://habr.com/ru/company/crowdsec/blog/586944/][Как защитить сайты на PHP при помощи CrowdSec / Хабр]]
- [[https://github.com/frontdevops/php-evil][frontdevops/php-evil: Disable eval instruction in PHP8]]

* Libs
- [[https://github.com/EasyCorp/EasyAdminBundle][EasyCorp/EasyAdminBundle: The new (and simple) admin generator for Symfony applications.]]
- [[https://github.com/char0n/ffmpeg-php][char0n/ffmpeg-php: FFmpegPHP is a pure OO PHP port of ffmpeg-php library that was written in C. It adds an easy to use, object-oriented API for accessing and retrieving information from video and audio files. It has methods for returning frames from movie files as images that can be manipulated using PHP's image functions. This works well for automatically creating thumbnail images from movies. FFmpegPHP is also useful for reporting the duration and bitrate of audio files (mp3, wma...). FFmpegPHP can access many of the video formats supported by ffmpeg (mov, avi, mpg, wmv...)]]
- [[https://github.com/thecodingmachine/safe][thecodingmachine/safe: All PHP functions, rewritten to throw exceptions instead of returning false]]

* Tools
- [[https://vardumpformatter.io/][https://vardumpformatter.io/]]
- [[https://github.com/overtrue/phplint][overtrue/phplint: A tool that can speed up linting of php files by running several lint processes at once.]]
- [[https://github.com/nikic/PHP-Parser][nikic/PHP-Parser: A PHP parser written in PHP]]
- [[https://github.com/phpDocumentor/phpDocumentor][phpDocumentor/phpDocumentor: Documentation Generator for PHP]]
- [[https://github.com/shivammathur/setup-php/pulse][GitHub action to set up PHP with extensions, php.ini configuration, coverage drivers, and various tools.]]
- [[https://github.com/jakzal/phpqa][jakzal/phpqa: Docker image that provides static analysis tools for PHP]]

* Examples

#+begin_src php
  <?php
  if (curl_exec(curl_init($url = "https://www.gnu.org/")))
      echo "hello";
  ?>
#+end_src

#+begin_src php
  #PHPRC="${HOME}/.phprc.ini" /nix/store/map23xbih2gz8d6hddb7n3vq3byhygs6-ispmanager2ispconfig/share/php/composer-svanderburg-composer2nix/vendor/bin/php -a
  
  $autoloadLocations = [
      "/nix/store/krd0bal0akml8a5ry0q3qbwln9v1sy1y-composer-svanderburg-composer2nix/share/php/composer-svanderburg-composer2nix/bin" . "/vendor/autoload.php",
      "/nix/store/krd0bal0akml8a5ry0q3qbwln9v1sy1y-composer-svanderburg-composer2nix/share/php/composer-svanderburg-composer2nix/bin" . "/../../autoload.php",
      "/nix/store/krd0bal0akml8a5ry0q3qbwln9v1sy1y-composer-svanderburg-composer2nix/share/php/composer-svanderburg-composer2nix/bin" . "/../vendor/autoload.php",
      "/nix/store/krd0bal0akml8a5ry0q3qbwln9v1sy1y-composer-svanderburg-composer2nix/share/php/composer-svanderburg-composer2nix/bin" . "/../../../autoload.php",
  
      getcwd() . "/vendor/autoload.php",
      getcwd() . "/../../autoload.php",
      __DIR__ . "/../vendor/autoload.php",
      __DIR__ . "/../../../autoload.php",
  ];
  $loaded = false;
  foreach ($autoloadLocations as $autoload) {
      if (is_file($autoload)) {
          require_once $autoload;
          $loaded = true;
      }
  }
  
  /* use PNDP\NixGenerator; */
  /* use PNDP\AST\NixRecursiveAttrSet; */
  /* use PNDP\AST\NixObject; */
  /* use PNDP\AST\NixAttrReference; */
  /* use PNDP\AST\NixExpression; */
  
  class_alias("PNDP\NixGenerator", "NixGenerator");
  class_alias("PNDP\AST\NixRecursiveAttrSet", "NixRecursiveAttrSet");
  class_alias("PNDP\AST\NixObject", "NixObject");
  class_alias("PNDP\AST\NixAttrReference", "NixAttrReference");
  class_alias("PNDP\AST\NixExpression", "NixExpression");
  
  function phpToNix ($object) {
    var_dump((new NixGenerator())->phpToNix($object, true));
  }
#+end_src
