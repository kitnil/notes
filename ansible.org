- Run docker playbook
  : ANSIBLE_HOST_KEY_CHECKING=false ansible-playbook -uroot -i78.108.86.238, -e 'host=78.108.86.238' docker.yml

- source ./hacking/env-setup

- https://pagure.io/Fedora-Infra/ansible

- https://docs.ansible.com/ansible/latest/plugins/callback/log_plays.html#log-plays-callback
  : ANSIBLE_STDOUT_CALLBACK=log_plays ANSIBLE_LOAD_CALLBACK_PLUGINS=1 ansible localhost -a 'df -h'

- http://tonkersten.com/2019/02/150-ansible-with-loops-or-lookup/

    # - shell: find '/etc/letsencrypt/live' -type f
    #   register: files

    # - fetch: src='{{ item }}' dest='/tmp'
    #   loop: '{{ files.stdout_lines }}'


- https://hodovi.ch/posts/extending-ansible-with-callback-plugins/

* Cheat sheet
  - https://en.wikiversity.org/wiki/DevOps/Ansible
    : debug msg='sshpass -p{{ ansible_ssh_pass }} ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no {{ ansible_ssh_user }}@{{ ansible_host }}'

#+BEGIN_SRC yaml
      - name: send a message with a report link using Slack markup
        slack:
          token: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
          msg: |
            goaccess report is available at <https://malscan.intr/reports/access-{{ site }}.html> and you could generate it again by invoking:
            ```curl "http://malscan:8052/api/v2/job_templates/10/launch/" -H "Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx" -H "Content-Type: application/json" --data '{"extra_vars":{"host":"{{ host }}","home":"{{ home }}","site":"{{ site }}"}}'```
        delegate_to: localhost
#+END_SRC
