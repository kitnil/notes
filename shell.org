* Reverse shell
:PROPERTIES:
:ID:       2b605728-0d77-4451-85b1-5e11feaa4cc8
:END:

- [[https://github.com/wintrmvte/GoSH][wintrmvte/GoSH: Golang reverse/bind shell generator]]
- [[https://github.com/spyx/monkey-shell/blob/master/monkey-shell.sh][monkey-shell/monkey-shell.sh at master ¬∑ spyx/monkey-shell]]
- [[https://github.com/nuta/nsh][nuta/nsh: A command-line shell like fish, but POSIX compatible.]]
- [[https://github.com/untitaker/quickenv][untitaker/quickenv: An unintrusive environment manager]]

* Learning
- [[https://github.com/modernish/modernish][modernish/modernish: Modernish is a library for writing robust, portable, readable, and powerful programs for POSIX-based shells and utilities.]]

* Bash alternatives

- [[https://github.com/ngs-lang/ngs][ngs-lang/ngs: Next Generation Shell (NGS)]]

* Cheatsheet

- Clone X window
  : PID=$(ps -p $(xprop _NET_WM_PID | cut -d " " -f 3) -o command=)

- Kill program using one port
  : # fuser -k 8000/tcp

- Limit memory usage for following commands (KB)
  : ulimit -Sv 1000

- Remove limit memory usage
  : ulimit -Sv unlimited

- Get full path of file
  : readlink -f file.txt

- Nice trace route
  : mtr www.gnu.org

- Find files by size (Bytes)
  : find . -size 20c

- Find files and process them one file by line
  #+BEGIN_SRC shell
    find . -exec echo {} \;
    ./file1
    ./file2
    ./file3
  #+END_SRC

- Find files and process all of them in the same line
  #+BEGIN_SRC shell
    find . -exec echo {} \+
    ./file1 ./file2 ./file3
  #+END_SRC

- Run command every time a file is modified
  #+BEGIN_SRC shell
    while inotifywait -e close_write document.tex
    do
        make
    done
  #+END_SRC

- Spell and grammar check in Latex
  : detex file.tex | diction -bs # Required packages: diction texlive-extra-utils

- Create empty file of given size
  : fallocate -l 1G test.img

* Tools

- [[https://github.com/iann0036/censor-shell][iann0036/censor-shell: Censors or hides shell / Bash / console output based on defined patterns - great for hiding secrets in demos!]]
- [[https://habr.com/ru/company/ruvds/blog/585642/][–®–∞—Ä–∏–º (–≤) –∫–æ–Ω—Å–æ–ª—å / –•–∞–±—Ä]]
  - [[https://seashells.io/][Seashells lets you pipe output from command-line programs to the web in real-time]]
- [[https://github.com/ellie/atuin][ellie/atuin: Magical shell history]]
- [[https://github.com/barthr/redo][barthr/redo: Redo is the ultimate tool to create reusable functions from your history in an interactive way]]
- install viddy
  : wget https://github.com/sachaos/viddy/releases/download/v0.3.4/viddy_0.3.4_Linux_x86_64.tar.gz; tar xf viddy_0.3.4_Linux_x86_64.tar.gz viddy; chown root: viddy; chmod 0755 viddy; mv -vi viddy /usr/local/bin; rm -v viddy_0.3.4_Linux_x86_64.tar.gz
- install restic
  : wget --output-document=/usr/local/bin/restic https://beta.restic.net/latest/restic_v0.13.0-359-gf0bb4f87_linux_amd64; chmod 0555 /usr/local/bin/restic
- install landiscover
  : wget https://github.com/aler9/landiscover/releases/download/v1.1.0/landiscover_v1.1.0_linux_amd64.tar.gz; tar xf landiscover_v1.1.0_linux_amd64.tar.gz landiscover; chown root: landiscover; chmod 0755 landiscover; mv -vi landiscover /usr/local/bin; rm -v landiscover_v1.1.0_linux_amd64.tar.gz
- [[https://github.com/jstrieb/cache-command][jstrieb/cache-command: Cache commands that you don't want to run repeatedly when developing a shell pipeline]]
- [[https://github.com/charmbracelet/gum?auto_subscribed=false&utm_campaign=explore-email&utm_medium=email&utm_source=newsletter&utm_term=weekly][charmbracelet/gum: A tool for glamorous shell scripts üéÄ]]
