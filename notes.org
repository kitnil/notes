#+TITLE: Notes

* Files
- [[file:~/Documents/ansible/README.org][Ansible]]
* Important
** TODO Узнать оценку по алгебре 6005 Никита Викторович Викулов
* Tasks
** DONE Arch packaging tutorial on irc
   [2016-12-03 Sat]
   [[gnus:INBOX#91dac71e-4a12-4306-8f99-74ec6cd32167@dev.null.invalid][Email to go wigust: Any programmers here who don't]]
** DONE Watch Red Hat webinar
   [2016-12-03 Sat]
   [[gnus:INBOX#ff3304$ddjdj@smtp.theonlinexpo.com][Email from Red Hat Webcasts: Daily development with Docker,]]
** TODO Философия
** TODO Экономика
** TODO Математика
** TODO Программирование
** TODO 
   [2017-02-27 Mon]
   [[https://gogs.sr.ht/explore/repos][Explore - sr.ht git]]
* Bywords
** Tales of Zesteria
"У настоящик товарищей взгляды одинаковые, но точки зрения разные.", -
дед.

"Говорят, хорошие отношения длятся лишь до тех пор, пока в твоем
кошельке есть монеты.", - Эдна.
* Watch
** Anime
*** Буря потерь
*** Пожиратели богов                                            
** YouTube
*** Tales of Zesteria 24
*** Metal Gear Rising
** Число Pi
:РЕЖИСЕР: Дарен Реновский
Макс Койн математик программист ест всякую пробы, мариахуну 
* Temp
** [[https://thisissavo.github.io/assets/Klavaro1.png][10 fingers position keyboard fast typing]]
** Философию обычно относят к отдельной отрасли научной мысли
** Каждый вторник консультация по физике
** linux partition example
| name--vg-swap_1 | 3.7G      |
| name--vg-       | root 952M |
| name--vg-usr    | 17.3G     |
| name--vg-       | home 20G  |
| name--vg-       | opt 2G    |
| name--vg-var    | 2.8G      |
| sdax /          | boot 244M |
   
** cruft
#+BEGIN_SRC bash
    declare -a PATHS=('/dev'
		      '/proc'
		      '/sys'
		      '/root'
		      '/home'
		      '/tmp'
		      '/srv'
		      '/run'
		      '/var/cache'
		      '/var/lib/docker'
                      '/opt'
  '/var/lib/samba');
  cruft --ignore ${PATHS[@]}
#+END_SRC

** org error compile
#+BEGIN_EXAMPLE
  org-attach.el:42:1:Error: Symbol’s function definition is void: org-link-set-parameters

  org-drill.el:50:1:Error: Symbol’s function definition is void: org-link-set-parameters

  org-lint.el:107:1:Error: Symbol’s function definition is void: org-define-error

  ox-ascii.el:30:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-beamer.el at Sun Feb 19 19:02:09 2017
  ox-beamer.el:33:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-bibtex.el at Sun Feb 19 19:02:09 2017

  ox-confluence.el:36:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-deck.el at Sun Feb 19 19:02:09 2017
  ox-deck.el:47:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-extra.el at Sun Feb 19 19:02:09 2017
  ox-extra.el:58:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-freemind.el at Sun Feb 19 19:02:09 2017
  ox-freemind.el:39:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-groff.el at Sun Feb 19 19:02:09 2017
  ox-groff.el:41:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-html.el at Sun Feb 19 19:02:09 2017
  ox-html.el:35:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-icalendar.el at Sun Feb 19 19:02:09 2017
  ox-icalendar.el:35:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-koma-letter.el at Sun Feb 19 19:02:09 2017
  ox-koma-letter.el:124:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-latex.el at Sun Feb 19 19:02:09 2017
  ox-latex.el:30:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-man.el at Sun Feb 19 19:02:09 2017
  ox-man.el:41:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-md.el at Sun Feb 19 19:02:10 2017
  ox-md.el:32:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-odt.el at Sun Feb 19 19:02:10 2017
  ox-odt.el:30:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-org.el at Sun Feb 19 19:02:10 2017
  ox-org.el:27:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-publish.el at Sun Feb 19 19:02:10 2017
  ox-publish.el:43:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-rss.el at Sun Feb 19 19:02:10 2017
  ox-rss.el:75:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-s5.el at Sun Feb 19 19:02:10 2017
  ox-s5.el:57:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-taskjuggler.el at Sun Feb 19 19:02:10 2017
  ox-taskjuggler.el:150:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox-texinfo.el at Sun Feb 19 19:02:10 2017
  ox-texinfo.el:29:1:Error: Symbol’s function definition is void: org-define-error

  Compiling file /home/opykhalov/.emacs.d/elpa/org-plus-contrib-20170210/ox.el at Sun Feb 19 19:02:10 2017
#+END_EXAMPLE
** TODO Article about latex mu4e plotting
#+BEGIN_QUOTE
Install for latex

.. code-block:: identifier

   sudo apt install dvipng

Install for plotting graphs

.. code-block:: identifier

   sudo apt install gnuplot gnuplot-mode

Install for tls credentials store

.. code-block:: identifier

   sudo apt install gnuplot gnutls-bin

Install for mu4e email client   

.. code-block:: identifier

   sudo apt install mu4e
#+END_QUOTE
** Подвал Первый корпус 1244 кабинет и напротив него спуск в подвал
** broadcom drivers suck
* Links
** [[https://www.reddit.com/r/emacs/comments/5jhwlu/getting_things_from_outside_emacs_into/][Getting things from outside Emacs into org-mode/Emacs : emacs]]
** [[https://stackoverflow.com/questions/11902620/org-mode-how-do-i-create-a-new-file-with-org-capture][emacs - Org-Mode - How do I create a new file with org-capture? - Stack Overflow]]
You'll have to use (read-string ...) in capture-report-data-file to generate the
filename on the fly.

#+BEGIN_SRC emacs-lisp
 (defun capture-report-data-file (path)
   (let ((name (read-string "Name: ")))
     (expand-file-name (format "%s-%s.txt"
                               (format-time-string "%Y-%m-%d")
                               name) path)))

 '(("t"
    "todo"
    entry
    (file (capture-report-date-file  "~/path/path/name"))
    "* TODO")))
#+END_SRC

This will prompt on capture for the file name, and then open the capture buffer
will be created.
** [[https://blog.sleeplessbeastie.eu/2016/04/22/how-to-use-org-capture-from-system-tray/][How to use org-capture from system tray]]
These shell scripts are designed to verify that emacs daemon process is running
and then intercept call from emacsclient to trigger custom capture action.

** [[https://github.com/mooz/keysnail][mooz/keysnail: Allows you to bind commands to key sequences in Mozilla Firefox]]
 KeySnail is an add-on for Mozilla Firefox that aims to be a competitor and lightweight alternative to Vimperator. Unlike Vimperator, KeySnail provides comfortable browsing experience for Emacs users, but its target users are not limited to.
** [[https://github.com/viewvc/viewvc][viewvc/viewvc: ViewVC is a browser interface for CVS and Subversion version control repositories.]]
 ViewVC is a browser interface for CVS and Subversion version control repositories. It generates templatized HTML to present navigable directory, revision, and change log listings. It can display specific versions of files as well as diffs between those versions. Basically, ViewVC provides the bulk of the report-like functionality you expect out of your version control tool, but much more prettily than the average textual command-line program output.
 Features

     Support for filesystem-accessible CVS and Subversion repositories.
     Support for path-based authorization, including parsing and honoring Subversion authz configuration files.
     RSS feed generation for tracking changes to repositories or individual items within repositories.
     Individually configurable virtual host support.
     Line-based annotation/blame display.
     Revision graph capabilities (via integration with CvsGraph) (CVS only).
     Syntax highlighting support.
     Bonsai-like repository query facilities.
     Template-driven output generation.
     Colorized, side-by-side differences.
     Tarball generation (by tag/branch for CVS, by revision for Subversion).
     Localization support based on the Accept-Language request header.
     Ability to run either as CGI script or as a standalone server.
     Regexp-based file searching.
     INI-like configuration file (as opposed to requiring actual code tweaks).

 Requirements

 The only hard software requirement for running ViewVC is a suitable version of Python. The specifics of that, as well as all other requirements, depend on what you want to do with the tool. As those have changed somewhat over the years, it's best to consult the INSTALL file of the specific ViewVC release you wish to evaluate for its exact requirements. Here are pointers to the INSTALL files for the current major release lines:

     ViewVC 1.1.x
     Unreleased bleeding edge (1.2-dev)
** [[https://discordapp.com/][Discord - Free Voice and Text Chat for Gamers]]
 It’s time to ditch Skype and TeamSpeak.

 All-in-one voice and text chat for gamers that’s free, secure, and works on
 both your desktop and phone. Stop paying for TeamSpeak servers and hassling
 with Skype. Simplify your life.
** [[https://github.com/ZZROTDesign/docker-clean][ZZROTDesign/docker-clean: A script that cleans docker containers, images, volumes, and networks.]]
 A simple Shell script to clean up the Docker Daemon.
** [[https://github.com/dmgerman/org-manage][dmgerman/org-manage: org-manage]]
 This is a module to help managing a large collection of org files. It is based
 on org-octopress by Yoshinari Nomura.
** [[https://github.com/kiwanami/emacs-ctable][kiwanami/emacs-ctable: Table Component for elisp]]
 ctable.el is a table component for emacs lisp. Emacs lisp programs can display
 a nice table view from an abstract data model. The many emacs programs have the
 code for displaying table views, such as dired, list-process, buffer-list and
 so on. So, ctable.el would provide functions and a table framework for the
 table views.
** [[https://www.youtube.com/watch?v=Y8VNiybERVU][Сравнение императивного и функционального программирования на примере Python и Haskell (Артём Канев) - YouTube]]
 Выступление Артёма Канева 6 августа 2015 г. "Сравнение императивного и
 функционального программирования на примере Python и Haskell. Плюсы и минусы"

 Большей частью внимание уделено Haskell. Поскольку в Haskell нет циклов и
 переменных (переменные эмулируются другими средствами языка), то имеет смысл
 начать с самого начала, то есть с управления состоянием и обхода разного рода
 массивов. По восходящей подберемся к созданию простенького REST приложения на
 обоих языках. Надеюсь, получится отразить как можно больше косяков обоих
 подходов.
** [[https://www.youtube.com/watch?v=t8gim17hryw][MuniHac 2016: Hakyll - YouTube]]
 A keynote talk at MuniHac 2016 given by Jasper Van der Jeugt.

 Hakyll is a static site generator written in Haskell. It is more like a library
 than a conventional application, since the configuration is done in Haskell as
 well -- a bit like Xmonad. In this talk, we will give a high-level overview of
 the advantages of static site generators in general and build a quick site
 together. After that, we will dive a bit deeper and examine how semi-automatic
 dependency tracking works in the library.

 See also MuniHac 2016: http://www.munihac.de

 Recorded at TNG Technology Consulting / http://www.tngtech.com at 2nd of
 September 2016 at Unterföhring near Munich
** [[http://ergoemacs.org/emacs/emacs_eww_web_browser.html][Emacs: Using Eww Web Browser]]
 How to make emacs always use eww?
** [[https://github.com/appleshan/my-spacemacs-config][appleshan/my-spacemacs-config: My personal Spacemacs config]]
 Hacking 始于 2012 年。2015 年爱上 Spacemacs 😄 💖

 我的 Spacemacs 配置一共有两部分： 一个 .emacs.d 目录，是 Spacemacs 的原始代码，未做任何修改； 一个 .spacemacs.d 目录，存放私有 layer。
** [[https://github.com/Fanael/rainbow-identifiers][Fanael/rainbow-identifiers: Rainbow identifier highlighting for Emacs]]
 Rainbow identifiers mode is an Emacs minor mode providing highlighting of identifiers based on their names. Each identifier gets a color based on a hash of its name.
** [[https://github.com/ankurdave/color-identifiers-mode][ankurdave/color-identifiers-mode: Emacs minor mode to highlight each source code identifier uniquely based on its name]]
 Color Identifiers is a minor mode for Emacs that highlights each source code identifier uniquely based on its name. It is inspired by a post by Evan Brooks.

 Currently it supports Scala (scala-mode2), JavaScript (js-mode and js2-mode), Ruby, Python, Emacs Lisp, Clojure, C, C++, and Java. You can add support for your favorite mode by modifying color-identifiers:modes-alist and optionally calling color-identifiers:set-declaration-scan-fn.

 Check out the demo.
** [[https://julien.danjou.info/projects/emacs-packages][Emacs packages | Julien Danjou]]
 rainbow-mode is a minor mode for Emacs which displays strings representing colors with the color they represent as background.
** [[https://github.com/syl20bnr/nyan-mode][syl20bnr/nyan-mode: Nyan Cat for Emacs! Nyanyanyanyanyanyanyanyanyan!]]
 Fork modifications

     the starting nyan cat image has no rainbow behind it,
     the starting rainbow image has zigzags,
     the animation loop is not endless and occurs only when nyan cat moves.

 Introduction

 WARNING, MIND DUMBING CONTENT INSIDE.

 “Nyan-mode. It’s things like this that make me proud to be an emacs user.” - mitchellh

 Nyanmacs is expanding!! Read the story so far! :).
** [[https://github.com/petervanderdoes/gitflow-avh][petervanderdoes/gitflow-avh: AVH Edition of the git extensions to provide high-level repository operations for Vincent Driessen's branching model]]
 A collection of Git extensions to provide high-level repository operations for Vincent Driessen's branching model. This fork adds functionality not added to the original branch.
** [[https://github.com/jtatarik/magit-gitflow][jtatarik/magit-gitflow: GitFlow plugin for magit.el]]
 GitFlow plugin for magit.el
** [[https://www.youtube.com/watch?v=Qve7g0LB7ao&list=PLIcAMDxr6tppz0MDTAj7aj23_E6FwrRfO&index=1][Javascript - #1 - Прототипное наследование - YouTube]]
 В этом уроке мы разберем как реализуются классы, что такое прототипы, как создавать экземпляры классов и как реализовывать наследование в Javascript.
 Смотрите больше видео по AngularJS на нашем сайте.
 Текст и исходный код урока смотрите на http://monsterlessons.com/project/les...
** [[http://jblevins.org/projects/deft/][Deft for Emacs]]
 Deft is an Emacs mode for quickly browsing, filtering, and editing directories of plain text notes, inspired by Notational Velocity. It was designed for increased productivity when writing and taking notes by making it fast and simple to find the right file at the right time and by automating many of the usual tasks such as creating new files and saving files.
** [[https://github.com/rejeep/prodigy.el][rejeep/prodigy.el: Manage external services from within Emacs]]
 Manage external services from within Emacs

 I came up with the idea when I got to work one Monday morning and before I could start working I had to manually start ten or so services.

 To get rid of this tedious work, I started working on this Emacs plugin, which provides a nice and simple GUI to manage services.
** [[https://www.youtube.com/watch?v=EUrfyfQc_2o][4 Free Resources: Save Time Choosing Your Next Machine Vision Camera - YouTube]]
 Welcome to the Point Grey Youtube Channel where we talk about all things related to machine vision cameras. As a thank you for stopping by here are 4 links to our time-saving resources.
 1) Camera Sensor Review: http://www.ptgrey.com/point-grey/10845
 2) How to Calculate Camera Sensitivity - Understanding and using the EMVA1288 standard (Video and White Paper): http://www.ptgrey.com/white-paper/id/...
 3) Camera Selector Tool: http://www.ptgrey.com/Camera-selector
 4) Resolution vs Frame Rates:https://www.ptgrey.com/point-grey/10902

 Want to talk cameras? Email me at michael.jacoby(at)ptgrey.com or @mikeyjacoby (twitter)
** [[https://www.youtube.com/user/MrBrainMurder/about][Светослав Нинов - YouTube]]


 Autodesk Advance Steel видео, уроки, туториалы
** [[https://www.youtube.com/channel/UCDJBKl1AuqVcXpf9PMDV7rQ][Bal5.info - YouTube]]
  Наша команда представляет вам: -Видео уроки Инженерной графики и Начертательной геометрии
** [[https://github.com/getpelican/pelican-plugins/tree/master/sitemap][pelican-plugins/sitemap at master · getpelican/pelican-plugins]]
 This plugin generates plain-text or XML sitemaps. You can use the SITEMAP variable in your settings file to configure the behavior of the plugin.
** [[https://support.google.com/webmasters/answer/156184][Learn about sitemaps - Search Console Help]]
 A sitemap is a file where you can list the web pages of your site to tell Google and other search engines about the organization of your site content. Search engine web crawlers like Googlebot read this file to more intelligently crawl your site.
** [[https://support.google.com/webmasters/answer/182072?hl=en][Googlebot - Search Console Help]]
 Googlebot is Google's web crawling bot (sometimes also called a "spider"). Crawling is the process by which Googlebot discovers new and updated pages to be added to the Google index.
** [[https://www.youtube.com/watch?v=O0UgY-DmFbU][Emacs Rocks! Episode 01: From var to this - YouTube]]
 http://emacsrocks.com - Rocking emacs tricks and tips screencast.
** [[https://www.flickr.com/photos/tags/emacs][emacs photos on Flickr | Flickr]]
 Sacha Chua's photos
** [[https://media.libreplanet.org/][GNU MediaGoblin]]
  This site hosts media about free software and the amazing community that uses and builds it. Much of the media is from our yearly LibrePlanet conference in Cambridge, MA, USA, but some is from other events.

 This site and the conference are run by the Free Software Foundation, a nonprofit with three decades of experience promoting and defending computer user freedom. The site itself is running GNU MediaGoblin, a wonderful free media hosting platform. Enjoy!
** [[https://www.youtube.com/watch?v=WARpRQ3XBEY][10 Самых ожидаемых аниме зимы 2017 года по мнению японцев - YouTube]]
 10 Самых ожидаемых аниме зимы 2017 года по мнению японцев
 HelloPal: https://goo.gl/dblmhl
 В этом видео я рассказываю о 10 самых ожидаемых аниме зимы 2017 года по мнению японцев. Этой зимой выходит довольно много картин различного жанра, но пользовательским голосованием в Японии были выбраны именно эти 10 аниме. Согласны ли вы с этим рейтингом? Какой у вас топ 10 самых ожидаемых аниме зимы 2017 года?
** [[http://vimgolf.com/][VimGolf - real Vim ninjas count every keystroke!]]
 Real Vim ninjas count every keystroke - do you?
** [[https://www.youtube.com/watch?v=wQiobWLa6k4][Можно ли припаять 6 пин разъём на видеокарту если его нет - YouTube]]

 Можно ли припаять 6 пин разъём на видеокарту если его нет
** [[https://www.youtube.com/watch?v=f6ji-QcOo_U][Learn Python Programming for Free Today! - YouTube]]
 Learn Python Programming and take your programming skills to the next level in this free screen capture HD video tutorial course. You will start with installing Python and going through your first program, before navigating through the interfaces and moving into Object Orientated Programming. Get access to the full course at a huge 95% discount, which has 8+ hours of HD video at https://www.udemy.com/learn-python-3-...

 You get a comprehensive free course here covering the basics of Python Programming. The amazing thing is that you will be able to learn this in one day and take your skills to an expert level. Here is a complete list of what you will learn so that you can skip to any important parts.
** [[https://www.youtube.com/user/anilibriatv/about][AniLibria.Tv - YouTube]]


 AniLibria - некоммерческий проект по озвучиванию и адаптации зарубежных сериалов, мультфильмов и аниме, аниме-обзорам, видеоблогам, рецензиям.

 Нашей особенностью является стабильная и качественная работа над тем контентом, который мы предоставляем пользователям.
 Нашей целью является достижение большой популярности ресурса AniLibria.Tv, чтобы впоследствии начать озвучивать аниме в дубляже по лицензии от Японцев и/или выпускать на постоянной основе собственные мультфильме в стиле, максимально приближенном к аниме.
 Наши успехи на данном этапе: сейчас мы обошли большинство своих конкурентов в озвучивании, впереди остаются лишь наши вечные конкуренты по имени AniDub.
** [[http://www.anilibria.tv/][AniLibria.TV - Так звучит аниме! Озвучка аниме для домашнего просмотра.]]
  Вы можете смотреть аниме онлайн или скачать аниме с трекера, а так же заказать аниме на озвучку для бесплатного домашнего ознакомительного просмотра. Все материалы на сайте предоставлены только для ознакомления, вы обязаны удалить их в течение суток после скачивания, в случаях нарушения авторских прав - обращайтесь на почту lupin@anilibria.tv и мы решим вашу проблему. Самая качественная озвучка для бесплатного просмотра на бесплатной основе - AniLibria.TV, заходите к нам, у нас вам всегда рады!
** [[http://dic.academic.ru/][Словари и энциклопедии на Академике]]
 Экспорт словарей на сайты, сделанные на PHP,
 Joomla,
 Drupal,
 WordPress, MODx.
** [[http://www.blinn.edu/brazos/matheng/jcoffelt/graphics/files/ege/ortho/ortho_page5.htm][Line Creation]]
 Rules of Line Creation and Use
** [[http://www.artrecept.com/risunok/zhivotnye/][Как рисовать животных: кошку собаку медведя слона]]
 Нашу планету населяет огромное количество видов животных, и все они обладают своими особенностями, яркими отличительными чертами. Каждое живое существо по-своему интересно, красиво и уникально.
** [[https://www.youtube.com/watch?v=GSJ4BXsR5Xw][GPL LGPL BSD MIT EULA MADNESS! - YouTube]]
 The differences between common software licenses in use today.
** [[http://kodi.wiki/view/backup][Just a moment...]]
  DDoS protection by CloudFlare
** [[https://github.com/spiderbit/kodi-remote.el][spiderbit/kodi-remote.el: Emacs Remote Control functions for Kodi]]
 Emacs Remote Control for Kodi Including a function to send youtube and other urls to kodi

     see youtube-dl for supported sites
** [[https://github.com/K0HAX/spacemacs-emms][K0HAX/spacemacs-emms: Emms layer for Spacemacs]]
 The main purpose of this elisp is to install EMMS inside Spacemacs.
** [[https://github.com/dochang/emms-player-mpv][dochang/emms-player-mpv: mpv support for EMMS]]
 This library provides a player that uses mpv for EMMS. It supports pause and seeking. For loading subtitles automatically, try adding autosub-match=fuzzy to your ~/.mpv/config, see mpv manual for more.

 This library is based on `emms-player-mplayer.el' in EMMS.
** [[https://github.com/pft/mingus][pft/mingus: GNU Emacs control of Music Player Daemon (MPD)]]
 Mingus is a frontend for GNU Emacs to the Music Player daemon. The interface closely, though not strictly, resembles that of ncmpc, which I had been using before (the main drawback of ncmpc for me was it’s apparent lack of support for unicode). It has some advantages over other clients, mainly in the field of playlist editing. This is achieved through marking and regions as you are used too in emacs and in dired. Mingus also provides a point-of-insertion for inserting new songs. This can be handy to drop a song after the currently playing one (enqueue), but is more flexible. Mingus is distributed under the GPL.
** [[https://www.gnu.org/manual/manual.html][GNU Manuals Online - GNU Project - Free Software Foundation]]
 This table lists official GNU packages with links to their primary documentation, where available. When a package has several associated manuals, they are all listed. If a package has no specific manual online, the link just goes to the package's home page (which is also linked to explicitly).
** [[https://www.gnu.org/software/libc/][The GNU C Library]]
 What is glibc?

 The GNU C Library project provides the core libraries for the GNU system and GNU/Linux systems, as well as many other systems that use Linux as the kernel. These libraries provide critical APIs including ISO C11, POSIX.1-2008, BSD, OS-specific APIs and more. These APIs include such foundational facilities as open, read, write, malloc, printf, getaddrinfo, dlopen, pthread_create, crypt, login, exit and more.

 The GNU C Library is designed to be a backwards compatible, portable, and high performance ISO C library. It aims to follow all relevant standards including ISO C11, POSIX.1-2008, and IEEE 754-2008.

 The project was started circa 1988 and is almost 30 years old. You can see the complete project release history on the wiki.

 Despite the project's age there is still a lot to do so please Get Started and Get Involved!
 Current Status

 The GNU C Library releases every 6 months. See the NEWS file in the glibc sources for more information.

     The current stable version of glibc is 2.24, released on August 5, 2016.
     The current development version of glibc 2.25, releasing on or around February 1, 2017.
** [[https://github.com/franziskuskiefer/app-keys-gnome-shell-extension][franziskuskiefer/app-keys-gnome-shell-extension: Unity-like shortcuts for gnome dock applications]]
 Adds Super+NUM shortcuts for activating applications from dash. Extension can be installed from https://extensions.gnome.org/extension/413/dash-hotkeys/
** [[https://github.com/phocean/TopIcons-plus][phocean/TopIcons-plus]]
 Topicons Plus is an alternative to the Gnome Shell Legacy Tray, which is hidden most of the time and generally considered inconvenient.

 It brings all icons to back to the top panel, as with most desktop environments.
** [[https://www.youtube.com/channel/UCTF-G2t8p9toWdhe3777waw/about][Simple BSD - YouTube]]
  Joined Mar 10, 2015
** [[https://www.gnu.org/manual/manual.html][GNU Manuals Online - GNU Project - Free Software Foundation]]
 This table lists official GNU packages with links to their primary documentation, where available. When a package has several associated manuals, they are all listed. If a package has no specific manual online, the link just goes to the package's home page (which is also linked to explicitly).

 Many packages could be listed in any of several categories, but for the table here just one has to be chosen, usually following the Free Software Directory.
** [[https://www.gnu.org/software/gnu-c-manual/][The GNU C Reference Manual - GNU Project - Free Software Foundation]]
  The GNU C Reference Manual is a reference for the C programming language, as implemented by the GNU C Compiler.

 This manual is strictly a reference, not a tutorial. Its aim is to cover every linguistic construct in GNU C, but not the library functions (which are documented elsewhere). This manual would probably not make a good introductory book for new programmers, although those who know languages other than C should be able to learn C using it.

 The v0.2.5 release of the manual is now available, which includes a number of corrections suggested by readers. If you don't feel like building the manual from the Texinfo source, you can also read an HTML version or PDF version of the manual.

 For additional information, please see the manual's project page at Savannah.
** [[https://gcc.gnu.org/onlinedocs/][GCC online documentation - GNU Project - Free Software Foundation (FSF)]]
 GCC online documentation
 Latest releases

 These are manuals for the latest full releases.
** [[https://www.gnu.org/software/libc/manual/][The GNU C Library - GNU Project - Free Software Foundation (FSF)]]
 This manual (libc, aka glibc) is available in the following formats:

     HTML - entirely on one web page.
     HTML - one web page per node.
     HTML compressed (gzipped tar file) - with one web page per node.
     Info document (gzipped tar file).
     ASCII text compressed (gzipped).
     TeX dvi file (gzipped).
     PDF file.
     Texinfo source (gzipped tar file).
** [[https://www.reddit.com/r/emacs/comments/2d37bo/info_manuals_in_debian_and_ubuntu_some_information/][Info Manuals in Debian and Ubuntu some information : emacs]]


 Almost all GNU project languages and utilities have manuals in Info format. Unfortunately for us users, the Debian people decided that the GNU Free Documentation License is a "non-free" license. When the GNU project switched to using it for manuals the Debian people put them in a non-free repository. In my opinion, the behaviour of both sides was bad. Debian derivatives like Ubuntu keep that structure.
** [[https://github.com/politza/python-info/][politza/python-info]]

     Install the latest sphinx with python2 .
     Download the desired python distribution.
     Build the info file as follows.
** [[https://github.com/iammeat/POSTAL-1-Open-Source][iammeat/POSTAL-1-Open-Source]]


     C++ 61.8% Objective-C 27.9% C 10.0% Other 0.3%
** [[https://proglib.io/p/youtube-python-channels/][9 Youtube-каналов для изучения Python - Библиотека программиста]]
 Мы собрали 9 лучших каналов на YouTube для освоения и дальнейшего изучения языка программирования Python.
 1. sentdex

 Туториалы по Питону для продвинутых. На канале можно найти материалы по машинному обучению, анализу данных, робототехнике, веб-разработке, разработке игр и многое другое.
 2. Chris Hawkes

 На данном канале вы сможете найти материалы не только по языку программирования Python, но узнать подробнее, что такое ReactJS, Django и прочее.
 3. ИМКН УрФУ

 Языки сценариев — видеолекции по курсу «Языки сценариев», читаемому в Институте математики и компьютерных наук Уральского федерального университета. Курс посвящен третьей версии языка программирования Python.
 4. Moscow Python

 MoscowPython — сообщество, появившееся в 2012-м году под именем MoscowDjango. Сегодня на встречи собирается больше 200 человек, и сообщество активно сотрудничает с такими компаниями, как Mail.Ru Group, Rambler&Co, Яндекс, #tceh и другими.
 5. PyCon 2016

 Большая коллекция записей докладов с конференции PyCon 2016, проходившей в Портленде.
 6. PyCon 2015

 Огромная коллекция докладов c международной конференции по самым различным темам, которые связаны с языком программирования Питон.
 7. PyCon 2014

 Доклады с конференции PyCon 2014, которая проходила в Монреале.
 8. Next Day Video

 Коллекция лекций и докладов по Питону.
 9. PyData

 PyData – собрание пользователей и разработчиков инструментов для анализа данных в Python. Цель — предоставить разработчикам-энтузиастам место для того, чтобы делиться друг c другом идеями и опытом о применении языка программирования и его инструментов для решения задач в управлении, обработке, аналитике и визуализации данных.
** [[https://www.slac.stanford.edu/comp/unix/gnu-info/emacs_26.html][GNU Emacs Manual - Compiling and Testing Programs]]
  The previous chapter discusses the Emacs commands that are useful for making changes in programs. This chapter deals with commands that assist in the larger process of developing and maintaining programs.
** [[https://github.com/nick96/basic-c-compile][nick96/basic-c-compile: Emacs package to create a Makefile, compile and run a C file]]
 The purpose of this package is to automate come of the basic and repetetive tasks involved in C programming. All the tasks that this pacakge automate are language agnostic and whilst the defaults are C specific you can set them to any statically compiled language.
** [[https://github.com/syohex/emacs-quickrun][syohex/emacs-quickrun: Run command quickly. This packages is inspired quickrun.vim]]
 quickrun.el is a extension to execute editing buffer. quickrun.el is similar to executable-interpret, but quickrun.el provides more convenient commands. quickrun.el execute not only script languages(Perl, Ruby, Python etc), but also compiling languages(C, C++, Go, Java etc) and markup language.
** [[https://github.com/bbatsov/projectile][bbatsov/projectile: Project Interaction Library for Emacs]]
 Projectile is a project interaction library for Emacs. Its goal is to provide a nice set of features operating on a project level without introducing external dependencies (when feasible). For instance - finding project files has a portable implementation written in pure Emacs Lisp without the use of GNU find (but for performance sake an indexing mechanism backed by external commands exists as well).
** [[https://www.youtube.com/watch?v=o_RKfLrmCEs][C Programming Tutorial 56, String Functions pt.7 - YouTube]]
 Uploaded on Feb 5, 2012
** [[https://github.com/jlsutherland/doc2text][jlsutherland/doc2text: Detect text blocks and OCR poorly scanned PDFs in bulk. Python module available via pip.]]
 Developing text corpora can be a massive pain in the butt. Much of the text data we are interested in as scientists are locked away in pdfs that are poorly scanned. These scans can be off kilter, poor resolution, have a hand in them... and if you OCR these scans without fixing these errors, the OCR doesn't turn out so well. doc2text was created to help researchers fix these errors and extract the highest quality text from their pdfs as possible.
** [[https://github.com/politza/python-info][politza/python-info]]

     Install the latest sphinx with python2 .
     Download the desired python distribution.
     Build the info file as follows.

 cd Python-x.y.z/Doc
 sphinx-build -b texinfo -d build/doctrees . build/texinfo
 cd build/texinfo && make

 Or use the Makefile.
** [[https://www.youtube.com/watch?v=Gn0YiN8uzrg][Xubuntu on Nexus 7 {native, multiROM} - it's actually useful - YouTube]]
 Published on Sep 29, 2013

 Xubuntu = ubuntu +Xfce, and its running awesomely on the nexus 7 (the old one). In this in-depth video I will describe my experience with it and show how well some common tasks work so you could decide if its worth the effort of getting it running (it definitely is).

 This video was moved from a different (removed) account - originally uploaded at August 29th, 2013.

 Links & tips:

 http://forum.xda-developers.com/showt... - multiROM, you can get pretty much everything from there, there is also a short guide on how to get Ubuntu working with multiROM which includes link to download Ubuntu 13.04 for he N7. There are also links for kernels with kexec-hardboot patch (required by multiROM) and other guides for related things...

 Install Xfce: "sudo apt-get install xubuntu-desktop" in ubuntu terminal or just search "xubuntu-desktop" in ubuntu software center.

 Remove Unity after installing Xfce (you don't have to): http://askubuntu.com/questions/292394... (it's in the first answer...)

 Get Flash player working: http://hwswbits.blogspot.cz/2013/04/f...

 Fix touchscreen rotation:
 in the terminal: xinput (to find id of elan-touchscreen device - 7 in my case)
 xinput set-prop 7 "Coordinate Transformation Matrix" 0 1 0 -1 0 1 0 0 1 (to rotate the touchscreen right - same rotation as the display obviously)

 Running Windows and Age of Empires: http://www.youtube.com/watch?v=zN3_td...

 If you are bored with your (now old) nexus 7, this is a great way to revive it and make it do new cool (and most importantly useful) things... Nothing from the process of getting it running was particularly difficult, but if you don't have basic knowledge about flashing roms & kernels, don't know what a custom recovery is, etc. - than you should start with tutorials on that, just use google. The same thing applies about using Ubuntu/Linux.

 I encourage you to make questions, I will answer any question which isn't answered in the video or in this description, if it will be important i will also add the answer to this description.
** [[https://habrahabr.ru/post/303600/][Emacs как редактор кода для Python и Golang / Хабрахабр]]
 Когда полгода назад я решил перейти с Vim на Emacs сначала я решил поискать статьи по настройке последнего на хабре. К моему удивлению нашлась всего одна статья в которой рассказывали, как настроить данный редактор для работы с Python. У меня было 2 года опыта работы с vim и имелись определенные требования, которые не были затронуты в данной статье. Вообще рускоязычных статей про работу в Emacs над Python очень мало на просторах интернета. Я не буду рассказывать про тонкости настройки самого Emacs, для этого не хватит даже отдельной статьи.
** [[https://letsencrypt.org/][Let's Encrypt - Free SSL/TLS Certificates]]
 Let’s Encrypt is a free, automated, and open Certificate Authority.

 We are a 501(c)(3) nonprofit. We're running a crowdfunding campaign to support our operations, please consider contributing now!
** [[https://github.com/doxygen/doxygen][doxygen/doxygen: Official doxygen git repository]]
 Doxygen is the de facto standard tool for generating documentation from annotated C++ sources, but it also supports other popular programming languages such as C, Objective-C, C#, PHP, Java, Python, IDL (Corba, Microsoft, and UNO/OpenOffice flavors), Fortran, VHDL, Tcl, and to some extent D.
** [[http://ogp.me/][The Open Graph protocol]]
 The Open Graph protocol enables any web page to become a rich object in a social graph. For instance, this is used on Facebook to allow any web page to have the same functionality as any other object on Facebook.
** [[https://en.wikipedia.org/wiki/Piwik][Piwik - Wikipedia]]
 Piwik (pronounced /ˈpiːwiːk/[1]) is a free and open source web analytics application written by a team of international developers that runs on a PHP/MySQL webserver. It tracks online visits to one or more websites and displays reports on these visits for analysis. As of September 2015, Piwik was used by nearly 900 thousand websites,[2] or 1.3% of all websites,[3] and has been translated to more than 45 languages.[4] New versions are regularly released every few weeks.[5]
** [[https://github.com/python-pillow/Pillow][python-pillow/Pillow: The friendly PIL fork (Python Imaging Library)]]
 Pillow is the friendly PIL fork by Alex Clark and Contributors. PIL is the Python Imaging Library by Fredrik Lundh and Contributors.
** [[https://github.com/ChrisAntaki/visited-links-firefox][ChrisAntaki/visited-links-firefox: Disables visited link styles.]]
 This plugin cleanly disables visited link styles.
** [[https://github.com/Malabarba/camcorder.el][Malabarba/camcorder.el: Tool for capturing screencasts directly from Emacs.]]
 Tool for capturing screencasts directly from Emacs.

     To use it, simply call M-x camcorder-record.
     A new smaller frame will popup and recording starts.
     When you’re finished, hit F12.

 View screencasts are generated in ogv format, and you can even pause the recording with F11! You can also convert the .ogv file to a gif by issuing the command M-x camcorder-convert-to-gif.

 If you want to record without a popup frame, use M-x camcorder-mode.
** [[http://jr0cket.co.uk/2017/01/spacemacs-creating-animated-gifs-videos.html][camcorder.el - Creating Animated Gifs & Videos for Spacemacs | jr0cket]]
 Using animated gifs are a lightweight way to show Emacs in action, as can be seen at Emacs Gifs.
** [[https://github.com/caiorss/clip.jar][caiorss/clip.jar: Utility to paste images from clipboard to Emacs org-mode or any markdown.]]
 Clip is a self-contained command line utility written in Scala to extract images from clipboard and save it to a file. It is a module of org-wiki project.
** [[https://html5up.net/][HTML5 UP! Responsive HTML5 and CSS3 Site Templates]]
 ... makes spiffy HTML5
 site templates that are:

     Fully
     Responsive Built on intelligent
     HTML5 + CSS3 Super
     Customizable100% Free under the
     Creative Commons
** [[https://github.com/ctfs/write-ups-2014][ctfs/write-ups-2014: Wiki-like CTF write-ups repository, maintained by the community. 2014]]
 There are some problems with CTF write-ups in general:

     they’re scattered across the interwebs
     they don’t usually include the original files needed to solve the challenge
     some of them are incomplete or skip ‘obvious’ parts of the explanation, and are therefore not as helpful for newcomers
     often they disappear when the owner forgets to renew their domain or shuts down their blog

 This repository aims to solve those problems.

 It’s a collection of CTF source files and write-ups that anyone can contribute to. Did you just publish a CTF write-up? Let us know, and we’ll add a link to your post — or just add the link yourself and submit a pull request. Spot an issue with a solution? Correct it, and send a pull request.
** [[https://github.com/joshnewlan/say_what][joshnewlan/say_what: Using speech-to-text to fully check out during con calls]]
 This script listens to meetings I'm supposed to be paying attention to and pings me on hipchat when my name is mentioned.

 It sends me a transcript of what was said in the minute before my name was mentioned and some time after.

 It also plays an audio file out loud 15 seconds after my name was mentioned which is a recording of me saying, "Sorry, I didn't realize my mic was on mute there."

 Uses IBM's Speech to Text Watson API for the audio-to-text.

 Currently relies on Splunk as a data store, but can be extended to use an open-source tool instead.

 Relies on Uberi's SpeechRecognition PyAudio and API wrapper: https://github.com/Uberi/speech_recognition
** [[https://github.com/malb/emacs.d/tree/48508219453ebb542e6fec370bb49fba9980c2a2][malb/emacs.d at 48508219453ebb542e6fec370bb49fba9980c2a2]]
 These are the relevant bits of my emacs config. Some stuff not suitable for general consumption is missing. Hence, you cannot just clone this repository and try it. I have no intention of changing this.
** [[http://orgmode.org/worg/org-contrib/org-protocol.html][org-protocol.el – Intercept calls from emacsclient to trigger custom actions]]
 Intercept calls from emacsclient to trigger
** [[http://docs.getpelican.com/en/stable/settings.html][Settings — Pelican 3.7.0 documentation]]
 If you want to use FeedBurner for your feed, you will likely need to decide upon a unique identifier. For example, if your site were called “Thyme” and hosted on the www.example.com domain, you might use “thymefeeds” as your unique identifier, which we’ll use throughout this section for illustrative purposes. In your Pelican settings, set the FEED_ATOM attribute to thymefeeds/main.xml to create an Atom feed with an original address of http://www.example.com/thymefeeds/main.xml. Set the FEED_DOMAIN attribute to http://feeds.feedburner.com, or http://feeds.example.com if you are using a CNAME on your own domain (i.e., FeedBurner’s “MyBrand” feature).

 There are two fields to configure in the FeedBurner interface: “Original Feed” and “Feed Address”. In this example, the “Original Feed” would be http://www.example.com/thymefeeds/main.xml and the “Feed Address” suffix would be thymefeeds/main.xml.
** [[https://github.com/bitlbee/bitlbee][bitlbee/bitlbee: An IRC to other chat networks gateway]]
 An IRC to other chat networks gateway
** [[https://vk.com/im?sel=c2][Conversations]]
 помогло конвертированием шрифта otf-->ttf и его положение не в системе. а непосредственно в папку в префиксе вайна запихал. кажется. Или наоборот, не помню
** [[https://www.youtube.com/watch?v=L_0x3lYpoNY][ЭРА RADEONa: Native games {06.01.2017, 23.00 MSK}-stream 720p - YouTube]]
 Купил AMD Radeon RX 460 3Gb NITRO OC
 Задаем вопросы, делимся своим мнением, обсуждаем что будет интересно увидеть в серии видео о АМД карте)
** [[https://www.maketecheasier.com/install-flatpak-on-ubuntu/][How to Install FlatPak on Ubuntu - Make Tech Easier]]
 Luckily, there’s a Flatpak for that. Fedora users has taken it upon themselves to serve up the official Telegram chat client in the form of a Flatpak. This means it’ll always have up-to-date binaries, and installing Telegram on new machines can be just a few commands away.
** [[https://github.com/fgallina/mu4e-multi][fgallina/mu4e-multi: Multiple account facilities for mu4e]]
 mu4e-multi just depends on setting the mu4e-multi-account-alist properly and calling mu4e-multi-enable.

 As an example let's assume you have two email accounts: personal and work. For handling such accounts mu4e-multi assumes your maildir's layout is as follows:
** [[https://github.com/myuhe/org-gcal.el][myuhe/org-gcal.el: Org sync with Google Calendar]]

     Fetch google calendar event
     Post/edit org element
     Sync between Org and Gcal
** [[https://github.com/anishathalye/git-remote-dropbox][anishathalye/git-remote-dropbox: A transparent bridge between Git and Dropbox - use a Dropbox (shared) folder as a Git remote!]]
 git-remote-dropbox is a transparent bidirectional bridge between Git and Dropbox. It lets you use a Dropbox folder or a shared folder as a Git remote!

 This Git remote helper makes Dropbox act like a true Git remote. It maintains all guarantees that are provided by a traditional Git remote while using Dropbox as a backing store. This means that it works correctly even when there are multiple people operating on the repository at once, making it possible to use a Dropbox shared folder as a Git remote for collaboration.

 Once the helper is installed, using it is as simple as adding a remote like dropbox://path/to/repo.
** [[https://github.com/lxde/pavucontrol-qt][lxde/pavucontrol-qt: A Pulseaudio mixer in Qt (port of pavucontrol)]]
 pavucontrol-qt is the Qt port of volume control pavucontrol of sound server PulseAudio.

 As such it can be used to adjust all controls provided by PulseAudio as well as some additional settings.

 The software belongs to the LXQt project but its usage isn't limited to this desktop environment.
** [[https://github.com/equalsraf/neovim-qt][equalsraf/neovim-qt: Neovim client library and GUI, in Qt5.]]
 Neovim client library and GUI, in Qt5.
** [[https://github.com/jonian/acestream-launcher][jonian/acestream-launcher: Acestream Launcher allows you to open Acestream links with a Media Player of your choice]]
 Acestream Launcher allows you to open Acestream links with a Media Player of your choice
** [[http://hakunin.com/six-ansible-practices][6 practices for super smooth Ansible experience by Maxim Chernyak]]
 I started porting my setup from Chef to Ansible a few weeks ago. Having had plenty of experience with Chef gave me a pretty good idea of what I wanted to achieve. One of the main advantages I see in Ansible is the ability to drive your server setup via ssh from your own machine. If you don’t have 100s of servers (update: actually more like tens of thousands, see the comment by mpdehaan), this agentless “push” approach is very powerful. You get to simplify things tremendously in ways like
** [[https://vk.com/im?sel=c5][Conversations]]
 Расписание. На 2 этаже слева в коридоре. В том корпусе где деканат
 на 3.
** [[https://en.wikipedia.org/wiki/SpinRite][SpinRite - Wikipedia]]
 SpinRite is a computer program for scanning magnetic data storage devices such as hard disks, recovering data from them and refreshing their surfaces. The first version was released in 1987 by Steve Gibson. Version 6.0, still current as of January 2017, was released in 2004.[1] SpinRite is run from a bootable medium (floppy disc, optical disc, bootable external storage device such as a USB stick) on a PC-compatible computer. Spinrite uses its own operating system and ignores any boot loader or file system structure that may be on the drive being examined.
** [[https://tldrlegal.com/][TLDRLegal - Software Licenses Explained in Plain English]]
 Lookup popular software licenses summarized at-a-glance.
** [[https://github.com/eonpatapon/gnome-shell-extension-caffeine/issues/67][Caffeine causes gnome-session-quit time out in GNOME 3.20 · Issue #67 · eonpatapon/gnome-shell-extension-caffeine]]
 The issue only happened once when you first call power off button, and second time or more is fine.

     GUI

     if click "power off" button in control menu, which is located on the right-top of main screen, it will take long time (about 20 second) to start power off menu and I couldn't do nothing during this time but move cursor.

     Command-Line

 Try to use command line to call the power off menu with "gnome-session-quit --power-off" in terminal to check the error information. it still take long time and only could move cursor. the error message below:
** [[https://github.com/eonpatapon/gnome-shell-extension-caffeine/issues/76][delay time between shutdown select and when windows appears · Issue #76 · eonpatapon/gnome-shell-extension-caffeine]]
 On click on shutdown button inside the top menu (ref. attach. n.1) the delay time until the windows appear are about 30 seconds. Occur only on the first time on the session.
 Case 1: caffeine disabled
 instantly windows appear.
 Case 2: caffeine enabled
 first selection 30 seconds for windows appear.
 Case 3: caffeine enabled - with the second attempt
 first selection 30 seconds for windows appear, then i press cancel button. On second attempt the windows appear instantly.
 Case 4: caffeine enabled - gnome-shell restarted
 after case 3 i restart gnome-shell and the issue return.
** [[https://github.com/plone/planet.plone.org][plone/planet.plone.org: Planet Plone Site Configuration and buildout. Add your feed here.]]
 This is the buildout for Planet Venus (an RSS aggregator) for Plone, the content management system. This buildout provides the configuration for Planet Venus, normally served at http://planet.plone.org/.
** [[http://planetperl.ru/][Русский Перл]]

 Язык занятный. Параллелить и устраивать межпроцессное общение просто.
** [[http://www.planetplanet.org/][Planet Feed Reader]]
  Planet is an awesome 'river of news' feed reader. It downloads news feeds published by web sites and aggregates their content together into a single combined feed, latest news first.
** [[https://github.com/insanum/gcalcli][insanum/gcalcli: Google Calendar Command Line Interface]]
 gcalcli is a Python application that allows you to access your Google Calendar(s) from a command line. It's easy to get your agenda, search for events, add new events, delete events, edit events, and even import those annoying ICS/vCal invites from Microsoft Exchange and/or other sources. Additionally, gcalcli can be used as a reminder service and execute any application you want when an event is coming up.
** [[http://pragmaticemacs.com/emacs/how-i-view-my-google-calendar-agenda-in-emacs/][How I view my google calendar agenda in Emacs | Pragmatic Emacs]]
  I use gcalcli to access my google calendar from the command line, and run it as a cron job using gcalcli agenda and redirecting the output to a file. Then in Emacs I have a simple function to display the contents of that file.
** [[https://www.khanacademy.org/math/precalculus/imaginary-and-complex-numbers/the-imaginary-numbers/v/calculating-i-raised-to-arbitrary-exponents][Powers of the imaginary unit | What are the imaginary numbers? | Imaginary and complex numbers | Precalculus | Khan Academy]]
 Sal gives several examples of how we simplify high powers of i. For instance, i^100=1. Created by Sal Khan.
** [[https://www.symbolab.com/solver/complex-numbers-calculator/i%255E%257B15%257D][i^{15} - Complex Numbers Calculator - Symbolab]]
 Simplify complex expressions using algebraic rules step-by-step
** [[https://www.khanacademy.org/math/algebra2/rational-expressions-equations-and-functions/simplify-rational-expressions/v/simplifying-rational-expressions-introduction][Intro to rational expression simplification | Simplifying rational expressions | Rational expressions, equations, and functions | Algebra II | Khan Academy]]
 Sal explains what it means to simplify a rational expression and why we would want to do that. Just don't forget the excluded values! Created by Sal Khan and CK-12 Foundation.
** [[http://www.emathhelp.net/notes/algebra-2/trigonometry/short-multiplication-formulas/][Short Multiplication Formulas on eMathHelp]]
 In some cases the transformation of integral expression into the standart form of polynomial realize with the using of identities:
** [[https://www.sharelatex.com/learn/List_of_Greek_letters_and_math_symbols][List of Greek letters and math symbols - ShareLaTeX, Online LaTeX Editor]]


     1 Greek letters
     2 Arrows
     3 Miscellaneous symbols
     4 Binary Operation/Relation Symbols
     5 Further reading
** [[https://www.sharelatex.com/learn/Subscripts_and_superscripts][Subscripts and superscripts - ShareLaTeX, Online LaTeX Editor]]
 The use of superscripts and subscripts is very common in mathematical expressions involving exponents, indexes, and in some special operators. This article explains how to write superscripts and subscripts in simple expressions, integrals, summations, etcetera.
** [[https://www.youtube.com/watch?v=3N9beoPmbEQ][Как правильно разговаривать с гопниками? - YouTube]]
 Published on Aug 21, 2016

 Ты идешь по чужому району, и тут тебе свистят - "братан, подойди поговорим" что делать в такой ситуации? Как правильно разговаривать с гопниками?
** [[http://www.freeorion.org/index.php/Main_Page][FreeOrionWiki]]
 FreeOrion is a free, open source, turn-based space empire and galactic conquest (4X) computer game being designed and built by the FreeOrion project. FreeOrion is inspired by the tradition of the Master of Orion games, but is not a clone or remake of that series or any other game.
** [[https://www.khanacademy.org/math/algebra-home/alg-polynomials/alg-polynomial-remainder-theorem/v/polynomial-remainder-theorem][Intro to the Polynomial Remainder Theorem | Polynomial Remainder Theorem | Polynomial expressions, equations, & functions | Algebra | Khan Academy]]
 The Polynomial Remainder Theorem allows us to determine whether a linear expression is a factor of a polynomial expression easily. Check it out!
** [[https://github.com/viktomas/godu][viktomas/godu: Simple golang utility helping to discover large files/folders.]]
 Tired of looking like a noob with Disk Inventory X or SpaceMonger? Do you want something that

     can do the job
     works in terminal
     makes you look cool
     is written in Golang
     you can contribute to
** [[https://github.com/livibetter/READYT][livibetter/READYT: A CLI lover wants you to READYT]]
 Mostly short, but not tutorials, almost all without audio tracks, no horrible music, no terribly unnecessary transitioning texts. Go straight to the points of what I want to show you about a program.

 There will be description about my thoughts, possibly some short notes about controls or command-line options. My video includes the description, video and description together are the whole video, so be sure to read the description.

 In the end of description, links and information about version, programming languages and major dependencies or libraries, the author(s), and the license.
** [[https://github.com/nielssp/colorgrab][nielssp/colorgrab: A cross-platform color picker]]

     Pick colors from screen.
     Magnify screen.
     Convert between color models and representations.
     Palette tool.
** [[https://www.khanacademy.org/math/algebra2/arithmetic-with-polynomials/long-division-of-polynomials/v/polynomial-division][Intro to long division of polynomials | Long division of polynomials | Arithmetic with polynomials | Algebra II | Khan Academy]]
 [[https://www.khanacademy.org/math/algebra2/arithmetic-with-polynomials/long-division-of-polynomials/v/polynomial-division][Intro to long division of polynomials | Long division of polynomials | Arithmetic with polynomials | Algebra II | Khan Academy]]
** [[https://www.khanacademy.org/math/algebra/algebra-functions/evaluating-functions/v/what-is-a-function][(3) What is a function? | Evaluating functions | Functions | Algebra I | Khan Academy]]
 Functions assign a single unique output for each of their inputs. In this video, we see examples of various kinds of functions. Created by Sal Khan.
** [[https://vk.com/eltech6871?from=top][ЛЭТИ, группа 6871]]
 Электроэнергетика и электротехника, 1 курс
** [[https://www.youtube.com/watch?v=UsIHdrpNSbE][СТУДИИ КОТОРЫЕ ПОГУБИЛА ELECTRONIC ARTS - YouTube]]
 Published on Jan 2, 2017

 Electronic Arts может и исправляется, но за ней всё ещё следует кличка самой ужасной игровой корпорации в мире. Так что сегодня мы решили вспомнить, за что они эту кличку получили.
** [[https://zblock.co/][zBlock]]
  Forum software by XenForo™ ©2010-2016 XenForo Ltd.
 Перевод: XF-Russia.ru
** [[https://youpartnerwsp.com/join][Медиа сеть партнерских каналов VSP Group - Официальный агрегатор партнерских каналов на YouTube]]
 Партнерская программа VSP Group предоставляет возможность монетизации вашего канала и получения "Премиум аккаунта" на платформе YouTube в составе нашей Медиа сети.
** [[https://www.emacswiki.org/emacs/OpenWith][EmacsWiki: Open With]]
 Open files with external applications. Works from everywhere (find-file, dired, etc.).
** [[https://www.reddit.com/r/emacs/comments/5mff61/anyone_got_any_good_advanced_orgmode_resources/][Anyone got any good advanced org-mode resources? : emacs]]
 I'm starting to get into org-mode, and am wondering if anyone's got a good blog or otherwise educational resource to point me to. I know I can just read the emacs/org manual, but a more enjoyable exposition would be pretty cool
** [[https://www.youtube.com/watch?v=P_cDP4ZGIhE][Cheat For Test - YouTube]]
 Uploaded on Nov 12, 2008

 One more way to make a cheat sheet
** [[https://www.youtube.com/watch?v=SNQ08e1xGC0][Делаем резьбу в программе КОМПАС 3D - YouTube]]
 Published on Feb 26, 2014

 КОМПАС V14. Создаем болт с произвольной резьбой и шляпкой.
** [[http://www.eltech.ru/ru/fakultety/otkrytyy-fakultet/uchebn-dlya-studentov-zaochnoy-formy-obucheniya/pamjatka][http://www.eltech.ru/ru/fakultety/otkrytyy-fakultet/uchebn-dlya-studentov-zaochnoy-formy-obucheniya/pamjatka]]
 ПАМЯТКА

 для студентов 1-го курса 1-го семестра заочной формы обучения

  (прием 2016 года)

 Деканат Открытого факультета (заочное обучение) СПбГЭТУ  расположен в 3 корпусе, 3 этаж, комн. 3309
** [[https://www.symbolab.com/solver/complex-numbers-calculator/%255Cleft(8-6i%255Cright)%255Cleft(8%252B6i%255Cright)][(8-6i)(8+6i) - Complex Numbers Calculator - Symbolab]]
  Simplify complex expressions using algebraic rules step-by-step
** [[https://www.youtube.com/watch?v=wed_lYcslRM][Complex Numbers in Polar Form - YouTube]]
 I explain the relationhip between complex numbers in rectangular form and polar form. I also do an example of converting back and forth between the two forms.
** [[https://www.youtube.com/watch?v=wed_lYcslRM][Complex Numbers in Polar Form - YouTube]]
 Uploaded on Jan 13, 2012

 I explain the relationhip between complex numbers in rectangular form and polar form. I also do an example of converting back and forth between the two forms.
 At time 9:57 I should say...Converting from Polar to Rectangular is very simple. Converting from Rectangular to Polar requires you to think about the final theta measure.

 Check out http://www.ProfRobBob.com, there you will find my lessons organized by class/subject and then by topics within each class. Find free review test, useful notes and more at http://www.mathplane.com
** [[https://www.youtube.com/watch?v=tbWfxuV-IeE&list=PLAC5EA62150BD3A5A][Rewriting Powers of ' i ' - Ex 2 - YouTube]]
 Published on May 10, 2010

 Rewriting Powers of ' i ' - In this video, I take the complex number ' i ', raise it to some different powers, and simplify!
** [[https://www.youtube.com/watch?v=2bMKu1CXyB0][How do we Plot Root 2 on a Number Line? - YouTube]]
 Published on Dec 19, 2014

 View this video to understand how the square root of 2 can be plotted on a number line. To know more about Rational, Irrational and Real Numbers, please visit https://DontMemorise.com

 Don’t Memorise brings learning to life through its captivating FREE educational videos.

 New videos every week. To stay updated, subscribe to our YouTube channel : http://bit.ly/DontMemoriseYouTube

 Register on our website to gain access to all videos and quizzes:
 http://bit.ly/DontMemoriseRegister

 Subscribe to our Newsletter: http://bit.ly/DontMemoriseNewsLetter

 Join us on Facebook: http://bit.ly/DontMemoriseFacebook

 Follow us : http://bit.ly/DontMemoriseBlog
** [[https://www.youtube.com/watch?v=jXXSRzliprg][HSC Maths Ext2 - Complex Numbers - Finding Square Roots of Complex Numbers - YouTube]]
 Published on Nov 27, 2013

 Welcome to my HSC 4 Unit maths: Complex Numbers series. In this video, we see how to find the square roots of complex numbers, which will be useful for solving quadratics with complex coefficients.
** [[https://www.youtube.com/watch?v=nUyLnjgGumg][Square root in 3 seconds - math trick - YouTube]]
 Published on Mar 24, 2015

 Finding the square root is easy for any perfect square under 100! You'll be able to calculate squares faster than ever and amaze everyone with your utter genius!
 To find the square root of non perfect squares follow this link: https://www.youtube.com/watch?v=PJHtq...
** [[https://www.youtube.com/watch?v=fF5qbbAoMHc][Complex Numbers (How to find the nth root) : ExamSolutions Maths Video Tutorials - YouTube]]
 Published on Mar 11, 2013

 Go to http://www.examsolutions.net/maths-re... to see the main index of maths video tutorials and others on complex numbers and de Moivre's theorem
** [[https://www.youtube.com/watch?v=eYmHMib6fhg][Solving for Complex Numbers and Roots - YouTube]]
 Published on Mar 20, 2012

 http://tylertarver.com/math

 Solving for Complex Numbers and Roots
** [[https://www.youtube.com/watch?v=MO6qU3SCLbM][DeMoivre's Theorem: Raising a Complex Number to a Power, Ex 1 - YouTube]]
 Published on Jan 5, 2011

 DeMoivre's Theorem: Raising a Complex Number to a Power, Ex 1. In this video I give DeMoivre's theorem and use it to raise a complex number to a power. Note that our number must be in polar form!
** [[https://www.youtube.com/watch?v=C-lsvE8Rxgg][DeMoivre's Theorem - YouTube]]
 Uploaded on May 18, 2010

 Watch more videos on http://www.brightstorm.com/math/preca...

 SUBSCRIBE FOR All OUR VIDEOS!
 https://www.youtube.com/subscription_...

 VISIT BRIGHTSTORM.com FOR TONS OF VIDEO TUTORIALS AND OTHER FEATURES!
 http://www.brightstorm.com/

 LET'S CONNECT!
 Facebook ► https://www.facebook.com/brightstorm
 Pinterest ► https://www.pinterest.com/brightstorm/
 Google+ ► https://plus.google.com/+brightstorm/
 Twitter ► https://twitter.com/brightstorm_
 Brightstorm website ► https://www.brightstorm.com/
** [[https://www.youtube.com/watch?v=k4ZddA4e3a4][DeMoivre's Theorem (Mathematical Induction) - YouTube]]
 Published on Jul 25, 2012

 A quick look at DeMoivre's theorem and a qualitative explanation on how to prove something with mathematical induction

 DeMoivre's theorem (0:00)
 Mathematical Induction (2:28)
** [[https://www.youtube.com/watch?v=ZkWbvZ0yjT8][De Moivre's Theorem Example 1 - YouTube]]
 Published on May 21, 2016

 Example of how to expand a complex number using DeMoivre's Theorem
** [[http://www.mathportal.org/calculators/complex-numbers-calculator/complex-unary-operations-calculator.php][Complex numbers calculator - with detailed explanation]]


 This calculator extracts the square root, calculate the modulus, finds inverse, finds conjugate and transform complex number to polar form. The calculator will generate a detailed explanation for each operation.
** [[http://kitchingroup.cheme.cmu.edu/blog/2015/06/29/Getting-Emacs-to-read-to-me/][Getting Emacs to read to me]]
  I thought it would be interesting to have Emacs read text on the screen. Why? Sometimes I get tired of reading ;) Seriously though, this has applications in accessibility, learning to read, translation, taking a break from looking at the screen, reading emails out loud, fun and games, etc… Seems like a worthwhile endeavor!
** [[https://vk.com/im?peers=384426051_13368088&sel=c4][Диалоги]] История
 23.01 я буду в 14.30-16.00 в а.5143
 26.01 я буду в 1200-13.30 в а. 5143
 1.02 я буду в 14.30-16.00 в а.5423
 В это время вы можете придти ко мне с направлением и пересдать
** [[http://window.edu.ru/resource/396/62396][Начертательная геометрия: Конспект лекций. Скачать бесплатно онлайн в электронном виде | Единое окно]]


 В пособии рассмотрены следующие темы курса начертательной геометрии: комплексные чертежи фигур; позиционные задачи; метрические задачи; развертки поверхностей; ортогональная аксонометрия. Приведены примеры решения основных задач и даны условия задач для самостоятельного решения. Пособие предназначено для студентов всех специальностей вечерней и заочной форм обучения технических вузов.
** [[https://www.youtube.com/watch?v=SpEnXMzDZAI][Perpendicular Vectors: Dot Product - YouTube]]
 Published on Feb 28, 2013

 Determine if two vectors are perpendicular by checking if the inner product (dot product) is equal to zero.
** [[http://www.cleverstudents.ru/vectors/condition_of_vectors_perpendicularity.html][Условие перпендикулярности векторов.]]


 Для перпендикулярности двух ненулевых векторов формула и формула необходимо и достаточно, чтобы их скалярное произведение равнялось нулю, то есть, чтобы выполнялось равенство формула.
** [[http://www.webmath.ru/poleznoe/formules_13_14.php][Как найти вектор перпендикулярный вектору? Ответ на webmath.ru]]
 Для того чтобы вектор был перпендикулярен вектору необходимо, чтобы их скалярное произведение было равно нулю, то есть
** [[https://www.youtube.com/watch?v=51vgIfdBlAk][1.1 Vectors with 3 components (3 dimensions) - YouTube]]
 Uploaded on Aug 5, 2011

 http://www.rootmath.org | Linear Algebra

 We'll look at how to graph vectors with 3 components using 3-dimensional axes.
** [[https://www.khanacademy.org/math/algebra-home/alg-system-of-equations/alg-equivalent-systems-of-equations/v/king-s-cupcakes-solving-systems-by-elimination][(17) Systems of equations with elimination: King's cupcakes | Equivalent systems of equations and the elimination method | System of equations | Algebra | Khan Academy]]
 Sal uses simple elimination to figure out how many cupcakes are eaten by children and adults. Created by Sal Khan.
** [[http://ru.onlinemschool.com/math/assistance/matrix/inverse1/][Онлайн калькулятор. Обратная матрица методом алгебраических дополнений.]]
 Используя этот онлайн калькулятор для вычисления обратной матрицы методом алгебраических дополнений, вы сможете очень просто и быстро найти обратную матрицу.

 Воспользовавшись онлайн калькулятором для вычисления обратной матрицы методом алгебраических дополнений, вы получите детальное решение вашей задачи, которое позволит понять алгоритм решения задач на вычисления обратной матрицы, а также закрепить пройденный материал.
** [[https://github.com/jsvine/waybackpack][jsvine/waybackpack: Download the entire Wayback Machine archive for a given URL.]]
 Waybackpack is a command-line tool that lets you download the entire Wayback Machine archive for a given URL.

 For instance, to download every copy of the Department of Labor's homepage through 1996 (which happens to be the first year the site was archived), you'd run:
** [[https://github.com/yask123/Instant-Music-Downloader][yask123/Instant-Music-Downloader: 🎷 Downloads Music From The Web]]


     Please use gitter for all communications. I won't be able to respond individually via emailuntill Jan (busy). But I will try my best to answer all your questions via gitter.
** [[https://github.com/EvilCult/Video-Downloader][EvilCult/Video-Downloader: 下载youku,letv,sohu,tudou,bilibili,acfun,iqiyi等网站分段视频文件，提供mac&win独立App。]]
  下载youku,letv,sohu,tudou,bilibili,acfun,iqiyi等网站分段视频文件，提供mac&win独立App。 http://evilcult.github.io/Video-Downl…
** [[https://github.com/sabnzbd/sabnzbd][sabnzbd/sabnzbd: SABnzbd - The automated Usenet download tool]]
 SABnzbd is an Open Source Binary Newsreader written in Python.

 It's totally free, incredibly easy to use, and works practically everywhere.

 SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.
** [[https://github.com/np1/mps][np1/mps: Terminal based MP3 search, playback and download]]

     Search and stream music
     Search albums or single tracks
     Create playlists
     Download tracks
     Works with Python 2.7+ and 3.3+
     Works with Windows, Linux and Mac OS X
     No Python dependencies
     Requires mplayer
** [[https://github.com/pyload/pyload][pyload/pyload: Free and Open Source download manager written in Python and designed to be extremely lightweight, fully customizable and remotely manageable]]
 pyLoad is a free and open source downloader for 1-click-hosting sites
 like rapidshare.com or uploaded.to.
 It supports link decryption as well as all important container formats.
** [[https://github.com/nishad/udemy-dl][nishad/udemy-dl: Python script to download a udemy.com course, for personal offline use.]]
 Python script to download a udemy.com course, for personal offline use.
** [[https://www.khanacademy.org/math/precalculus/prob-comb/basic-prob-precalc/v/basic-probability][(17) Intro to theoretical probability | Basic probability | Probability and combinatorics | Precalculus | Khan Academy]]
 We give you an introduction to probability through the example of flipping a quarter and rolling a die. Created by Sal Khan.
** [[https://www.youtube.com/watch?v=QudbrUcVPxk][Abstract Algebra: The definition of a Group - YouTube]]
 Published on Sep 1, 2013

 Learn the definition of a group - one of the most fundamental ideas from abstract algebra.
** [[https://www.youtube.com/watch?v=6RC70C9FNXI][Abstract Algebra: The definition of a Ring - YouTube]]
 Published on Dec 29, 2013

 Learn the definition of a ring, one of the central objects in abstract algebra. We give several examples to illustrate this concept including matrices and polynomials.
** [[https://play.google.com/store/apps/details?id=com.orgzly][Orgzly: Notes & To-Do Lists - Android Apps on Google Play]]
 Orgzly is an outliner for notes and tasks. It stores notebooks in plain-text and keeps them where you choose to.
** [2017-01-21 Sat 18:01] [[http://carper.ca/blog/170/lets-try-to-learn-japanese-for-the-87th-time-plus-a-wanikani-review][Let's try to learn Japanese for the 87th time. Plus a WaniKani review.]]
 I've been trying to learn Japanese for a looong time, with varying degrees of success. It's hard in ways that might be surprising. The main problem is motivation. This is a tale of my minor successes and major failures, and then a review of my latest flavor-of-the-week, WaniKani.
** [2017-01-21 Sat 18:09] [[https://github.com/avendael/emacs-geeknote][avendael/emacs-geeknote: Use Evernote in Emacs through geeknote]]
 Use Evernote in Emacs through geeknote
** [2017-01-21 Sat 19:15] [[https://www.emacswiki.org/emacs/IncrementalReading#toc10][EmacsWiki: Incremental Reading]]
 #+BEGIN_QUOTE
 Save a buffer of text you want to incrementally read.
 For HTML, use M-! lynx -dump URL (Does anyone know of a way to get numbered links with either links or w3m?).

 #+END_QUOTE
** [2017-01-21 Sat 20:03] [[https://github.com/defunkt/gist.el][defunkt/gist.el: Yet another Emacs paste mode, this one for Gist.]]
 #+BEGIN_QUOTE
 Uses your local GitHub config if it can find it.

 Go to your GitHub Settings and generate a personal access token with gist scope


 #+END_QUOTE
** [2017-01-22 Sun 19:43] [[http://www.eltech.ru/ru/fakultety/fakultet-informacionno-izmeritelnyh-i-biotehnicheskih-sistem/sostav-fakulteta/kafedra-prikladnoy-mehaniki-i-inzhenernoy-grafiki/rukovodstvo-sostav-kafedry?searched=%25D0%25BF%25D0%25BE%25D0%25BF%25D0%25BE%25D0%25B2+%25D0%25B2%25D0%25BB%25D0%25B0%25D0%25B4%25D0%25B8%25D0%25BC%25D0%25B8%25D1%2580+%25D0%25BD%25D0%25B8%25D0%25BA%25D0%25B0%25D0%25BD%25D0%25BE%25D1%2580%25D0%25BE%25D0%25B2%25D0%25B8%25D1%2587&advsearch=oneword&highlight=ajaxSearch_highlight+ajaxSearch_highlight1+ajaxSearch_highlight2+ajaxSearch_highlight3][Руководство, состав кафедры прикладной механики и инженерной графики]]
 #+BEGIN_QUOTE
 В настоящее время профессорско-преподавательский состав кафедры 24 сотрудника из них 2 профессора, 9 доцентов, 7 старших преподавателей 1 ассистент.


 #+END_QUOTE
** [2017-01-22 Sun 21:47] [[https://www.youtube.com/watch?v=FYFs8fXJbSg][Задняя втулка велосипеда передняя втулка - что это? - YouTube]]
 #+BEGIN_QUOTE
 Published on Aug 15, 2015
 Задняя втулка велосипеда, передняя втулка велосипеда - что это за компонент, за что отвечает и как устроен? Об этом мы расскажем в своем новом видео, созданном в формате ВелоБлога! Нюансы, тонкости и советы по выбору велосипеда для начинающих! Рассматриваем мелочи и комплектующие, а не весь велосипед! Выбирайте с умом! Смотрите ВелоБлоги и подписывайтесь на канал!

 #+END_QUOTE
** [2017-01-22 Sun 23:27] [[https://vk.com/im?peers=110591865&sel=c4][Диалоги]]
 #+BEGIN_QUOTE

 Олег Пыхалов 23:15
 Инженерка завтра в какой аудитории? 1244?
 
 Павел Шубин 23:15
 1244 прога. инженерка в подвале всегда
 УК 3
 
 Артём Валерьевич 23:16
 а поточнее местоположение этого укз?
 
 Анастасия Смирнова 23:17
 А к какому числу инженерку сдавать надо?
 
 Егор Васин 23:17
 третий корпус, по главной лестнице вниз
 там будут учебные классы
 #+END_QUOTE
** [2017-01-22 Sun 23:54] [[https://vk.com/im?msgid=34279&peers=110591865&sel=c4][Диалоги]]
 #+BEGIN_QUOTE
 какими способами надо все эти куски перекодить?

 1. переменные
 2. массивы
 3. поинтеры
 4. динамические массивы

 так?
 
 Анастасия Смирнова 2:20
 Без указателей
 
 Олег Пыхалов 2:21
 а первую задачу?
 printf и cout?
 
 Анастасия Смирнова 2:21
 Да
 
 Иван Долгов 2:21
 да
 2-я 1 вариант - линейно, 2 вариант - массивы: это все оформляется как практика
 
 Олег Пыхалов 2:23
 что означает линейно?
 
 Иван Долгов 2:24
 3-й вариант - динамические массивы или malloc или calloc
 оформляется в отдельную лабу -я скидывал
 линейно значит:
 #include <iostream> 
 #include <cmath> 
 #include <iomanip> 
 using namespace std; 
 int main() 
 { 
 int i; double x, s, a, eps; 
 cout « "Avtor: Dolgov gr. 6006" « endl; 
 cout « "Vvedite x" « endl; 
 cin » x; 
 cout « "Vvedite eps" « endl; 
 cin » eps; 
 if ((eps > 0) && (eps <= 1)) 
 { 
 i = 1; 
 a = 1.5; 
 s = a; 
 cout « " _______________________________________________" « endl; 
 cout « " || " « setw(4) « setiosflags(ios::left) « i « " || " « 
 setw(15) « setprecision(6) « setiosflags(ios::left) « a « " || " « setw(15) « setprecision(6) « 
 setiosflags(ios::left) « s « "||" « endl; 
 cout « " _______________________________________________" « endl; 
 while ((i < 100) && (fabs(a) > eps)) 
 { 
 a *= x * (7 * i - 9) / (7 * i - 4); 
 s += a; 
 i++; 
 cout « " || " « setw(4) « setiosflags(ios::left) « i « " || " « setw(15) « setprecision(6) « 
 setiosflags(ios::left) « a « " || " « setw(15) « setprecision(6) « setiosflags(ios::left) « s « "||" « endl; 
 cout « " _______________________________________________" « endl; 
 } 
 } 
 else 
 return 0; 
 }
 тут, может быть, уже можно использовать <math.h> мне не пригодилось - не уточнял
 или cmath или math в зависимости от компилятора
 
 Олег Пыхалов 2:28
 кинь файлом пожалуйста
 #+END_QUOTE
** [2017-01-23 Mon 09:01] [[https://www.youtube.com/watch?v=xDVC3wKjS64][Dynamic memory allocation in C - malloc calloc realloc free - YouTube]]
 #+BEGIN_QUOTE
 Published on Mar 4, 2013
 See complete series on pointers here:
 http://www.youtube.com/playlist?list=...

 In this lesson, we will be discussing the use of library functions in C for dynamic memory allocation and deallocation. These functions are malloc, calloc, realloc and free.

 Feel free to drop your comments, feedback and suggestions. 

 For practice problems and more, visit: http://www.mycodeschool.com 

 Like us on Facebook: https://www.facebook.com/MyCodeSchool

 Follow us on twitter: https://twitter.com/mycodeschool
 #+END_QUOTE
** [2017-01-23 Mon 09:32] [[https://www.youtube.com/watch?v=CZJ-6IiXoMs][Understanding malloc - YouTube]]
 #+BEGIN_QUOTE
 Published on Oct 8, 2014
 Programming in C ain't easy. Take a walk in Memoryland, to see how we use malloc to control our program's memory usage.
 Category
 Education
 License
 Standard YouTube License
 #+END_QUOTE
** [2017-01-23 Mon 09:46] [[https://www.youtube.com/watch?v=HPDBOhiKaD8][The Heap: what does malloc() do? - bin 0x14 - YouTube]]
 #+BEGIN_QUOTE
 Published on Sep 27, 2016
 Introducing the heap by looking at what malloc() does.
 #+END_QUOTE
** [2017-01-23 Mon 09:52] [[https://www.youtube.com/watch?v=TfJrU95q1J4][The Heap: How to exploit a Heap Overflow - bin 0x15 - YouTube]]
 #+BEGIN_QUOTE
 Published on Sep 30, 2016
 We are solving heap1 from exploit-exercises.com by exploiting a heap overflow.

 Join the discussion: https://www.reddit.com/r/LiveOverflow...

 #+END_QUOTE
** [2017-01-23 Mon 09:54] [[https://www.youtube.com/watch?v=3JX6TyLOmGQ][C: malloc and functions returning pointers - YouTube]]
 #+BEGIN_QUOTE
 Published on Jul 25, 2012
 BLOG POST: Contains all code with thorough explanation.
 http://vertstudios.com/blog/malloc-fu...
 #+END_QUOTE
*** [10:00] void pointers
** [2017-01-23 Mon 10:54] [[https://askubuntu.com/questions/424225/setting-up-lvm-snapshot-as-a-backup-restore-point-in-ubuntu][mount - Setting up LVM Snapshot as a backup/restore point in ubuntu - Ask Ubuntu]]
 Well, as I see it, with all the great usefulness of Linux, its biggest drawback is with its mixed up way of installing apps. All the dlls go to one directory. All the configuration files to another. And the binaries are also put in a bunch. Yes, Windows works the same way more or less, but with the nature of system/server software installed on Linux, being that most of the software installed is only about 95% mature at any given time, messing up your system twice a month is very probable..
** [2017-01-23 Mon 19:59] [[https://www.youtube.com/watch?v=t0Cq6tVNRBA][Data Structures: Heaps - YouTube]]
 Published on Sep 27, 2016

 Learn about heaps. This video is a part of HackerRank's Cracking The Coding Interview Tutorial with Gayle Laakmann McDowell. http://www.hackerrank.com/domains/tut...
** [2017-01-23 Mon 20:02] [[https://www.youtube.com/watch?v=wlJJgjdgvYE][Stack vs Heap - YouTube]]
 #+BEGIN_QUOTE
 Published on Apr 29, 2012
 The stack and the heap and memory management in C++. Presentation starts with a short PowerPoint but the meat walks through actual dissasembled C++ code in the debugger.

 #+END_QUOTE
** [2017-01-23 Mon 21:19] [[http://www.studytonight.com/c/dynamic-memory-allocation-in-c.php][malloc() and calloc() Functions | C Language Tutorial | Studytonight]]
 #+BEGIN_QUOTE
 The process of allocating memory at runtime is known as dynamic memory allocation. Library routines known as "memory management functions" are used for allocating and freeing memory during execution of a program. These functions are defined in stdlib.h.


 #+END_QUOTE
** [2017-01-23 Mon 22:24] [[https://www.youtube.com/watch?v=FHhcSncuHEI][C++ Tutorial 27 - Dynamic Arrays - YouTube]]
 #+BEGIN_QUOTE
 Published on Jun 17, 2012
 http://www.programminghelp.org/
 Watch in 720p

 This tutorial will cover hot to dynamically create arrays as well as deallocate variables and arrays from memory (heap).

 #+END_QUOTE
** [2017-01-23 Mon 22:31] [[https://www.youtube.com/watch?v=scyEeX8XVPQ][malloc and calloc - YouTube]]
 #+BEGIN_QUOTE
 Published on Nov 22, 2015

 #+END_QUOTE
** [2017-01-23 Mon 22:49] [[https://www.youtube.com/watch?v=i8852MOA_Xg][C programming Tutorial 2-8: Type Conversions - YouTube]]
 #+BEGIN_QUOTE
 Uploaded on Nov 7, 2009
 This is a tutorial for C programming. it is also a good lesson for c++ learners.

 #+END_QUOTE
** [2017-01-23 Mon 23:45] [[https://www.youtube.com/watch?v=wLxhYj7kMyc][calloc in C language - YouTube]]
 #+BEGIN_QUOTE
 Published on Jun 2, 2014
 The demonstration of calloc function in dynamic memory allocation in C language.

 #+END_QUOTE
** [2017-01-24 Tue 00:06] [[https://www.youtube.com/watch?v=BSYmajttVDw][Xnest - Create a new Display in a Window - Linux - YouTube]]
 #+BEGIN_QUOTE
 Uploaded on Jul 8, 2010
 http://FilmsByKris.com

 #+END_QUOTE
** [2017-01-24 Tue 01:17] [[https://www.youtube.com/watch?v=UEaSy56XGVc][Информатика. Язык Си: Системные вызовы malloc() и free() в Си. Центр онлайн-обучения «Фоксфорд» - YouTube]]
 #+BEGIN_QUOTE
 Published on Jan 20, 2015
 Лучшие учителя страны преподают в центре онлайн-обучения «Фоксфорд». Запишитесь на первое занятие по информатике бесплатно: http://foxford.ru/I/vN

 Тема: Язык Си, Системные вызовы malloc() и free() в Си

 Из этого занятия вы узнаете:

 - Определение сегмента 
 - Сегмент code
 - Сегмент data
 - Сегмент stack
 - Механизм системного вызова
 - Системный вызов malloc()
 - Сегмент heap
 - Системный вызов free()
 - Функция sizeof
 - Значение null
 - Разбор примеров

 Занятие ведет Тимофей Федорович Хирьянов, преподаватель «Фоксфорд», преподаватель кафедры информатики МФТИ, разработчик системного программного обеспечения Samsung Electronics и Parallels.
 #+END_QUOTE
** [2017-01-24 Tue 01:36] [[https://www.youtube.com/watch?v=ywqB3ZTf8OE][Dynamic Memory Allocation - YouTube]]
 #+BEGIN_QUOTE
 Published on Oct 7, 2015
 This is CS50

 #+END_QUOTE
** [2017-01-24 Tue 01:44] [[https://www.youtube.com/watch?v=yOdd3uYC--A][Pointers - YouTube]]
 #+BEGIN_QUOTE
 Published on Oct 7, 2015
 This is CS50

 #+END_QUOTE
** [2017-01-24 Tue 03:33] [[https://www.youtube.com/playlist?list=PLTFFcor5E1KzuQuGi_GMU3ztN-lQ6wk_L][CS50-Doug Lloyd - YouTube]]
 #+BEGIN_QUOTE
 Sithu Thwin48 videos380 viewsLast updated on Oct 3, 2016

 #+END_QUOTE
** [2017-01-24 Tue 03:50] [[https://www.youtube.com/watch?v=Rd6RftMjZZ8][Lunduke Hour: Jan-23-2017, Wire secure messaging w/Alan Duric - YouTube]]
 #+BEGIN_QUOTE
 Published on Jan 23, 2017
 I get the chance to talk with Alan Duric, CTO and Co-Founder of Wire -- a company that provides end-to-end encrypted messaging across multiple platforms (including Android, Linux, Windows, and others).

 Like what I do? It's made possible thanks to my amazing supporters:
 https://www.patreon.com/bryanlunduke

 My free e-books, DRM-free, under the Creative Commons license:
 http://lunduke.com/book-store/
 #+END_QUOTE
** [2017-01-24 Tue 18:30] [[http://eltech.ru/ru/studentam/dokumenty-dlya-ucheby1][Документы для учебы]]
 #+BEGIN_QUOTE
 Требования к оформлению научно-технических отчетов (Распоряжение от 09.11.2015 № 3003)

 Шаблоны оформления студенческих работ (Распоряжение от 09.11.2015 № 3004):

 Шаблон оформления отчета по лабораторной работе
 Шаблон оформления реферата
 Шаблон оформления курсовой работы (курсового проекта)
 Шаблон оформления отчета по практике
 Шаблон оформления междисциплинарного проекта
 Шаблон оформления отчета по научно-исследовательской работе
 Шаблон индивидуального плана магистранта
 Материалы для подготовки ВКР


 Приказ Минобрнауки России от 27.11.2015 N 1383 "Об утверждении Положения о практике обучающихся, осваивающих основные профессиональные образовательные программы высшего образования"
 #+END_QUOTE
** [2017-01-25 Wed 08:23] [[https://www.youtube.com/watch?v=woqq3Sls1d8][Solving 3 Equations with 3 Unknowns - YouTube]]
 #+BEGIN_QUOTE
 Uploaded on Apr 11, 2009
 Solving 3 equations with 3 unknowns (old video from July 2008)
 #+END_QUOTE
** [2017-01-25 Wed 08:28] [[https://www.youtube.com/watch?v=EFApWAl3NJw][Matrix Operations - YouTube]]
 Published on Mar 23, 2008

 Matrix Operations - Adding, Subtracting, and Multiplying by a constant for matrices is discussed. For more free math videos, visit http://PatrickJMT.com!
** [2017-01-25 Wed 08:35] [[https://www.youtube.com/watch?v=2j5Ic2V7wq4][❖ Gaussian Elimination ❖ - YouTube]]
 Published on Jul 12, 2012

 Please consider supporting me on Patreon! Be a Patron of Mathematics! https://www.patreon.com/patrickjmt?ty=h
 Gaussian Elimination. Here we solve a system of 3 linear equations with 3 unknowns using Gaussian Elimination.
** [2017-01-25 Wed 08:43] [[https://www.youtube.com/watch?v=9LYVi-n-6Jw][Row Reducing a Matrix - Systems of Linear Equations - Part 1 - YouTube]]
 #+BEGIN_QUOTE
 Published on Apr 8, 2008
 Row Reducing a Matrix - Systems of Linear Equations - Part 1. Basic notation and procedure as well as a full example are shown. The last part of the second part got cut off, but is finished in another video!!! For more free math videos, visit http://PatrickJMT.com


 #+END_QUOTE
** [2017-01-25 Wed 10:59] [[https://www.youtube.com/watch?v=G0XijJUooHE][Как начертить оси для аксонометрии. Уроки черчения. - YouTube]]
 #+BEGIN_QUOTE
 Published on Jan 13, 2016
 Сегодня чертим оси для аксонометрии. Уроки черчения.

 #+END_QUOTE
** [2017-01-25 Wed 11:01] [[https://www.youtube.com/watch?v=kH2ETrEBfNE][Как начертить аксонометрию. Наглядный пример. Уроки черчения. - YouTube]]
 #+BEGIN_QUOTE
 Published on Jan 16, 2017
 Как начертить аксонометрию. Наглядный пример. Уроки черчения.

 #+END_QUOTE
** [2017-01-25 Wed 11:56] [[https://www.youtube.com/watch?v=uXSeb0C5qT0][Создание аксонометрической проекции в KOMPAS 3D LT - YouTube]]
 #+BEGIN_QUOTE
 Published on Jan 7, 2013
 Видеоуроки по работе в программе kompas 3d lt на сайте fganiev.ru

 #+END_QUOTE
** [2017-01-25 Wed 11:56] [[https://www.youtube.com/results?search_query=%25D1%2587%25D0%25B5%25D1%2580%25D1%2587%25D0%25B5%25D0%25BD%25D0%25B8%25D0%25B5+%25D0%25B0%25D0%25BA%25D1%2581%25D0%25BE%25D0%25BD%25D0%25BE%25D0%25BC%25D0%25B5%25D1%2582%25D1%2580%25D0%25B8%25D1%258F&page=&utm_source=opensearch][черчение аксонометрия - YouTube]]
 #+BEGIN_QUOTE
 черчение аксонометрия
 #+END_QUOTE
** [2017-01-25 Wed 11:57] [[https://www.youtube.com/watch?v=G0XijJUooHE][Как начертить оси для аксонометрии. Уроки черчения. - YouTube]]
 #+BEGIN_QUOTE
 Published on Jan 13, 2016
 Сегодня чертим оси для аксонометрии. Уроки черчения.

 #+END_QUOTE
** [2017-01-25 Wed 11:57] [[https://www.youtube.com/watch?v=kH2ETrEBfNE][Как начертить аксонометрию. Наглядный пример. Уроки черчения. - YouTube]]
 #+BEGIN_QUOTE
 Published on Jan 16, 2017
 Как начертить аксонометрию. Наглядный пример. Уроки черчения.

 #+END_QUOTE
** [2017-01-25 Wed 20:00] Зачет по английскому [[https://vk.com/im?msgid=31801&peers=113006911_384426051_110591865&sel=c4][Диалоги]]
 #+BEGIN_QUOTE
 5005-1 все у кого нет зачёта по английскому :29 января в 12.55 быть в
 начале кафедры ин.яза 3 этаж 3 корпус, лучше пораньше, в час она
 свалит на собрание...ну и с зачеткой само собой
 #+END_QUOTE
** [2017-01-25 Wed 20:05] Пересдача по истории [[https://vk.com/im?msgid=32251&peers=113006911_384426051_110591865&sel=c4][Диалоги]]
 #+BEGIN_QUOTE
 23.01 я буду в 14.30-16.00 в а.5143
 26.01 я буду в 1200-13.30 в а. 5143
 1.02 я буду в 14.30-16.00 в а.5423
 В это время вы можете придти ко мне с направлением и пересдать
 #+END_QUOTE
** [2017-01-25 Wed 20:57] [[https://spb.hh.ru/vacancy/19384143?query=Python%2520Junior][Вакансия Python (junior) программист в Санкт-Петербурге, работа в Деньга]]
 #+BEGIN_QUOTE
 Обязанности:
 Участие в проектах по разработке программного обеспечения для внутренних нужд компании;
 Разработка и тестирование кода;
 Документирование проектов;
 Администрирование сопутствующих сервисов;
 Требования:
 Знание python, linux.
 Опыт работы в команде, использование систем контроля версий git или svn
 Знание других языков программирования - Опыт PostgreSQL, Redis, Docker, DevOps
 Опыт работы с фронтендом (JQuery\Angular\React\Vanilla JS)
 Условия:
 Интересные крупные корпоративные проекты в активно растущей компании
 Территориальное расположение – В.О., современный комфортный офис
 Официальное трудоустройство с первого рабочего дня, заработная плата вся белая
 График работы: 5/2, с 9:00 до 18:00
 Работа в молодом коллективе профессионалов, перспектива роста и развития
 Предпочтение тем кандидатам, которые готовы предоставить пример кода или свои проекты, например на github!
 #+END_QUOTE
** [2017-01-26 Thu 15:45] [[https://vk.com/im?sel=c4][Диалоги]]
- Определители и свойства
- Прямая на плоскости
- Векторы
- Комплексные числа. Форма записи. Действия с комплексными числами
- Определитель и его свойства
- Из заданий. 1 теория. 2 квадратное уравнение с комплексными
  числамм. 3 выделить целую часть из дроби. 4 умножение матрицы на
  матрицу. 5 система уравнений. 6 векторная алгебра.
** [2017-01-27 Fri 04:44] [[https://wiki.archlinux.org/index.php/x11vnc][X11vnc - ArchWiki]]
 #+BEGIN_QUOTE
 ssh -t -L 5900:localhost:5900 remote_host 'sudo x11vnc -display :0 -auth /home/USER/.Xauthority'
 #+END_QUOTE
** TODO [2017-01-27 Fri 16:18] Вопросы по инженерной графике [[https://vk.com/im?sel=c4][Диалоги]]
 #+BEGIN_QUOTE
 Вопросы по ИГ на завтрашний экзамен.
 #+END_QUOTE
** [2017-01-28 Sat 03:52] [[https://www.youtube.com/watch?v=JSEPDJfl8m8][Finding Angle Between 2 Lines (Formula) - YouTube]]
 #+BEGIN_QUOTE
 Published on May 18, 2016
 Learn how to find the angle between two lines using the formula we will go over in this video. We also go through 2 example problems in this free math video tutorial by Mario's Math Tutoring.

 #+END_QUOTE
** [2017-01-28 Sat 04:43] [[https://www.youtube.com/watch?v=2GKESu5atVQ][Algebra 54 - Gaussian Elimination - YouTube]]
 #+BEGIN_QUOTE
 Published on Mar 25, 2016
 A system of linear equations represented as an augmented matrix can be simplified through the process of Gaussian elimination to row echelon form. At that point the matrix can be converted back into equations which are simpler and easy to solve through back substitution.

 #+END_QUOTE
** [2017-01-28 Sat 05:42] 2 числа Пересдача теста по математике [[https://vk.com/im?msgid=36389&peers=c5_53594011&sel=c4][Диалоги]]
 #+BEGIN_QUOTE
 Дмитрий Бураев 17:31

 Завтра в 11-30 в кабинете №5416 или как там эти каморки
 называются,будет пересдача математики!!!!!!
 #+END_QUOTE
** [2017-01-28 Sat 06:48] [[https://www.youtube.com/watch?v=yfiMho1_t4k][How to Factor Quadratic Expressions - YouTube]]
 #+BEGIN_QUOTE
 Uploaded on Feb 2, 2011
 Check out Bas Rutten's Liver Shot on MMA Surge: http://bit.ly/MMASurgeEp1
 Learn how to factor quadratic expressions with Allison Moffett of the Mahalo Math Channel. Ms. Moffett shows how to break the expression apart and explains how to choose the sign to use in each factor. She determines the factors of the number 12 and decides which factor pair can be used to result in the correct x term. This education video is part of a larger series of math-related tutorials offered on the Mahalo.com YouTube channel.

 #+END_QUOTE
** [2017-01-28 Sat 08:01] [[https://www.youtube.com/watch?v=9bm1_IJ00lQ][Slope of a Line - MathHelp.com - Algebra Help - YouTube]]
 #+BEGIN_QUOTE
 Uploaded on Apr 15, 2008
 For a complete lesson on slope of a line, go to http://www.MathHelp.com - 1000+ online math lessons with your own personal math teacher! 

 In this lesson, students are asked to find the slope of a line given its graph. To find the slope of a line, students use the formula slope = rise over run. Problems involve lines with positive slopes, negative slopes, slopes that must be reduced, slopes of 0 (horizontal lines), and "no slopes"(vertical lines). Students also learn that the variable "m" is used to represent the slope of a line.

 In Algebra, we use the word "slope" to describe how steep a line is, and the slope of a line can be found using the ratio rise over run between any two points that are on that line.

 Since the slope of a line is a fraction, remember to reduce your slope if possible at the end of the problem.

 The most common mistake made in problems involving the slope of a line is to mess up the sign. To avoid this mistake, we use the following ideas:

 - The slope of a line that is going uphill from left to right is positive.

 - The slope of a line that is going downhill from left to right is negative.

 Note that the slope of a line that is horizontal (flat) is zero, and the slope of a line that is vertical (straight up and down) is 'no slope.'

 The variable "m" is used to represent the slope of a line, so if the slope of a line is 2/3, then we say that m = 2/3.

 The slope of a line is one of the first concepts that is introduced in the study of linear equations.

 #+END_QUOTE
** [2017-01-28 Sat 18:17] [[https://www.youtube.com/watch?v=ROj5RzSo6Wo][1.5.1 Пересечение поверхностей Разбор задач - YouTube]]
 #+BEGIN_QUOTE
 Published on Dec 17, 2016
 Лекция https://yadi.sk/i/cVyeRc8q33hhnS

 #+END_QUOTE
** [2017-01-28 Sat 18:19] [[https://www.youtube.com/watch?v=EFzRsMWC8-M&index=1&list=PLJSyXvz9_p4gUVhTAWJvndAsldtK_0_30][1.1.1 Начертательная геометрия. Предмет и метод начертательной геометрии - YouTube]]
 #+BEGIN_QUOTE
 Published on Dec 17, 2016
 Лекция https://yadi.sk/i/cUkzNKJL33hfkG
 #+END_QUOTE
** [2017-01-29 Sun 07:41] [[https://www.youtube.com/watch?v=OLZPlSvuecQ][Multiplication & Division of Functions (2 of 4: Using positive & negative regions) - YouTube]]
 #+BEGIN_QUOTE
 Published on Jan 28, 2017
 More resources available at www.misterwootube.com
 #+END_QUOTE
** [2017-01-29 Sun 10:56] [[https://www.reddit.com/r/youtube/comments/37x4eo/how_to_make_youtube_load_more_automatically/][How to make YouTube ¨load more¨ automatically? : youtube]]
 javascript:(function() {
  var LoadButton, IntervalCLB;
  IntervalCLB = setInterval(_clickLoadButton, 100);

  function _clickLoadButton() {
   LoadButton = document.getElementsByClassName('load-more-button');
   if (LoadButton.length > 0) {
    LoadButton[0].click();
   } else {
    clearInterval(IntervalCLB);
    alert('Finished - Clicked all "Load More" Buttons.');
   }
  }
 })();
** [2017-01-29 Sun 14:38] [[https://vk.com/club128816610][ЛЭТИ группа 6005]]
 #+BEGIN_QUOTE
 Анастасия, сразу как правило не отчисляют, дают возможность сдать долги, если ты этой возможностью не воспользуешься , тогда да. Имеет смысл сходить в деканат и уточнить этот вопрос не затягивая. Обязательно в конце сессии проверьте в деканате, все ли у вас закрыто по бумагам, иначе в начале следующей сессии, можно сразу нарваться на недопуск, а это лишняя беготня.
 #+END_QUOTE
** [2017-01-29 Sun 16:11] [[https://www.youtube.com/watch?v=Y92JC__jN6k][2001079 57 Подготовка к ЕГЭ по истории России. Перестройка в СССР 1985-1991гг. - YouTube]]
 #+BEGIN_QUOTE
 Published on Apr 6, 2016
 Описание 01.Восточные славяне
 02.Древнерусское государство
 03.Русские земли и княжества в XII-XIII вв. Политическая раздробленность
 04.Монголо-татарское нашествие. Золотая Орда
 05.Западные завоеватели Руси
 06.Литовско-Русское государство
 07.Русская культура в XII-XIII вв.
 08.Возвышение Москвы
 09.Куликовская битва
 10.Московское княжество в XIV-XV вв.
 11.Церковь в XV-XVI вв.
 12.Московское государство

 #+END_QUOTE
** [2017-01-30 Mon 07:31] [[http://www.tor.eltech.ru:8000/edu/bachelor][Кафедра ТОР СПбГЭТУ]]
 Кафедра Теоретических Основ Радиотехники
** [2017-01-30 Mon 07:32] [[http://www.eltech.ru/ru/fakultety/fakultet-elektroniki/sostav-fakulteta/kafedra-fiziki/uchebnii-materialy/mechanics-and-thermodynamics][Механика и термодинамика 1-й курс, 1-й семестр]]
 Вопросы к лабораторным работам:
** [2017-01-30 Mon 07:33] [[http://www.eltech.ru/ru/fakultety][Факультеты Санкт-Петербургского государственного электротехнического университета «ЛЭТИ» им В.И. Ульянова (Ленина)]]
  Управление информационных технологий
** [2017-01-30 Mon 07:37] [[http://www.eltech.ru/ru/fakultety/fakultet-kompyuternyh-tehnologiy-i-informatiki/sostav-fakulteta/kafedra-sistem-avtomatizirovannogo-proektirovaniya][Кафедра систем автоматизированного проектирования]]
        

 Контактная информация:

 Адрес:

 Россия, Санкт-Петербург, улица Профессора Попова, дом 5, корпус I, помещение 11-53

 Телефон: (812)234-36-75

 E-mail: saprfkti@mail.ru

 Заведующий кафедрой САПР: 

 к.т.н., доцент
 Рыжов Николай Геннадьевич

 e-mail: ngryzhov@mail.ru
** [2017-01-30 Mon 07:39] [[http://www.eltech.ru/ru/fakultety/otkrytyy-fakultet/uchebn-dlya-studentov-zaochnoy-formy-obucheniya/pamjatka][http://www.eltech.ru/ru/fakultety/otkrytyy-fakultet/uchebn-dlya-studentov-zaochnoy-formy-obucheniya/pamjatka]]
 Деканат Открытого факультета (заочное обучение) СПбГЭТУ  расположен в 3 корпусе, 3 этаж, комн. 3309
** [2017-01-30 Mon 07:43] [[http://eltech.ru/ru/fakultety/fakultet-kompyuternyh-tehnologiy-i-informatiki/sostav-fakulteta/kafedra-matematicheskogo-obespecheniya-i-primeneniya-evm/news/trening-epam-devops][Тренинг EPAM по направлению DevOps]]

     старт в феврале 2017 (точная дата начала еще не определена и, возможно, будет меняться)
     график: 2-3 раза в неделю в течение 4,5 месяцев
     трудоустройство в компанию в случае успешного прохождения тренинга
** [2017-01-30 Mon 08:03] [[https://github.com/politza/pdf-tools][politza/pdf-tools: Emacs support library for PDF files.]]
 PDF Tools is, among other things, a replacement of DocView for PDF files. The key difference is, that pages are not pre-rendered by e.g. ghostscript and stored in the file-system, but rather created on-demand and stored in memory.

 This rendering is performed by a special library named, for whatever reason, poppler, running inside a server program. This program is called epdfinfo and its job is it to successively read requests from Emacs and produce the proper results, i.e. the PNG image of a PDF page.

 Actually, displaying PDF files is just one part of PDF Tools. Since poppler can provide us with all kinds of information about a document and is also able to modify it, there is a lot more we can do with it. Watch
** [2017-01-30 Mon 11:10] [[https://www.youtube.com/watch?v=zUDqI9PJpc8][How Much Information? - YouTube]]
 Published on Jul 3, 2014

 How much information is there in Spanish vs English, you vs the world? Check out Audible: http://bit.ly/AudibleVe
** [2017-01-30 Mon 21:11] [[https://vk.com/im?peers=151414256_22115670_13368088_c5_c4&sel=1927657][Диалоги]]
 #+BEGIN_QUOTE
 ну там в принципе похоже)
 lab_2(модиф.).doc
 509 Кб
 Lab5.docx
 1 МБ
 Задание Excel(рис).doc
 420 Кб
 одно лишнее кинула)
 #+END_QUOTE
** [2017-01-31 Tue 03:12] [[https://vk.com/im?msgid=35266&peers=c2_c5_1927657_384426051_151414256_22115670&sel=c4][Диалоги]]
 #+BEGIN_QUOTE
 Анастасия Смирнова 3:11
 #include <iostream>
 #include <cmath>
 #include <stdio.h>

 using namespace std;

 double my_pow(double x, int n) {
 if(n == 0) return 1;
 double res = x;
 for(int i = 1; i < n; ++i) {
 res *= x;
 }
 return res;
 }
 #+END_QUOTE
** [2017-01-31 Tue 13:34] [[https://www.youtube.com/channel/UChMJcW0i9-pwMtyLYZ2P-Dw/videos][bregrow (BG) - YouTube]]
 #+BEGIN_QUOTE
 1:31
 1:31
 БИЗНЕС
 1.2K views
 1 week ago
 1:04
 1:04
 ПО-ДЕБИЛЬНОМУ
 1.1K views
 1 week ago
 3:44
 3:44
 БОГИНИ СУДЬБЫ!!
 1.3K views
 2 weeks ago
 3:27
 3:27
 ПРОРОЧЕСТВО 2К17
 1.3K views
 4 weeks ago
 2:27
 2:27
 Видеодневник
 947 views
 1 month ago
 3:42
 3:42
 Нейронный удар
 1.3K views
 1 month ago
 4:34
 4:34
 47
 7.6K views
 1 month ago
 1:51
 1:51
 День Бейбисакмайдика
 10K views
 2 months ago
 4:14
 4:14
 The Train - Привет, Тесак! (Пароксизм паранойи)
 7.9K views
 2 months ago
 2:07
 2:07
 МЕМОСФОР
 23K views
 2 months ago
 3:38
 3:38
 ЗАЖИВО ПОГРЕБЕННЫЕ! (Эдгар Аллан По)
 9.8K views
 2 months ago
 2:04
 2:04
 ОВЕРВОТЧЕРЫ - BGC (Аналог BBC)
 11K views
 2 months ago
 1:38
 1:38
 КК - Религиозная школа
 9.9K views
 2 months ago
 1:13
 1:13
 ДОТЕРЫ - BGC (Аналог BBC)
 10K views
 3 months ago
 2:14
 2:14
 КК - Гордыня
 9K views
 3 months ago
 4:06
 4:06
 Рвота, мысли и умы:3
 4.9K views
 3 months ago
 3:45
 3:45
 Жизнь-Смерть-Ютуб (ТИЗЕР)
 12K views
 3 months ago
 2:38
 2:38
 Ватники - World of Tanks
 9.1K views
 3 months ago
 1:52
 1:52
 БОЖЕСТВЕННАЯ ПИ*ДА (the best moments)
 6.1K views
 3 months ago
 2:37
 2:37
 ИСТОРИЯ КИТАЙСКОГО АПОКАЛИПСИСА - Left 4 Dead 2!
 5.8K views
 4 months ago
 1:34
 1:34
 POKEMON GO разоблачение!
 6.5K views
 5 months ago
 2:12
 2:12
 BGC - Игрок в Minecraft
 8.5K views
 5 months ago
 1:43
 1:43
 BGC - Игрок в Counter strike!
 9.4K views
 5 months ago
 4:41
 4:41
 НЮХАТЬ СОБАК - ЧТО!?
 1K views
 5 months ago
 3:20
 3:20
 ГМО УНИЧТОЖИЛ МИР! - Resident Evil 6: Леон и Хелена - КГК
 263 views
 5 months ago
 2:02
 2:02
 Опять е*аные КРЫСЫ в Warhammer End times!
 194 views
 5 months ago
 4:29
 4:29
 МЫ ИЗ НАВИ - Cs Go - Adventure die
 7.5K views
 5 months ago
 2:47
 2:47
 BG БАНЧАТ!?!? ibb & obb
 347 views
 5 months ago
 4:57
 4:57
 Мы должны дарить добро! - GTA 4 - Adventure die
 733 views
 5 months ago
 2:55
 2:55
 Расистские начала #2 PRIMAL CARNAGE! ВОЗВРАЩЕНИЕ!!!!!!
 170 views
 6 months ago

 #+END_QUOTE
** [2017-01-31 Tue 14:09] [[https://vk.com/im?peers=61011239_13368088_c2_c5_c4_1927657_384426051_151414256_22115670&sel=71521315][Диалоги]]
 #+BEGIN_QUOTE
 4. ВОПРОСЫ К ЭКЗАМЕНУ
 1. Комплексные числа: определение, различные формы представления, действия над ними.
 2. Многочлены: деление с остатком, теорема Безу.
 3. Разложение многочлена на множители, кратность корня.
 4. Дробно-рациональные функции. Разложение дроби на простейшие.
 5. Определители и их свойства.
 6. Матрицы и действия над ними.
 7. Обратная матрица. Методы ее нахождения.
 8. Ранг матрицы. 
 9. Решение систем линейных уравнений. Теорема Кронекера – Капелли.
 10. Векторная алгебра. Основные понятия и действия над векторами.
 11. Скалярное произведение векторов и его свойства.
 12. Векторное и смешанное произведения векторов и их свойства.
 13. Прямая на плоскости.
 14. Прямая и плоскость в пространстве.
 15. Кривые второго порядка на плоскости и п
 #+END_QUOTE
** [2017-01-31 Tue 20:10] [[http://advance-club.ru/eng_free_webinar_2/?utm_medium=social&utm_source=VK&utm_campaign=31_01_eng_online&utm_content=proglib&utm_term=Learn][Центр образовательных технологий Advance]]
** [2017-01-31 Tue 21:11] [[https://www.youtube.com/watch?v=s7R8HXpgiHA][09 - Введение в алгоритмы. Машина Тьюринга - YouTube]]
 #+BEGIN_QUOTE

 Roman Brovko
 Published on Feb 22, 2015
 SUBSCRIBED 11K
 Лектор: Рахим Давлеткалиев (Rakhim Davletkaliyev) http://hexlet.io

 #+END_QUOTE
** [2017-01-31 Tue 22:37] [[http://www.lessons-tva.info/edu/telecom-loc/m1t4_3loc.html][Топологии локальных сетей]]
 #+BEGIN_QUOTE
 Все компьютеры в локальной сети соединены линиями связи. Геометрическое расположение линий связи относительно узлов сети и физическое подключение узлов к сети называется  физической топологией. В зависимости от топологии различают сети: шинной, кольцевой, звездной, иерархической и произвольной структуры.

 #+END_QUOTE
** [2017-01-31 Tue 22:45] [[https://github.com/awesomeWM/awesome/issues/1395][Screenshots · Issue #1395 · awesomeWM/awesome]]
 #+BEGIN_QUOTE
 Let's post some screenshots here and vote on them, to possibly get them onto the website.

 Elv13 edit:

 Rules

 One screenshot per post
 Many posts allowed
 Please don't post the default config with a new wallpaper and colors, we have plenty of those
 Please upload your config on github and a README.md is also welcome
 #+END_QUOTE
** [2017-01-31 Tue 23:07] [[https://www.wikidata.org/wiki/Wikidata:Main_Page][Wikidata]]
 Wikidata is a free and open knowledge base that can be read and edited by both humans and machines.
** [2017-01-31 Tue 23:12] [[https://extensions.gnome.org/extension/1112/screenshot-tool/][Screenshot Tool - GNOME Shell Extensions]]
 Create, store and upload screenshots
** [2017-01-31 Tue 23:15] [[https://extensions.gnome.org/extension/1067/sincrodirs/][SincroDirs - GNOME Shell Extensions]]
 Folders synchronization  

 - Uses rsync as a backend.
 - Default options for synchronize are: -rlptq.
 - Modify rsync options with two options: delete and compress.
 - Create a custom rsync options string.
 - Create groups of folders with one common destination.
 - Enable/disable groups for synchronize.
 - Synchronize a group of folders to a common destination.
 - Scheduled synchronization.
 - Notification support.
 - Available in english, spanish and german.

 Use case: synchronize folders from your computer and mounted folders from a NAS.
** [2017-01-31 Tue 23:15] [[https://extensions.gnome.org/extension/1061/on-screen-keyboard-button/][On Screen Keyboard Button - GNOME Shell Extensions]]
 Shows or hides the OSK via top bar button.
** [2017-01-31 Tue 23:15] [[https://extensions.gnome.org/extension/1065/docker-status/][Docker Integration - GNOME Shell Extensions]]
 A status menu for managing docker containers.
** [2017-01-31 Tue 23:16] [[https://extensions.gnome.org/extension/1015/gravatar/][Gravatar - GNOME Shell Extensions]]
 Synchronize GNOME Shell user icon with Gravatar.
** [2017-01-31 Tue 23:16] [[https://extensions.gnome.org/extension/1000/random-walls/][Random Walls - GNOME Shell Extensions]]
 Change desktop and lockscreen wallpapers randomly
** [2017-01-31 Tue 23:20] [[https://extensions.gnome.org/extension/858/volume-mixer/][Volume Mixer - GNOME Shell Extensions]]
 Applet allowing separate configuration of pulseaudio mixers. Shell Volume Mixer is an extension for GNOME Shell allowing separate configuration of PulseAudio devices and output switches. It features a profile switcher to quickly switch between pinned profiles and devices. Middle mouse click on a slider mutes the selected stream.
** Вопрос историку о пересдаче
Здравствуйте. Можно еще раз уточнить, четверг следующей недели у вас окно с 13:00?

Еще спрашивает товарищ, будете ли вы завтра? Нужно поставить оценку по зачету (отсутствовала во время зачета).

И есть ли еще смысл мне дописать самостоятельную работу, если оценка не удовлетворительная?

6005 Заочное
** [2017-02-01 Wed 20:55] [[https://vk.com/im?peers=151414256_c4_384426051&sel=1730595][Диалоги]]
 #+BEGIN_QUOTE
 Завтра меня нет, я буду в следующую среду и четверг.
 Окно у меня будет в 13.30 примерно.
 Смысл есть, это дополнительный бонус, но тут вы сами должны решить что лучше - подготовиться к зачету или и работу, и к зачету
 #+END_QUOTE
** [2017-02-01 Wed 21:24] [[http://eltech.ru/ru/studentam/raspisaniya-zanyatiy-i-ekzamenov][Расписания занятий и экзаменов]]
 #+BEGIN_QUOTE
 Расписание занятий на весенне-зимний семестр 2017 уч. г.


 #+END_QUOTE
** [2017-02-03 Fri 12:09] [[https://www.youtube.com/watch?v=P8U9D5pI8pg][Integration of Rebar, EUnit and Emacs Workflows - Zachary Kessin - YouTube]]
 #+BEGIN_QUOTE
 Many developers have gotten used to powerful tools such as IDE's on other platforms. For Erlang developers emacs can have as much or more power by combining emacs lisp and distel with native Erlang code. I will use the integration of Rebar, eunit to show how to build powerful tools in Emacs to make Erlang development more productive and more fun.

 #+END_QUOTE
** [2017-02-03 Fri 14:16] [[https://github.com/ch11ng/exwm/wiki#global-key-bindings][Home · ch11ng/exwm Wiki]]
 This guide serves as an introduction for new users to EXWM as well as
 a reference for advanced users. It mainly discusses major
 conceptions, usage and configurations of EXWM. It will be updated
 accordingly as EXWM evolves. Please consider helping improve this
 document.
** [2017-02-03 Fri 16:57] [[https://github.com/ch11ng/xelb][ch11ng/xelb: X protocol Emacs Lisp Binding]]
 XELB (X protocol Emacs Lisp Binding) is a pure Elisp implementation of X11 protocol based on the XML description files from XCB project. It features an object-oriented API and permits a certain degree of concurrency. It should enable you to implement some low-level X11 applications. Please refer to xelb.el for more details.
** [2017-02-03 Fri 16:59] [[https://github.com/jtamagnan/.emacs.d/blob/e2bd08535eda9bcabd413cc40a6ac72b0371546f/config.org][.emacs.d/config.org at e2bd08535eda9bcabd413cc40a6ac72b0371546f · jtamagnan/.emacs.d]]
 Jules Tamagnan Config File
** [2017-02-03 Fri 17:53] [[http://doc.rix.si/cce/cce-core.html#org27f8b3a][Complete Computing Environment: Core Configurations]]
  password-store is a simple interface to search and yank things out of pass11 my no-nonsense GPG based password manager. It uses Helm which makes it really easy to filter and search for the things I want to yank.
** [2017-02-03 Fri 23:53] [[http://www.eyefi.com/][Eyefi]]
 With Eyefi Mobi desktop you can send your JPEG and RAW files from your camera directly to your PC or Mac so you can add your personal touch with tools like Adobe Lightroom and save them with your computer-stored collections.
** [2017-02-04 Sat 00:30] [[https://github.com/schmendrik/OrgClockTray][schmendrik/OrgClockTray: Display your org-mode clock time in a tray icon in Windows' Taskbar]]
 OrgClockTray displays your org-mode clock time in a tray icon in Windows' Taskbar.

 If you use org-mode to clock your work time, and your work requires you to use tools other than emacs, you may find yourself switching back and forth to check the time, or make sure that you've clocked-in at all and didn't clock-out by mistake.

 If this is the case, OrgClockTray is for you.
** [2017-02-04 Sat 00:30] [[http://kitchingroup.cheme.cmu.edu/blog/2017/01/21/Exporting-org-mode-to-Jupyter-notebooks/][Exporting org-mode to Jupyter notebooks]]
  I am going to use Jupyter notebooks to teach from this semester. I really dislike preparing notebooks though. A browser is a really poor editor, and I really dislike Markdown. Notebooks do not seem to have any real structure in them, e.g. the collapsible outline that I am used to in org-mode, so for long notebooks, it is difficult to get a sense for the structure. I am anticipating spending up to 80 hours preparing notebooks this semester, so today I worked out some code to export org-mode to an ipython notebook!
** [2017-02-04 Sat 00:34] [[https://github.com/kaushalmodi/todoist.el][kaushalmodi/todoist.el: Elisp library to interface with Todoist API]]
 Elisp library to interface with Todoist API
** [2017-02-04 Sat 00:38] [[https://expoundite.net/dotfile-management/][Dotfile Management and Documentation with Org-Mode | Expoundite.net]]
 One day 'polm23' asked on Hacker News, what do the readers use to manage dotfiles. I was just experimenting with my method and contributed my two cents. Turns out, rare for me, I stumbled upon an original way to edit, document and deploy dotfiles. Although we Emacs users have been using Org-Mode to wrap our .emacs and document our settings for years, few people that I know have used it for managing more dotfiles.
** [2017-02-04 Sat 00:40] [[http://fortune-teller-amy-88756.netlify.com/knusper][Knusper's Emacs configuration]]
 Knusper's Emacs configuration
** [2017-02-04 Sat 00:42] [[https://github.com/jd/offlineimap.el][jd/offlineimap.el: OfflineIMAP support for Emacs]]

 OfflineIMAP support for Emacs
** [2017-02-04 Sat 00:43] [[https://www.emacswiki.org/emacs/PrintingPackage][EmacsWiki: Printing Package]]
 With printing you can preview or print a PostScript file. You can also print a text file using PostScript, and preview or print buffers that use certain special modes like mh-folder-mode, rmail-summary-mode, gnus-summary-mode, etc. This package also includes a PostScript/text printer database.
** [2017-02-04 Sat 00:45] [[https://www.emacswiki.org/emacs/MidnightMode][EmacsWiki: Midnight Mode]]
 Midnight mode is a package by SamSteingold that comes with Emacs for running configured actions at every “midnight”.
** [2017-02-04 Sat 00:49] [[http://fasciism.com/2017/01/24/x509-mode/][X509 Mode]]
  As part of my job, I often have to look at X.509 (SSL/TLS) certificates. I almost never want to see them in their raw state, a blob of unintelligible Base64 or binary. When opening an image in Emacs, the image is displayed in the window by default, and C-c C-c toggles between the image and its representation on disk. I want to have the same thing for X.509 certificates.
** [2017-02-04 Sat 01:33] [[https://www.reddit.com/r/emacs/comments/5p4oia/free_emacs_lisp_learning_resources/][Free Emacs Lisp learning Resources : emacs]]
 If you want to learn more about Emacs Lisp programming and don't know how to start here are some recommendations which helped me and might be useful for others:
** [2017-02-04 Sat 01:33] [[https://www.reddit.com/r/emacs/comments/5p475u/is_there_a_way_to_invoke_a_command_only_when_the/][Is there a way to invoke a command only when the *first* time a package is being loaded? : emacs]]
 I use jedi, irony-mode and pdf-tools all of which have a command that needs to be run once after they are loaded (jedi:install-server, irony-install-server and pdf-tools-install) respectively. Is there any way to do this automatically, but only once - the first time the package is loaded or right after its installation?
** [2017-02-04 Sat 01:37] [[https://www.emacswiki.org/emacs/DedicatedKeys][EmacsWiki: Dedicated Keys]]
 MeatBall:HumaneInterface argues for dedicated keys. These facilitate habit formation. Unless you can hack hardware, though, that means using the FunctionKeys.
** [2017-02-04 Sat 01:44] [[https://github.com/Wilfred/remacs][Wilfred/remacs: Rust Emacs]]
 A community-driven port of Emacs to Rust.
** [2017-02-04 Sat 01:46] [[https://github.com/jakoblind/github-pullrequest][jakoblind/github-pullrequest: Emacs package to create and fetch Github pull requests]]
 Emacs package to smoothly create and checkout Github pull requests. Uses the Github access token for authorization to Github. This means you can use this package even if your Github account uses Two-Factor Authentication.
** [2017-02-04 Sat 01:46] [[http://www.thinknix.net/2015/02/19/cross-platform-system-wide-org-capture/][Cross Platform System-wide Org-Capture – Think *NIX]]
 Here’s how I leverage Emacs org-capture from wherever I am in Windows, OS X, and other Unix and Unix-like operating systems.
** [2017-02-04 Sat 01:48] [[https://stackoverflow.com/questions/6997387/how-to-archive-all-the-done-tasks-using-a-single-command/27043756#27043756][org mode - How to archive all the DONE tasks using a single command - Stack Overflow]]
 Here's a corrected version of madalu's snippet. Note that this version also only operates on the current subtree (change 'tree back to 'file to operate over the entire file).
** [2017-02-04 Sat 01:53] [[https://github.com/caffo/org-minimal-html-theme][caffo/org-minimal-html-theme: Simple and beautiful orgmode HTML export theme]]

 Simple and beautiful orgmode HTML export theme http://orgminimal.tizi.moe/
** [2017-02-04 Sat 01:54] [[https://www.youtube.com/results?search_query=emacs&search_sort=video_date_uploaded][emacs - YouTube]]
 About 31,300 results
** [2017-02-04 Sat 01:56] [[https://lists.gnu.org/archive/html/emacs-devel/2017-01/][emacs-devel (date)]]
  Archives are refreshed every 30 minutes - for details, please visit the main index.
 You can also download the archives in mbox format.
** [2017-02-04 Sat 19:29] [[https://www.freshports.org/][FreshPorts -- The Place For Ports]]
 FreshPorts has everything you want to know about FreeBSD software, ports, packages, applications, whatever term you want to use.
** [2017-02-04 Sat 19:42] [[https://www.freedesktop.org/wiki/Software/systemd/][systemd]]
 systemd is a suite of basic building blocks for a Linux system. It provides a system and service manager that runs as PID 1 and starts the rest of the system. systemd provides aggressive parallelization capabilities, uses socket and D-Bus activation for starting services, offers on-demand starting of daemons, keeps track of processes using Linux control groups, maintains mount and automount points, and implements an elaborate transactional dependency-based service control logic. systemd supports SysV and LSB init scripts and works as a replacement for sysvinit. Other parts include a logging daemon, utilities to control basic system configuration like the hostname, date, locale, maintain a list of logged-in users and running containers and virtual machines, system accounts, runtime directories and settings, and daemons to manage simple network configuration, network time synchronization, log forwarding, and name resolution. See Lennart's blog story for a longer introduction, and the three status updates since then. Also see the Wikipedia article. If you are wondering whether systemd is for you, please have a look at this comparison of init systems by one of the creators of systemd.
** [2017-02-04 Sat 20:31] [[https://github.com/chrisdone/god-mode/][chrisdone/god-mode: Global minor mode for entering Emacs commands without modifier keys]]
 This is a global minor mode for entering Emacs commands without modifier keys. It's similar to Vim's separation of commands and insertion mode.
** [2017-02-04 Sat 20:36] [[http://archlinux.org.ru/forum/topic/14359/?page=9][Статистика Арча]]
 Да. Но если жизнь заставляет сидеть там существенно больше, чем полчаса, есть смысл не воротить нос, а прибрать и помыть руки. Где-то так для начала: Autohotkey, dexpot, nircmd, revouninstaller, unlocker, clipx, KatMouse, kdemouse, Procmon, procexp, ImgBurn, imdisk, двухпанельный ФМ (DC, к примеру), SumatraPDF. Для Win7 и выше также ClassicShell, VisualBcd. По вкусу можно добавить keyla, strokesplus, nncron, XMOUSE2000 (до W2k) или x-mouse_controls (для w7 и выше). Ну и ещё много чего настроить штатными средствами (иногда по локоть в реестре).
 Это я к тому, что те, кто не понимают кайфа ходить строем, и готовы потратить время на сборку действительно удобной среды, под Windows это тоже могут сделать.
** [2017-02-04 Sat 21:03] [[https://www.linux.org.ru/gallery/screenshots/13142233][Gnome 3.22 на Debian 9 — Скриншоты — Галерея]]
 gtk-font-name="Liberation Sans 10"
 gtk-xft-antialias=1
 gtk-xft-hinting=1
 gtk-xft-hintstyle="hintslight"
 gtk-xft-rgba="rgb"
** [2017-02-04 Sat 21:06] [[https://wiki.debian.org/Fonts][Fonts - Debian Wiki]]
 For most uses, you’ll want TrueType (TTF) and OpenType (OTF) fonts – these packages start with fonts-, ttf- or otf-.
** [2017-02-05 Sun 00:00] [[https://github.com/shdown/luastatus][shdown/luastatus: universal status bar content generator]]
 luastatus is a universal status bar content generator. It allows you to configure the way the data from plugins is processed and shown with Lua.

 Its main feature is that the content can be updated immediately as some event occurs, be it a change of keyboard layout, active window title, volume or a song in your favourite player (if there is a plugin for it, of course) — a thing rather uncommon for tiling window managers.
** [2017-02-05 Sun 00:03] [[https://github.com/bitlbee/bitlbee][bitlbee/bitlbee: An IRC to other chat networks gateway]]
 An IRC to other chat networks gateway

 Main website: http://www.bitlbee.org/

 Bug tracker: http://bugs.bitlbee.org/

 Wiki: http://wiki.bitlbee.org/

 License: GPLv2
** [2017-02-05 Sun 13:16] [[https://github.com/espeak-ng/espeak-ng/][espeak-ng/espeak-ng: eSpeak NG is an open source speech synthesizer that supports 95 languages and accents.]]
 The eSpeak NG (Next Generation) Text-to-Speech program is an open source speech synthesizer that supports 99 languages and accents. It is based on the eSpeak engine created by Jonathan Duddington. It uses spectral formant synthesis by default which sounds robotic, but can be configured to use Klatt formant synthesis or MBROLA to give it a more natural sound.

 See the CHANGELOG for a description of the changes in the various releases and with the eSpeak project.
** [2017-02-05 Sun 14:39] [[https://github.com/Airblader/i3][Airblader/i3: i3-gaps – i3 with more features (forked from https://github.com/i3/i3)]]
 This is a fork of i3wm, a tiling window manager for Linux. It includes a few additional features which you can read up on below.

 If you want to check out how you could use them, you could check out my dotfiles repository.

 This fork, much like i3 itself, maintains two branches: The gaps branch is the equivalent of i3's stable master branch while gaps-next contains gaps and i3's next.
** [2017-02-05 Sun 20:23] [[https://manuel-uberti.github.io/emacs/2017/02/04/guess-language/][Automatic language detection for Flyspell – Manuel Uberti]]
 I am always looking for new ways to improve my Emacs experience. Months ago, it happened to my spell-checking configuration thanks to the work of Nicolas Petton.
** [2017-02-05 Sun 20:30] [[https://github.com/tmalsburg/guess-language.el][tmalsburg/guess-language.el: Emacs mode that detects the language of what you're typing. Automatically switches spell checker. Supports multiple languages per document.]]
  Emacs mode that detects the language of what you're typing. Automatically switches spell checker. Supports multiple languages per document.
** [2017-02-05 Sun 20:47] [[https://github.com/Malabarba/smart-mode-line][Malabarba/smart-mode-line: A powerful and beautiful mode-line for Emacs.]]
 Smart Mode Line is a sexy mode-line for Emacs. It aims to be easy to read from small to large monitors by using colors, a prefix feature, and smart truncation.
** [2017-02-05 Sun 20:53] [[https://github.com/purcell/emacs.d][purcell/emacs.d: An Emacs configuration bundle with batteries included]]
 This is my emacs configuration tree, continually used and tweaked since 2000, and it may be a good starting point for other Emacs users, especially those who are web developers. These days it's somewhat geared towards OS X, but it is known to also work on Linux and Windows.

 Emacs itself comes with support for many programming languages. This config adds improved defaults and extended support for the following:

     Ruby / Ruby on Rails
     CSS / LESS / SASS / SCSS
     HAML / Markdown / Textile / ERB
     Clojure (with Cider and nRepl)
     Javascript / Coffeescript
     Python
     PHP
     Haskell
     Elm
     Erlang
     Common Lisp (with Slime)
** [2017-02-05 Sun 20:54] [[https://github.com/garybernhardt/dotfiles][garybernhardt/dotfiles: ~grb. Things in here are often interdependent. A lot of stuff relies on scripts in bin/.]]

 ~grb. Things in here are often interdependent. A lot of stuff relies on scripts in bin/.
** [2017-02-05 Sun 20:55] [[https://github.com/overtone/emacs-live][overtone/emacs-live: M-x start-hacking]]
 An opinionated set of defaults for getting started with a specific focus on live coding with Overtone and Quil. However, it's not just a one trick pony. It also happens to be:

     a jolly good generic Clojure hacking config
     a nice structured approach to organising your Emacs config
     modular in that functionality is organised by discrete packs
     a decent starting point for live coding in general
     a goldmine of config snippets to plunder and add to your own config
** [2017-02-05 Sun 20:55] [[https://github.com/magnars/.emacs.d][magnars/.emacs.d: My personal emacs settings, and the ones used in @emacsrocks]]
 An ever-changing set of emacs settings. Micro-optimizations are super fun. These are used in the Emacs Rocks screencasts. You can also see some thoughts behind the settings on my What the .emacs.d!?-blog.
** [2017-02-05 Sun 20:56] [[https://github.com/domtronn/all-the-icons.el][domtronn/all-the-icons.el: A utility package to collect various Icon Fonts and propertize them within Emacs.]]
 You should be able to install this package in the standard way, add it to the load path and then calling
** [2017-02-05 Sun 20:58] [[https://github.com/redguardtoo/cpputils-cmake][redguardtoo/cpputils-cmake: Easy real time C++ syntax check and intellisense if you use CMake]]
 Perfect syntax check (Flymake) and code-completion if you use CMake.

 cpputils-cmake does all the dirty setup automatically for following plugins and commands,
** [2017-02-05 Sun 20:58] [[https://github.com/emacs-ess/ESS][emacs-ess/ESS: Emacs Speaks Statistics: ESS]]
 Git development branch of Emacs Speaks Statistics: ESS.
 For more info, see our web page at http://ess.r-project.org/
** [2017-02-05 Sun 21:00] [[https://github.com/ryuslash/mode-icons][ryuslash/mode-icons: Show icons instead of mode names]]
 The icons look the best if you have the fonts installed on your system and mode-icons will not do this for you.
** [2017-02-05 Sun 22:17] [[https://github.com/for-GET/know-your-http-well][for-GET/know-your-http-well: HTTP headers, media-types, methods, relations and status codes, all summarized and linking to their specification.]]
 HTTP encodings, headers, media types, methods, relations and status codes, all summarized and linking to their specification.

 This project is used by HyperREST bin at bin.hyperrest.com .
** [2017-02-05 Sun 22:19] [[https://github.com/vermiculus/sx.el][vermiculus/sx.el: Stack Exchange for Emacs]]
 As always, C-h m is the definitive resource for functionality, but here are a few highlights:
** [2017-02-05 Sun 22:19] [[https://github.com/Sarcasm/irony-mode][Sarcasm/irony-mode: A C/C++ minor mode for Emacs powered by libclang]]
 irony-mode is an Emacs minor-mode that aims at improving the editing experience for the C, C++ and Objective-C languages. It works by using a combination of an Emacs package and a C++ program (irony-server) that uses libclang.
** [2017-02-05 Sun 22:20] [[https://github.com/jacktasia/dumb-jump][jacktasia/dumb-jump: an Emacs "jump to definition" package]]
 Dumb Jump is an Emacs "jump to definition" package with support for multiple programming languages that favors "just working". This means minimal -- and ideally zero -- configuration with absolutely no stored indexes (TAGS) or persistent background processes. Dumb Jump requires at least GNU Emacs 24.3.
** [2017-02-05 Sun 22:21] [[https://github.com/novoid/Memacs][novoid/Memacs: What did I do on February 14th 2007? Visualize your (digital) life in Org-mode]]
 What were you doing on February 14th of 2007? On which tasks were you working on that very day you met your girl friend? When was the last appointments with your dentist? Who called you on telephone during that meeting with your customer last month?
** [2017-02-05 Sun 22:22] [[https://github.com/CodeFalling/blog-admin][CodeFalling/blog-admin: Write blog in emacs with hexo/org-page/nikola]]
 https://github.com/CodeFalling/blog-admin/issues Write blog in emacs with hexo, org-page or nikola.
** [2017-02-05 Sun 22:25] [[https://github.com/hexojs/hexo][hexojs/hexo: A fast, simple & powerful blog framework, powered by Node.js.]]

     Blazing fast generating
     Support for GitHub Flavored Markdown and most Octopress plugins
     One-command deploy to GitHub Pages, Heroku, etc.
     Powerful plugin system
** [2017-02-05 Sun 23:11] [[https://www.twitch.tv/entr_ru][entr_ru - Twitch]]
 ☺ КОТАНЫ РВУТСЯ В БОЙ! ;) Clash Royale ❤ Shtukensia & Tangar
** [2017-02-06 Mon 18:08] [[https://github.com/jderose9/dash-to-panel][jderose9/dash-to-panel: An icon taskbar for the Gnome Shell. This extension moves the dash into the gnome main panel so that the application launchers and system tray are combined into a single panel, similar to that found in KDE Plasma and Windows 7+. A separate dock is no longer needed for easy access to running and favorited applications.]]

 An icon taskbar for the Gnome Shell. This extension moves the dash into the gnome main panel so that the application launchers and system tray are combined into a single panel, similar to that found in KDE Plasma and Windows 7+. A separate dock is no longer needed for easy access to running and favorited applications.
** [2017-02-06 Mon 19:05] [[https://github.com/zk-phi/magic-latex-buffer][zk-phi/magic-latex-buffer: {Emacs} magical syntax highlighting for LaTeX-mode buffers]]
 #+BEGIN_QUOTE
 Magically enhance LaTeX-mode font-locking for semi-WYSIWYG editing.


 #+END_QUOTE
** [2017-02-07 Tue 14:36] [[https://vk.com/im?msgid=37767&sel=c4][Диалоги]]
 - Размер резьбы расчитывается :: диаметр отверстия минус шаг
      резьбы. Если точнее, то только по таблице смотреть. В курсаче
      применялась метрическая резьба, он восновном всех спрашивает
      одно. Ну что метрическая понятно, а про формулу не знал спасибо!
      То есть получается что высота резьбы и шаг резьбы одинаковые?

*** Изменение шага резьбы на винте или болте без специального зубомера
Болт М-12. Необходим штангенциркуль с острозаточенными
губками. Обратить внимание сколько ниток резьбы мы измерили. Первую
нитку в счет не берем, так как от нее происходит отсчет и она является
нулевой.

Вычисления производится по формуле. Длину ниток нужно разделить на
количество ниток и в итоге получается шаг.
** [2017-02-07 Tue 14:36] [[https://vk.com/im?msgid=37767&sel=c4][Диалоги]]
 #+BEGIN_QUOTE
 Ну что метрическая понятно, а про формулу не знал спасибо!:)
 То есть получается что высота резьбы и шаг резьбы одинаковые?
 #+END_QUOTE
** [2017-02-07 Tue 14:48] [[https://www.youtube.com/watch?v=O8o0nNGh4xI][Отверстия под резьбу - YouTube]]
 #+BEGIN_QUOTE
 Если Вам нужно нарезать резьбу, то для этого  нужно знать диаметр отверстия под резьбу.

 #+END_QUOTE
** [2017-02-07 Tue 15:43] [[https://www.youtube.com/user/DemmSec/about][DemmSec - YouTube]]
 #+BEGIN_QUOTE
 Penetration Testing Tutorials
 
 Business Email: business@demmsec.co.uk
 
 Currently looking for sponsors!
 Details
 Country:        United Kingdom
 Links
 DemmSec Forums  Twitter Google+
 Stats
 Joined Apr 20, 2012
 1,877,982 views

 #+END_QUOTE
** [2017-02-07 Tue 15:44] [[https://groups.google.com/forum/#!topic/leti-user/6HZ_s0obn6U][Физика. Задания для контрольных на 2-й семестр. - Google Groups]]
 #+BEGIN_QUOTE
 Никита Яковлев  
 Jan 31

 Translate message to English  

 Необходимо выполнить 2 контрольные работы: №1 и №2 (см. стр. 45 и
 60). 

 Номер варианта - последние 2 цифры номера зачётки (если они больше
 20, от сначала отнять 20, например, если 29, то вариант 9). Работы
 сдать в двух отдельных тетрадках. Решение оформлять по всем правилам,
 с "дано" и т. п., нарисовать большие, аккуратные рисунки, желательны
 комментарии. Сначала нужно вывести формулу с буквами, и только на
 последнем этапе подставить конкретные числа.  Сдать работы в
 ауд. 3111 в первые 2 дня сессии. В случае просрочки может дать другой
 вариант. Возможно, на экзамене будет просить пояснить решение своих
 контрольных.

 Преподаватель Ходьков Дмитрий Афанасьевич.

 В сессию будут 4 лекции и 4 лабораторных. Лабораторные - с особой
 формой отчёта, написанного от руки, причем приходить на саму
 лабораторную нужно уже с заготовкой и в конце что-то подписать у
 пр-ля. Более подробно - в приложенной методичке и на сайте
 physicsleti.ru Темы для изучения по семестрам в принципе тоже есть в
 методичке. Сказал, что в течение семестра нужно хорошо всё изучить,
 начиная со школьной программы.
 #+END_QUOTE
** [2017-02-07 Tue 16:50] [[http://obrazets-resume.ru/sobesedovanie_oshibki/][Типичные ошибки на собеседовании]]
 Собеседование - это ваше первое достижение на пути трудоустройства. Тот факт, что вас пригласили на собеседование, уже говорит о том, что ваше резюме было выделено среди остальных. Теперь вам необходимо произвести на собеседовании положительное впечатление, которое уже заочно о вас сложилось на основе вашего резюме. Вот несколько советов на примере типичных ошибок на собеседовании, которые часто допускают кандидаты. Особенно часто эти ошибки допускают молодые или начинающие кандидаты, у которых мало опыта. Но, увы, и опытные кандидаты и даже соискатели в солидном возрасте тоже допускают подобные ошибки, хотя, наверное, несколько реже, чем новички. В любом случае, даже если вы считаете себя опытным кандидатом, посмотрите на приведенные типичные ошибки на собеседовании, чтобы убедиться, что вы их точно не допустите.
** [2017-02-07 Tue 16:53] [[https://www.google.ru/search?q=%25D0%25B4%25D0%25B0%25D0%25B2%25D0%25B0%25D1%2582%25D1%258C+%25D0%25BB%25D0%25B8+%25D1%2580%25D1%2583%25D0%25BA%25D1%2583+%25D0%25BD%25D0%25B0+%25D1%2581%25D0%25BE%25D0%25B1%25D0%25B5%25D1%2581%25D0%25B5%25D0%25B4%25D0%25BE%25D0%25B2%25D0%25B0%25D0%25BD%25D0%25B8%25D0%25B8&ie=utf-8&oe=utf-8&gws_rd=cr&ei=ItCZWIXNEaPX6ASWtaCgDw][давать ли руку на собеседовании - Google Search]]
 давать ли руку на собеседовании
** [2017-02-07 Tue 23:11] [[https://vk.com/im?peers=c4_c5_1927657_71521315_384426051_22115670_113006911&sel=53594011][Диалоги]]
 #+BEGIN_QUOTE
 А какие темы будут хотя бы?
 
 Иван 23:08
 Курсовая работа основана на указателях, работой с файлами и списками
 
 Олег 23:09
 хм, херня по идее
 и жопа на самом деле (наверное) :)
 
 Иван 23:09
 Так помимо курсовой ещё дрочево по теории будет как обычно
 #+END_QUOTE
** [2017-02-07 Tue 23:14] [[http://docs.kali.org/downloading/kali-linux-live-usb-persistence][Kali Linux Live USB Persistence | Kali Linux]]
 #+BEGIN_QUOTE
 Kali Linux “Live” has two options in the default boot menu which enable persistence — the preservation of data on the “Kali Live” USB drive — across reboots of “Kali Live”. This can be an extremely useful enhancement, and enables you to retain documents, collected testing results, configurations, etc., when running Kali Linux “Live” from the USB drive, even across different systems. The persistent data is stored in its own partition on the USB drive, which can also be optionally LUKS-encrypted.


 #+END_QUOTE
** [2017-02-08 Wed 00:46] [[https://vk.com/im?sel=1927657][Диалоги]]
 #+BEGIN_QUOTE
 Почему тебе так принципиальна близость к универу?
 Если иногда надо что-то узнавать, я могу туда ездить (работаю на горьковской), но староста из меня не выйдет)
 #+END_QUOTE
** [2017-02-08 Wed 01:07] [[https://2gis.ru/spb/firm/5349008107309393%252C30.323188%252C59.971991?queryState=center%252F30.324519%252C59.973672%252Fzoom%252F16][Санкт-Петербургский государственный электротехнический университет, Профессора Попова, 5, Санкт-Петербург — 2ГИС]]
 #+BEGIN_QUOTE
 Факультет переподготовки и повышения квалификации
 СПбГЭТУ,
 Санкт-Петербург, Профессора Попова, 5
 У организации 18 филиалов
 Сегодня 10:00–17:00
 Откроется в 10:00
 Избранное
 Добавить фото

 #+END_QUOTE
** [2017-02-08 Wed 01:31] [[https://www.youtube.com/watch?v=6HzWIP27ET0][КАК ПОДОЙТИ ПОЗНАКОМИТЬСЯ С ДЕВУШКОЙ ♥ Отношения ♥ Live Stream - YouTube]]
 #+BEGIN_QUOTE
 Прямой эфир! Штукенция отвечает зрителям на форуме: http://xxxforum.org/
 Поддержать нас (Donate): https://twitch.streamlabs.com/entr_ru
 ►Наш сайт: http://ENTR.ru
 ►Сайт Штукеции: http://shtukensia.com/thisis/love/
 Подпишись на каналы ♥ Отношения ♥ и на мой первый канал:

 http://www.youtube.com/ShtukensiaLOVE 
 http://www.youtube.com/Shtukensia

 ✔ Хотите, чтобы вашу ситуацию разобрали в прямом эфире? Опишите все подробно на форуме: http://xxxforum.org

 ✔ В особых случаях пишите на почту с темой "ОТНОШЕНИЯ"
 ✉ Shtukensia ❍ gmail.com (и будьте готовы поддержать развитие данного проекта)
 ————————————————————————————
 ღ  Вконтакте: http://vk.com/shtukensialove
 #  Инстаграм: http://instagram.com/verado
 @ Твиттер: http://twitter.com/Shtukensia
 ————————————————————————————
 ЗНАКОМСТВА, ПЕРВОЕ СВИДАНИЕ: http://www.youtube.com/playlist?list=...

 ВСЕ ПЛЕЙЛИСТЫ: https://www.youtube.com/ShtukensiaLov...
 ————————————————————————————
 КОНТАКТЫ: http://shtukensia.com/contacts/
 Category
 People & Blogs
 License
 Standard YouTube License
 SHOW LESS

 #+END_QUOTE
** [2017-02-08 Wed 13:46] [[https://golos.io/][Trending posts — Голос]]
 #+BEGIN_QUOTE
 голос
 mapala
 фотография
 стихи
 фотоголосище
 жизнь
 десятьфактовобомне
 образование
 творчество
 голосмедиа
 медицина
 знакомство
 статистика
 фото
 рукоделие
 рифмомарафон
 натрибуквы
 поэзия
 bitcoin
 ua
 конкурс
 вырастиблогера
 #+END_QUOTE
** [2017-02-08 Wed 14:27] [[https://www.grammarly.com/?q=writing&utm_source=youtube&utm_content=ccoverlay][Free Grammar Checker | Grammarly]]
 #+BEGIN_QUOTE
 Grammarly is trusted by students, professional writers, business people, bloggers, and people who just want to write better. No matter what your writing situation is, Grammarly adapts to your needs, giving you the confidence of mistake-free writing every time you write.

 Add to ChromeIt’s free

 #+END_QUOTE
** [2017-02-08 Wed 14:31] [[http://nullprogram.com/blog/2017/01/30/][How to Write Fast(er) Emacs Lisp « null program]]
 Not everything written in Emacs Lisp needs to be fast. Most of Emacs itself — around 82% — is written in Emacs Lisp because those parts are generally not performance-critical. Otherwise these functions would be built-ins written in C. Extensions to Emacs don’t have a choice and — outside of a few exceptions like dynamic modules and inferior processes — must be written in Emacs Lisp, including their performance-critical bits. Common performance hot spots are automatic indentation, AST parsing, and interactive completion.
** [2017-02-08 Wed 14:32] [[http://mbork.pl/2017-01-30_Current_Emacs_version][Marcin Borkowski: 2017-01-30 Current Emacs version]]
 When mailing to the Emacs devs about bugs, you should obviously mention the version of Emacs you are using. This is usually done with M-x emacs-version, which displays the version info in the minibuffer (or inserts it at point when invoked with a prefix argument). However, if you happen to use a development version of Emacs, compiled from source, this is not very meaningful – it does not contain any information about the actual commit hash. I asked about it on the mailing list, and learned about the emacs-repository-get-version funtion (which is not interactive, btw), which returns the VCS’s idea of the “current version” (nowadays it is just Git’s commit hash).
** [2017-02-08 Wed 14:33] [[http://www.holgerschurig.de/en/emacs-tayloring-the-built-in-mode-line/][Tayloring the built-in Emacs Mode line · Holger's Computer Calisthenics and Orthodontia]]
 For some time, I used smart-mode-line. And then powerline. And than, for just some hours, I tried spaceline, because powerline was a tad to unwieldy for me. After all those experiments with fancy mode-lines I wondered “What don’t I just customization the built-in mode-line to my need, it can’t be hard!”
** [2017-02-08 Wed 17:12] [[https://www.reddit.com/r/emacs/comments/5rsxua/how_to_do_structured_search_on_thousands_of/][How to do structured search on thousands of org-syntax files? : emacs]]
 At a non-profit museum where I help, they use tens of thousands of using org-syntax text files to annotate each item in the collections of the archive.
** [2017-02-09 Thu 01:18] [[https://www.luminpdf.com/viewer/PWRb4WHMRZg8A65WZ][kursov.pdf - Lumin PDF]] Программирование курсовая работа
 #+BEGIN_QUOTE
 7.Обеспечить эффективное хранение данных и быстрый поиск информации
 об элементах жизнеобеспечения в помещениях здания. Имеется список
 помещений и коридоров (пронумеро-ваны) по этажам здания. Для каждого
 помещения или коридора имеется список размещенных в нем элементов
 жизнеобеспечения (наименование, количество, место установки
 –например, пол, потолок, стена) с указанием их типов: кондиционеры,
 электророзетки, светильники, водо-проводные краны и т.п.Осуществить
 быстрый поиск следующей информации:-месторасположение
 элементовжизнеобеспечения определенного типа,-все элементы
 жизнеобеспечения на определенном этаже по заданному месту
 установки,-месторасположение элементов жизнеобеспечения определенного
 типа для заданного этажа,-группировка элементов жизнеобеспечения в
 коридорах по этажам здания.
 #+END_QUOTE
** [2017-02-09 Thu 05:56] [[https://github.com/sysprogs/WinCDEmu][sysprogs/WinCDEmu]]
 #+BEGIN_QUOTE
 Checkout WinCDEmu (https://github.com/sysprogs/WinCDEmu), BazisLib (https://github.com/sysprogs/BazisLib) and STLPort-kernel (https://github.com/sysprogs/stlport-kernel) to a common directory.
 Set the BZSLIB_PATH environment variable to point at the BazisLib directory
 Set the STLPORT_PATH environment variable to point at the STLPort directory
 Install WDK 7.x and set the WDK7PATH environment variable to point at it
 Download/unpack WTL 8.0 and set WTL_PATH to point at it
 Open WinCDEmu.sln in Visual Studio 2010-2015
 Build the kernel-mode release configurations and then the user-mode release configurations
 The binaries will be saved to AllModules

 #+END_QUOTE
** [2017-02-09 Thu 18:23] [[https://groups.google.com/forum/#!topic/leti-user/6HZ_s0obn6U][Физика. Задания для контрольных на 2-й семестр. - Google Groups]]
 Необходимо выполнить 2 контрольные работы: №1 и №2 (см. стр. 45 и 60). Номер варианта - последние 2 цифры номера зачётки (если они больше 20, от сначала отнять 20, например, если 29, то вариант 9). Работы сдать в двух отдельных тетрадках. Решение оформлять по всем правилам, с "дано" и т. п., нарисовать большие, аккуратные рисунки, желательны комментарии. Сначала нужно вывести формулу с буквами, и только на последнем этапе подставить конкретные числа.
 Сдать работы в ауд. 3111 в первые 2 дня сессии. В случае просрочки может дать другой вариант. Возможно, на экзамене будет просить пояснить решение своих контрольных.

 Преподаватель Ходьков Дмитрий Афанасьевич.

 В сессию будут 4 лекции и 4 лабораторных. Лабораторные - с особой формой отчёта, написанного от руки, причем приходить на саму лабораторную нужно уже с заготовкой и в конце что-то подписать у пр-ля. Более подробно - в приложенной методичке и на сайте physicsleti.ru Темы для изучения по семестрам в принципе тоже есть в методичке. Сказал, что в течение семестра нужно хорошо всё изучить, начиная со школьной программы.
** [2017-02-09 Thu 20:00] [[http://library.eltech.ru/pervokursnikam.html][http://library.eltech.ru/pervokursnikam.html]]

 ВНИМАНИЕ, ПЕРВОКУРСНИК!

 Опубликовано 31.08.2016

 Выдача читательских билетов и литературы студентам первого курса дневного отделения производится СТРОГО ПО РАСПИСАНИЮ!

 Библиотека приглашает старост групп I курса дневного отделения для записи на фотографирование для читательских билетов и получение комплектов книг.

 Запись производится в Читальном зале №1 (1 корпус, 2 этаж, помещение 12-01).

 При себе иметь расписание занятий.

 Запись на фотографирование: с 01.09.2016 по 09.09.2016 с 11-00 до 16-00.

 Фотографирование студентов 1 курса производится с 5.09.2016 по 23.09.2016.

 Выдача литературы студентам 1 курса производится с 08.09.2016 по 22.09.2016

 На время выдачи 1 курсу, фотографирование на ламинированные читательские билеты студентов старших курсов и сотрудников ВУЗа производиться не будет!

 Возможны изменения в расписаниях. Более подробную информацию можно получить в Читальном зале №1 (1 корпус, 2 этаж, помещение 12-01) с 11.00 до 16.00

 Важная информация:
 Для фотографирования КАЖДЫЙ СТУДЕНТ ГРУППЫ должен иметь при себе студенческий билет или паспорт.
 Верхняя одежда не должна быть белого цвета.
** [2017-02-09 Thu 20:01] [[http://ibooks.ru/][Электронно-библиотечная система ibooks.ru]]
 ibooks.ru - электронная библиотечная система учебной и научной литературы. Основная задача - обеспечение читателей библиотек доступом к самым сосвременным электронным книгам ведущих издательств России...
** [2017-02-09 Thu 20:02] [[https://biblio-online.ru/][ЭБС ЮРАЙТ]]
 Новинки и переиздания за месяц
** [2017-02-09 Thu 21:17] [[http://library.eltech.ru/][Библиотека СПбГЭТУ]]
 Напоминаем Вам, что доступ к электронно-библиотечным системам «Айбукс.ру/ibooks.ru» и ЭБС «Издательства Лань» возможен из любой точки сети Интернет. Для получения удаленного доступа необходима регистрация пользователя с одного из компьютеров сети университета.
** [2017-02-09 Thu 21:18] [[http://library.eltech.ru/][Библиотека СПбГЭТУ]]


 Режим работы библиотеки:

 Абонементы:

     Понедельник - Пятница с 10:00 до 19:00

 Читальные залы №1 и №2:

     Понедельник - Пятница с 10:00 до 19:00

 Фотографирование на ламинированные читательские билеты:

     Вторник, Четверг с 13:00 до 18:30 (перерыв с 15:00 до 16:30)

 Приём ВКР для публикации в ЭБС СПбГЭТУ"ЛЭТИ"

     пн., ср., пт., с 12:00 до 16:00 в помещении 11-30 (1 корпус, 1 этаж).
** [2017-02-09 Thu 21:19] [[http://library.eltech.ru/chitatelskie_bileti.html][http://library.eltech.ru/chitatelskie_bileti.html]]

 Выдача читательских билетов.

 Опубликовано 11.10.2012

 Уважаемые преподаватели, сотрудники и аспиранты СПбГЭТУ!

 Библиотека СПбГЭТУ доводит до вашего сведения, что желающие получить читательский билет могут сфотографироваться в читальном зале №1 (пом. 12-01) по расписанию: вторник, четверг- 13.00- 18.30, перерыв- 15.00- 16.30.

 Необходимым условием фотографирования на читательский билет является отсутствие задолженности перед библиотекой.

 Срок изготовления читательского билета можно узнать у сотрудника библиотеки, производящего фотографирование.

 Выдача готовых читательских билетов производится в отделе научной литературы (пом. 12-50) в часы работы библиотеки. Иметь при себе паспорт!

 

 Уважаемые студенты СПбГЭТУ!

 Библиотека СПбГЭТУ доводит до вашего сведения, что желающие записаться в библиотеку и получить читательский билет могут сфотографироваться в читальном зале №1 (пом. 12-01) по расписанию: вторник, четверг- 13.00- 18.30, перерыв- 15.00- 16.30.

 Срок изготовления читательского билета можно узнать у сотрудника библиотеки, производящего фотографирование.

 Выдача готовых читательских билетов производится в читальном зале №1 (пом. 12-01) в часы работы библиотеки. Иметь при себе студенческий билет!
** [2017-02-09 Thu 21:51] [[http://www.openscad.org/][OpenSCAD - The Programmers Solid 3D CAD Modeller]]
 #+BEGIN_QUOTE
 It is free software and available for Linux/UNIX, MS Windows and Mac OS X.

 #+END_QUOTE
** [2017-02-10 Fri 12:11] [[https://github.com/Boomaga/boomaga][Boomaga/boomaga: Boomaga provides a virtual printer for CUPS. This can be used for print preview or for print booklets.]]
 The program is very simple to work with. Running any program, click “print” and select “Boomaga” to see in several seconds (CUPS takes some time to respond) the Boomaga window open. If you print out one more document, it gets added to the previous one, and you can also print them out as one.
** [2017-02-10 Fri 12:23] [[https://github.com/alexandervdm/gummi][alexandervdm/gummi: Simple LaTeX editor]]
 Welcome to the new official home for Gummi. It's good to be back. I've decided to make a short FAQ to answer some of the questions you may have had while the original website was offline.
** [2017-02-10 Fri 12:23] [[https://www.jabref.org/][JabRef]]
 JabRef is an open source bibliography reference manager. The native file format used by JabRef is BibTeX, the standard LaTeX bibliography format. JabRef runs on the Java VM (version 1.8 or newer), and works equally well on Windows, Linux, and Mac OS X.

 BibTeX is an application and a bibliography file format written by Oren Patashnik and Leslie Lamport for the LaTeX document preparation system. General information can be found on the CTAN BibTeX package information page. JabRef also supports BibLaTeX.

 Bibliographies generated by LaTeX and BibTeX from a BibTeX file can be formatted to suit any reference list specifications through the use of different BibTeX and BibLaTeX style files.
** [2017-02-10 Fri 12:23] [[https://www.calligra.org/kexi/][Kexi | Calligra Suite]]
 Kexi is a visual database applications creator. It can be used for designing database applications, inserting and editing data, performing queries, and processing data. Forms can be created to provide a custom interface to your data. All database objects – tables, queries, forms, reports – are stored in the database, making it easy to share data and design.
** [2017-02-10 Fri 12:24] [[https://wiki.gnome.org/Apps/LaTeXila][Apps/LaTeXila - GNOME Wiki!]]
 LaTeXila is a LaTeX editor for the GNOME desktop. It is a free/libre software (GPLv3+ license). It runs on GNU/Linux, OpenBSD, Mac OS X and probably other UNIX systems.

 The idea of LaTeXila is to always deal directly with the LaTeX code, while simplifying as most as possible the writing of this LaTeX code.

 Here are the main features of LaTeXila 3.22, the current stable version released in September 2016.
** [2017-02-10 Fri 12:24] [[http://www.lyx.org/][LyX | LyX – The Document Processor]]
 LyX is a document processor that encourages an approach to writing based on the structure of your documents (WYSIWYM) and not simply their appearance (WYSIWYG).
** [2017-02-10 Fri 12:26] [[https://www.hub.org/pgfoundry/][pgFoundry Being Rebuilt - Hub.Org Hosting Solutions S.A.]]
  Due to the administrative mess that pgFoundry has become, we are rebuilding it from the ground up instead of continually trying to try stay ahead of the curve with the existing version.

 If you have a project on pgFoundry that you are either using, or own, please send an email to scrappy@hub.org, as everything from the original site has been backed up.

 We hope to have the new site up and running over the next couple of weeks ... sorry for the inconvience ...
** [2017-02-10 Fri 12:28] [[https://github.com/retext-project/retext][retext-project/retext: ReText: Simple but powerful editor for Markdown and reStructuredText]]
 ReText is a simple but powerful editor for Markdown and reStructuredText markup languages. ReText is written in Python language and works on Linux and other POSIX-compatible platforms. To install ReText, use setup.py install command.
** [2017-02-10 Fri 12:31] [[https://github.com/ProofGeneral/PG/][ProofGeneral/PG: This repo is the new home of Proof General]]
 Proof General is a generic Emacs interface for proof assistants. The aim of the Proof General project is to provide a powerful, generic environment for using interactive proof assistants.
** [2017-02-10 Fri 12:33] [[https://github.com/spyder-ide/spyder][spyder-ide/spyder: Official repository for Spyder - The Scientific PYthon Development EnviRonment]]
 Spyder is a Python development environment with a lot of features:
** [2017-02-10 Fri 12:33] [[https://umbrello.kde.org/][Umbrello Project - Welcome to Umbrello - The UML Modeller]]
 Umbrello UML Modeller is a Unified Modelling Language (UML) diagram program based on KDE Technology.
** [2017-02-10 Fri 12:38] [[https://github.com/distcc/distcc][distcc/distcc: distributed builds for C, C++ and Objective C]]
 distcc is a program to distribute compilation of C or C++ code across several machines on a network. distcc should always generate the same results as a local compile, is simple to install and use, and is often two or more times faster than a local compile.
** [2017-02-10 Fri 14:36] [[https://github.com/cryos/avogadro][cryos/avogadro: Avogadro is an advanced molecular editor designed for cross-platform use in computational chemistry, molecular modeling, bioinformatics, materials science, and related areas. It offers flexible rendering and a powerful plugin architecture.]]

 Avogadro is an advanced molecular editor designed for cross-platform use in computational chemistry, molecular modeling, bioinformatics, materials science, and related areas. It offers flexible rendering and a powerful plugin architecture. http://avogadro.cc/
** [2017-02-10 Fri 14:44] [[https://github.com/fchollet/keras][fchollet/keras: Deep Learning library for Python. Convnets, recurrent neural networks, and more. Runs on Theano or TensorFlow.]]
 Keras is a high-level neural networks library, written in Python and capable of running on top of either TensorFlow or Theano. It was developed with a focus on enabling fast experimentation. Being able to go from idea to result with the least possible delay is key to doing good research.

 Use Keras if you need a deep learning library that:

     Allows for easy and fast prototyping (through total modularity, minimalism, and extensibility).
     Supports both convolutional networks and recurrent networks, as well as combinations of the two.
     Supports arbitrary connectivity schemes (including multi-input and multi-output training).
     Runs seamlessly on CPU and GPU.
** [2017-02-10 Fri 14:44] [[https://github.com/kylemcdonald/FreeWifi][kylemcdonald/FreeWifi: How to get free wifi.]]
 This short tutorial describes a few methods for gaining access to the Internet, a basic human right, from public wireless networks.

 This tutorial has been tested on Mac and a Raspberry Pi. It should generally work on Linux, and hasn't been tested on Windows.
** [2017-02-10 Fri 14:48] [[https://github.com/x0rz/tweets_analyzer][x0rz/tweets_analyzer: Tweets metadata scraper & activity analyzer]]
 The goal of this simple python script is to analyze a Twitter profile through its tweets by detecting:

     Average tweet activity, by hour and by day of the week
     Timezone and language set for the Twitter interface
     Sources used (mobile application, web browser, ...)
     Geolocations
     Most used hashtags, most retweeted users and most mentioned users
     Friends analysis based on most frequent timezones/languages
** [2017-02-10 Fri 15:12] [[https://github.com/fourier/ztree][fourier/ztree: Directory tree comparison mode for Emacs]]
 Ztree is a project dedicated to implementation of several text-tree applications inside GNU Emacs. It consists of 2 subprojects: ztree-diff and ztree-dir (the basis of ztree-diff). Available in GNU ELPA and MELPA.
** [2017-02-10 Fri 15:19] [[https://github.com/facebookarchive/phpsh][facebookarchive/phpsh: A read-eval-print-loop for php]]
 This is an archived project and is no longer supported or updated by Facebook. Please do not file issues or pull-requests against this repo. If you wish to continue to develop this code yourself, we recommend you fork it.
** [2017-02-10 Fri 15:19] [[https://github.com/magnars/multiple-cursors.el][magnars/multiple-cursors.el: Multiple cursors for emacs.]]
 Multiple cursors for Emacs. This is some pretty crazy functionality, so yes, there are kinks. Don't be afraid tho, I've been using it since 2011 with great success and much merriment.
** [2017-02-10 Fri 15:19] [[https://github.com/fxbois/web-mode][fxbois/web-mode: web template editing mode for emacs]]
 web-mode.el is an emacs major mode for editing web templates aka HTML files embedding parts (CSS/JavaScript) and blocks (pre rendered by client/server side engines).

 web-mode.el is compatible with many template engines: PHP, JSP, ASP, Django, Twig, Jinja, Mustache, ERB, FreeMarker, Velocity, Cheetah, Smarty, CTemplate, Mustache, Blade, ErlyDTL, Go Template, Dust.js, Google Closure (soy), React/JSX, Angularjs, ejs, Nunjucks, etc.
** [2017-02-10 Fri 15:52] [[https://github.com/mickeynp/smart-scan][mickeynp/smart-scan: Jumps between other symbols found at point in Emacs]]
 Smart Scan will try to infer the symbol your point is on and let you jump to other, identical, symbols elsewhere in your current buffer with a single key stroke. The advantage over isearch is its unintrusiveness; there are no menus, prompts or other UI elements that require your attention.
** [2017-02-10 Fri 15:59] [[https://github.com/purcell/whitespace-cleanup-mode][purcell/whitespace-cleanup-mode: In Emacs, intelligently call whitespace-cleanup on save]]
 This Emacs library minor mode will intelligently call whitespace-cleanup before buffers are saved.

 whitespace-cleanup is a handy function, but putting it in before-save-hook for every buffer is overkill, and causes messy diffs when editing third-party code that did not initially have clean whitespace.

 Additionally, whitespace preferences are often project-specific, and it's inconvenient to set up before-save-hook in a .dir-locals.el file.

 whitespace-cleanup-mode is a minor mode which calls whitespace-cleanup before saving the current buffer, but only if the whitespace in the buffer was initially clean. It determines this by quickly checking to see if whitespace-cleanup would have any effect on the buffer.
** [2017-02-10 Fri 16:05] [[https://github.com/zk-phi/indent-guide][zk-phi/indent-guide: {emacs} show vertical lines to guide indentation]]
 show vertical lines to guide indentation
** [2017-02-10 Fri 16:05] [[https://github.com/antonj/Highlight-Indentation-for-Emacs][antonj/Highlight-Indentation-for-Emacs: Minor modes to highlight indentation guides in emacs.]]
 Provides two minor modes highlight-indentation-mode and highlight-indentation-current-column-mode

     highlight-indentation-mode displays guidelines indentation (space indentation only).
     highlight-indentation-current-column-mode displays guidelines for the current-point indentation (space indentation only).
** [2017-02-10 Fri 16:07] [[https://kapeli.com/dash][Dash for macOS - API Documentation Browser, Snippet Manager - Kapeli]]
 Dash is an API Documentation Browser and Code Snippet Manager. Dash stores snippets of code and instantly searches offline documentation sets for 150+ APIs (for a full list, see below). You can even generate your own docsets or request docsets to be included.
** [2017-02-10 Fri 16:07] [[https://github.com/gregsexton/origami.el][gregsexton/origami.el: A folding minor mode for Emacs]]
 A text folding minor mode for Emacs.

 With this minor mode enabled, you can collapse and expand regions of text.

 The actual buffer contents are never changed in any way. This works by using overlays to affect how the buffer is presented. This also means that all of your usual editing commands should work with folded regions. For example killing and yanking folded text works as you would expect.

 There are many commands provided to make expanding and collapsing text convenient.
** [2017-02-10 Fri 16:14] [[https://github.com/syohex/emacs-git-gutter-fringe][syohex/emacs-git-gutter-fringe: Fringe version of git-gutter.el]]
 git-gutter-fringe.el is fringe version of of git-gutter.el.

 git-gutter.el does not work with linum-mode but git-gutter-fringe.el can work with linum-mode. In contrast, git-gutter-fringe.el does not work in tty frame(emacs -nw), but git-gutter.el can work in tty frame.

 NOTE: You can not use both git-gutter.el and git-gutter-fringe.el
** [2017-02-10 Fri 16:17] [[https://github.com/sabof/org-bullets][sabof/org-bullets: utf-8 bullets for org-mode]]
 Show org-mode bullets as UTF-8 characters.
** [2017-02-10 Fri 16:17] [[https://github.com/syohex/emacs-git-messenger][syohex/emacs-git-messenger: Emacs Port of git-messenger.vim]]
 git-messenger.el provides function that popup commit message at current line. This is useful when you want to know why this line was changed.
** [2017-02-10 Fri 16:20] [[https://github.com/rmuslimov/browse-at-remote][rmuslimov/browse-at-remote: Browse target page on github/bitbucket from emacs buffers]]
 This package is easiest way to open particular link on github/gitlab/bitbucket from Emacs. It supports various kind of emacs buffer, like:

     file buffer
     dired buffer
     magit-mode buffers represinting code
     vc-annotate mode (use get there by pressing C-x v g by default)
** [2017-02-10 Fri 16:21] [[https://github.com/sshaw/git-link][sshaw/git-link: Emacs package to get the GitHub/Bitbucket/GitLab/... URL for a buffer location]]
 Interactive Emacs functions that create URLs for files and commits in GitHub/Bitbucket/GitLab/... repositories.

 git-link returns the URL for the current buffer's file location at the current line number or active region.

 git-link-commit returns the URL for the commit at point.

 git-link-homepage returns the URL for the repository's homepage.

 URLs are added to the kill ring.
** [2017-02-10 Fri 16:21] [[https://github.com/magit/git-modes][magit/git-modes: Emacs major modes for various Git configuration files]]
 Emacs major modes for various Git configuration files.

 The list of contributors can be found here.

 All modes are maintained by Jonas Bernoulli.
** [2017-02-10 Fri 16:21] [[https://github.com/pidu/git-timemachine][pidu/git-timemachine: Step through historic versions of git controlled file using everyone's favourite editor]]
 Installation alternatives:

     Download git-timemachine.el and drop it somewhere in your load-path.
     If you use el-get, simply add git-timemachine to your packages list.
     If you have melpa configured it's available through package-install.
** [2017-02-10 Fri 16:22] [[https://github.com/peterwvj/eshell-up][peterwvj/eshell-up: Quickly go to a specific parent directory in eshell]]
 Emacs package for quickly navigating to a specific parent directory in eshell without having to repeatedly typing cd ...
** [2017-02-10 Fri 16:23] [[https://github.com/zk-phi/symon/][zk-phi/symon: {Emacs} tiny graphical system monitor]]
 tiny graphical system monitor
** [2017-02-10 Fri 16:23] [[https://github.com/mhayashi1120/Emacs-wgrep][mhayashi1120/Emacs-wgrep: Writable grep buffer and apply the changes to files]]
 wgrep allows you to edit a grep buffer and apply those changes to the file buffer.
** [2017-02-10 Fri 16:26] [[https://github.com/Silex/docker.el][Silex/docker.el: Manage docker from Emacs.]]
 The recommended way to install docker.el is through MELPA.

 Otherwise, simply add the files to your load-path and then (require 'docker).
** [2017-02-10 Fri 16:49] [[https://github.com/vermiculus/magithub][vermiculus/magithub: Magit interfaces for GitHub]]
 Magithub is a collection of interfaces to GitHub.

 Integrated into Magit workflows, Magithub allows very easy, very basic GitHub repository management. Supported actions from the status buffer include:

     H H opens the current repo in the browser
     H c pushes brand-new local repositories up to GitHub
     H f creates forks of existing repositories
     H p submits pull requests upstream
     H i creates issues
     RET on an issue open that issue in GitHub
     RET on the CI header takes you to your CI dashboard
** [2017-02-10 Fri 16:55] [[https://github.com/github/hub][github/hub: hub helps you win at git.]]
 hub is a command line tool that wraps git in order to extend it with extra features and commands that make working with GitHub easier.
** [2017-02-10 Fri 18:24] [[https://wallabag.org/en][Save the web, freely | wallabag: a self hostable application for saving web pages]]
 #+BEGIN_QUOTE
 Save and classify articles. Read them later. Freely.


 #+END_QUOTE
** [2017-02-10 Fri 18:24] [[https://github.com/wallabag/wallabag][wallabag/wallabag: wallabag is a self hostable application for saving web pages.]]
 #+BEGIN_QUOTE
 wallabag is a self hostable application allowing you to not miss any content anymore. Click, save and read it when you can. It extracts content so that you can read it when you have time.


 #+END_QUOTE
** [2017-02-10 Fri 18:26] [[https://github.com/FreshRSS/FreshRSS][FreshRSS/FreshRSS: A free, self-hostable aggregator…]]
 #+BEGIN_QUOTE
 FreshRSS is a self-hosted RSS feed aggregator such as Leed or Kriss Feed.

 It is at the same time lightweight, easy to work with, powerful and customizable.

 It is a multi-user application with an anonymous reading mode. It supports PubSubHubbub for instant notifications from compatible Web sites. There is an API for (mobile) clients, and a Command-Line Interface. Finally, it supports extensions for further tuning.

 Official website: http://freshrss.org
 Demo: http://demo.freshrss.org/
 License: GNU AGPL 3

 #+END_QUOTE
** [2017-02-10 Fri 18:26] [[https://tt-rss.org/gitlab/fox/tt-rss/wikis/home][home | Wiki | Andrew Dolgov / tt-rss | GitLab]]
 #+BEGIN_QUOTE
 Tiny Tiny RSS is an open source web-based news feed (RSS/Atom) reader and aggregator, designed to allow you to read news from any location, while feeling as close to a real desktop application as possible.


 #+END_QUOTE
** [2017-02-10 Fri 18:26] [[https://github.com/ldleman/Leed][ldleman/Leed: Leed (contraction de Light Feed) est un agrégatteur RSS libre et minimaliste qui permet la consultation de flux RSS de manière rapide et non intrusive.]]
 #+BEGIN_QUOTE
 Leed (contraction de Light Feed) est un agrégateur RSS/ATOM minimaliste qui permet la consultation de flux RSS de manière rapide et non intrusive.

 Cet agrégateur peut s'installer sur votre propre serveur et fonctionne avec un système de tâches cron afin de traiter les informations de manière transparente et de les afficher le plus rapidement possible lorsque vous vous y connectez.


 #+END_QUOTE
** [2017-02-10 Fri 18:26] [[https://jangernert.github.io/FeedReader/][FeedReader - RSS desktop client]]
 #+BEGIN_QUOTE
 FeedReader is a modern desktop application designed to complement existing web-based RSS accounts.
 It combines all the advantages of web based services like synchronisation across all your devices with everything you expect from a modern desktop application.

 #+END_QUOTE
** [2017-02-10 Fri 22:39] [[https://github.com/magit/orgit][magit/orgit: Support for Org links to Magit buffers]]
 This package defines several Org link types, which can be used to link to certain Magit buffers. Use the command org-store-link while such a buffer is current to store a link. Later you can insert it into an Org buffer using the command org-insert-link.
** [2017-02-10 Fri 22:47] [[https://github.com/cpick/hub][cpick/hub: hub helps you win at git.]]
 hub is a command line tool that wraps git in order to extend it with extra features and commands that make working with GitHub easier.
** [2017-02-10 Fri 22:47] [[https://github.com/github/hub/issues/718][Debian/Ubuntu packages · Issue #718 · github/hub]]
 I built a "proper" dpkg for Ubuntu and created a ppa.

 You should be able to install it with the following:

 sudo add-apt-repository ppa:cpick/hub
 sudo apt-get update
 sudo apt-get install hub

 If there's any interest, I'd be willing to try to get these changes into the various upstreams.
 In the meantime, please report issues and/or send pull requests to https://github.com/cpick/hub (changes are on the 'debian' branch).
** [2017-02-10 Fri 23:46] [[https://github.com/pump-io/pump.io][pump-io/pump.io: Social server with an ActivityStreams API]]
 This is pump.io. It's a stream server that does most of what people really want from a social network.
** [2017-02-10 Fri 23:47] [[https://github.com/mikutter/mikutter][mikutter/mikutter: なにかあった時のためのバックアップです。リリース毎にミラーしてます]]
 mikutter - simple, powerful and moeful twitter client
** [2017-02-10 Fri 23:52] [[https://github.com/hbons/SparkleShare][hbons/SparkleShare: Share and collaborate by syncing with any Git repository instantly. Linux, macOS, and Windows.]]
 #+BEGIN_QUOTE
 SparkleShare is an Open Source collaboration and sharing tool that is designed to keep things simple and to stay out of your way. It's available for Linux distributions, macOS, and Windows.


 #+END_QUOTE
** [2017-02-11 Sat 01:17] [[https://otvet.mail.ru/question/76859796][Ответы Mail.Ru: "Назови хоть горшком, только в печь не ставь" - это еврейская или русская поговорка?]]
 #+BEGIN_QUOTE
 "Назови хоть горшком, только в печь не ставь" - это еврейская или русская поговорка?

 #+END_QUOTE
** [2017-02-11 Sat 01:17] [[https://otvet.mail.ru/question/15019665][Ответы Mail.Ru: Что означает выражение "палец в рот не клади".]]
 #+BEGIN_QUOTE
 Что означает выражение "палец в рот не клади".
 Otseola Просветленный (25430), Вопрос решён 8 лет назад
  2 Нравится Подписаться Ответить
 ЛУЧШИЙ ОТВЕТ
 DiZzy 8 лет назад
 Мастер (1323)
 Бойкий человек, всегда найдет, что сказать или ответить. 

 #+END_QUOTE
** [2017-02-11 Sat 01:23] [[https://ru.wikipedia.org/wiki/%25D0%2591%25D0%25BB%25D0%25B0%25D0%25B3%25D0%25B8%25D0%25BC%25D0%25B8_%25D0%25BD%25D0%25B0%25D0%25BC%25D0%25B5%25D1%2580%25D0%25B5%25D0%25BD%25D0%25B8%25D1%258F%25D0%25BC%25D0%25B8_%25D0%25B2%25D1%258B%25D0%25BC%25D0%25BE%25D1%2589%25D0%25B5%25D0%25BD%25D0%25B0_%25D0%25B4%25D0%25BE%25D1%2580%25D0%25BE%25D0%25B3%25D0%25B0_%25D0%25B2_%25D0%25B0%25D0%25B4][Благими намерениями вымощена дорога в ад — Википедия]]
 #+BEGIN_QUOTE
 Благими намерениями вымощена дорога в ад — крылатое выражение в ряде языков, в частности русском и английском. Альтернативной формой служит выражение Преисподняя полна добрыми намерениями, а небеса полны добрыми делами.


 #+END_QUOTE
** [2017-02-11 Sat 01:52] [[https://git-annex.branchable.com/][git-annex]]
 git-annex allows managing files with git, without checking the file contents into git. While that may seem paradoxical, it is useful when dealing with files larger than git can currently easily handle, whether due to limitations in memory, time, or disk space.

 git-annex is designed for git users who love the command line. For everyone else, the git-annex assistant turns git-annex into an easy to use folder synchroniser.

 To get a feel for git-annex, see the walkthrough.
** [2017-02-11 Sat 02:10] [[https://github.com/bil-elmoussaoui/nautilus-git/][bil-elmoussaoui/nautilus-git: Nautilus extension to add important information about the current git directory]]
 #+BEGIN_QUOTE
 Nautilus extension to add important information about the current git directory

 #+END_QUOTE
** [2017-02-11 Sat 02:25] [[http://arma.sourceforge.net/][Armadillo: C++ linear algebra library]]
  Armadillo is a high quality linear algebra library (matrix maths) for the C++ language, aiming towards a good balance between speed and ease of use
 
 Provides high-level syntax (API) deliberately similar to Matlab
 
 Useful for algorithm development directly in C++, or quick conversion of research code into production environments (eg. software & hardware products)
 
 Can be used for machine learning, pattern recognition, computer vision, signal processing, bioinformatics, statistics, finance, etc
 
 Provides efficient classes for vectors, matrices and cubes, as well as 200+ associated functions; integer, floating point and complex numbers are supported
 
 Various matrix decompositions are provided through integration with LAPACK, or one of its high performance drop-in replacements (eg. multi-threaded Intel MKL, or OpenBLAS)
 
 A sophisticated expression evaluator (based on template meta-programming) automatically combines several operations to increase speed and efficiency
** [2017-02-11 Sat 02:27] [[https://github.com/bbatsov/solarized-emacs][bbatsov/solarized-emacs: The Solarized colour theme, ported to Emacs.]]
 Solarized for Emacs is an Emacs port of the Solarized theme for vim, developed by Ethan Schoonover.

 Solarized for Emacs is tested only under Emacs 24, but should be working under Emacs 23 as well. The theme is implemented in terms of customizations and deftheme and does not require the color-theme-package.
** [2017-02-11 Sat 02:29] [[https://blogs.igalia.com/berto/2017/02/08/qemu-and-the-qcow2-metadata-checks/][QEMU and the qcow2 metadata checks | The world won't listen]]
 When choosing a disk image format for your virtual machine one of the factors to take into considerations is its I/O performance. In this post I’ll talk a bit about the internals of qcow2 and about one of the aspects that can affect its performance under QEMU: its consistency checks.
** [2017-02-11 Sat 03:41] [[https://cestlaz.github.io/][C'est la Z]]
  Musings about education, computer science,
** [2017-02-11 Sat 04:33] [[https://github.com/atgreen/paperless][atgreen/paperless: Emacs assisted PDF document filing]]
 You've just scanned a stack of papers that have been cluttering up your desk. Now what? Paperless mode is an Emacs major mode designed to assist with the filing of scanned documents into a hierarchy of folders.
** [2017-02-11 Sat 04:34] [[https://github.com/melpa/melpa/issues/4554][Would "virtual" packages be acceptable, to ease automatic update of built-in packages? · Issue #4554 · melpa/melpa]]
 This Reddit conversation shows how hard it may be to automatically grab the latest version of built-in packages, like org. In most cases, (use-package) or other managers won't install the package if it's already available. Users have to resort to strange workarounds to get this done (or, like myself, have it working and have no idea how)

 Melpa could provide a solution for this problem if it carried a virtual package, like org-virtual, without any contents but with a dependency on the latest version of org. I can create and maintain such a package and contribute it to Melpa.

 Would you accept to provide such a package in your repository?
** [2017-02-11 Sat 04:38] [[https://vxlabs.com/2017/02/07/mu4e-0-9-18-e-mailing-with-emacs-now-even-better/][mu4e 0.9.18: E-Mailing with Emacs now even better. – vxlabs]]
  In this post I talk about three great new features in the latest release of mu4e, an email programme that runs in Emacs. I also show my mu4e configuration as an example to others who would like a similar setup.
** [2017-02-11 Sat 04:38] [[https://www.reddit.com/r/emacs/comments/5swirb/when_migrating_to_a_new_file_system_which_files_i/][When migrating to a new file system, which files I need to backup so I could have all my customization if emacs : emacs]]
 Assuming prelude works similarly to vanilla emacs:

     Personally installed packages (e.g. by M-x package-install) are stored under package-user-dir , this is ~/.emacs.d/elpa by default.

     Packages installed by the (operating system) package manager (yum, apt, pacman, portage etc.) are installed under package-directory-list, which is usually a list of directories under /usr/share/emacs/.

 Copying over your .emacs.d will be enough 99% of the time. If you want to be sure just take another linux installation (say in a virtual machine), copy over your config and see if everything works.
** [2017-02-11 Sat 04:41] [[https://www.reddit.com/r/emacs/comments/5s306p/keyboard_recommendation/][Keyboard recommendation? : emacs]]
 I love my POK3R 60% keyboard... A bit pricy but definitely worth it.

 https://www.amazon.com/gp/aw/d/B00OFM51L2?psc=1
** [2017-02-11 Sat 04:46] [[http://batsov.com/prelude/][Prelude by bbatsov]]
 Prelude is an Emacs distribution that aims to enhance the default Emacs experience. Prelude alters a lot of the default settings, bundles a plethora of additional packages and adds its own core library to the mix. The final product offers an easy to use Emacs configuration for Emacs newcomers and lots of additional power for Emacs power users.
** [2017-02-11 Sat 04:53] [[https://github.com/jkitchin/scimax][jkitchin/scimax: An emacs starterkit for scientists and engineers]]
 Scimax is a rewrite of jmax, with lessons learned, and improvements.
** [2017-02-11 Sat 04:53] [[https://github.com/vikasrawal/orgpaper/blob/master/orgpapers.org][orgpaper/orgpapers.org at master · vikasrawal/orgpaper]]
 This guide introduces an open-source toolkit for writing research papers and monographs. The main features of this toolkit centered around Emacs and Org-mode are:
** [2017-02-11 Sat 04:54] [[https://www.youtube.com/watch?v=CGnt_PWoM5Y][Org-mode for Reproducible Research - YouTube]]
  The amazing Emacs org-mode has myriad uses and features including outlining, note-taking, table management, and publishing to HTML and LaTeX. It’s also a fabulous tool to help make your research reproducible. From Wikipedia (http://en.wikipedia.org/wiki/Reproduc...
 In 2012, a survey done for Nature found that 47 out of 53 medical research papers on the subject of cancer were irreproducible (http://www.nature.com/nature/journal/...)… Researchers explained in a 2006 study that, of 249 data sets from American Psychology Association (APA) empirical articles, 73% of contacted authors did not respond with their data (http://www.ncbi.nlm.nih.gov/pubmed/17...) over a 6-month period.
** [2017-02-11 Sat 04:55] [[https://hn.algolia.com/?query=emacs&sort=byDate&prefix&page=0&dateRange=all&type=story][HN Search powered by Algolia]]
  Show HN: Paperless – Emacs assisted PDF document filing
** [2017-02-11 Sat 13:16] [[https://spb.hh.ru/vacancy/19410351?utm_campaign=new_vacancies&vss=15792986&grpos=2&stl=19&utm_content=2017_02_10&utm_source=email&ptl=1&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Системный администратор в Санкт-Петербурге, работа в ВИИРОУТЕ]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 60 000 до 100 000 руб.
        
 Санкт-Петербург, Василеостровская
        
 3–6 лет
** [2017-02-11 Sat 13:17] [[https://spb.hh.ru/vacancy/19507785?utm_campaign=new_vacancies&vss=15792986&grpos=5&stl=19&utm_content=2017_02_10&utm_source=email&ptl=1&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия IT-рекрутер (менеджер по подбору IT-специалистов) в Санкт-Петербурге, работа в СиДжиКонсалтинг]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 50 000 до 120 000 руб.
        
 Санкт-Петербург, Чернышевская
        
 3–6 лет
** CHECK [2017-02-11 Sat 13:18] [[https://spb.hh.ru/vacancy/19539990?utm_campaign=new_vacancies&vss=15792986&grpos=10&stl=19&utm_content=2017_02_10&utm_source=email&ptl=1&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Младший DevOps инженер (Linux) в Санкт-Петербурге, работа в Концерн радиостроения Вега, АО, Филиал в г. Санкт-Петербург]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 50 000 руб.
        
 Санкт-Петербург
        
 1–3 года
** [2017-02-11 Sat 13:22] [[https://spb.hh.ru/vacancy/14877305?utm_campaign=new_vacancies&vss=15808352&grpos=5&stl=19&utm_content=2017_02_10&utm_source=email&ptl=1&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Инженер по ремонту ПК, компьютеров, ноутбуков в Санкт-Петербурге, работа в Группа компаний KIT]]
 от 30 000 руб.
        
 Санкт-Петербург, Сенная площадь, Садовая, Спасская
        
 1–3 года
** [2017-02-11 Sat 13:23] [[https://spb.hh.ru/vacancy/19539990?utm_campaign=new_vacancies&vss=15808352&grpos=14&stl=19&utm_content=2017_02_10&utm_source=email&ptl=1&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Младший DevOps инженер (Linux) в Санкт-Петербурге, работа в Концерн радиостроения Вега, АО, Филиал в г. Санкт-Петербург]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 50 000 руб.
        
 Санкт-Петербург
        
 1–3 года
** [2017-02-11 Sat 13:23] [[https://spb.hh.ru/vacancy/19436010?utm_campaign=new_vacancies&vss=15808352&grpos=16&stl=19&utm_content=2017_02_10&utm_source=email&ptl=1&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Инженер-тестировщик в Санкт-Петербурге, работа в НИИ МАСШТАБ]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 25 000 до 35 000 руб.
        
 Санкт-Петербург
        
 1–3 года
** [2017-02-11 Sat 13:25] [[https://spb.hh.ru/vacancy/19631907?utm_campaign=new_vacancies&vss=15792986&grpos=13&stl=20&utm_content=2017_02_09&utm_source=email&ptl=0&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Инженер по автоматизации / DevOps в Санкт-Петербурге, работа в БИОКАД, биофармацевтическая компания]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 з/п не указана
        
 Санкт-Петербург
        
 не требуется
** [2017-02-11 Sat 13:26] [[https://spb.hh.ru/vacancy/19631733?utm_campaign=new_vacancies&vss=15792986&grpos=14&stl=20&utm_content=2017_02_09&utm_source=email&ptl=0&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Программист в Санкт-Петербурге, работа в Технологии Страхования]]
 от 50 000 до 70 000 руб.
        
 Санкт-Петербург, Василеостровская
        
 не требуется
** [2017-02-11 Sat 13:27] [[https://spb.hh.ru/vacancy/19546308?utm_campaign=new_vacancies&vss=15808352&grpos=4&stl=18&utm_content=2017_02_09&utm_source=email&ptl=2&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия IT-инженер в Санкт-Петербурге, работа в Антарес]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 25 000 до 45 000 руб.
        
 Санкт-Петербург
        
 1–3 года
** [2017-02-11 Sat 13:29] [[https://spb.hh.ru/vacancy/19620563?utm_campaign=new_vacancies&vss=15792986&grpos=18&stl=20&utm_content=2017_02_08&utm_source=email&ptl=0&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия System Administrator в Санкт-Петербурге, работа в DINO Systems]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 з/п не указана
        
 Санкт-Петербург
        
 1–3 года
** [2017-02-11 Sat 13:30] [[https://spb.hh.ru/vacancy/19618956?utm_campaign=new_vacancies&vss=15792986&grpos=20&stl=20&utm_content=2017_02_08&utm_source=email&ptl=0&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Инженер технической поддержки в Санкт-Петербурге, работа в i-FREE]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 35 000 до 55 000 руб.
        
 Санкт-Петербург, Чкаловская, Петроградская
        
 1–3 года
** [2017-02-11 Sat 13:31] [[https://spb.hh.ru/vacancy/19622867?utm_campaign=new_vacancies&vss=15808352&grpos=1&stl=18&utm_content=2017_02_08&utm_source=email&ptl=2&utm_medium=email&t=p&exp=f&swnt=p&plim=4][Вакансия Инженер технической поддержки в Санкт-Петербурге, работа в Технологии продаж]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 40 000 до 60 000 руб.
        
 Санкт-Петербург, Петроградская
        
 1–3 года
** [2017-02-11 Sat 13:33] [[https://spb.hh.ru/vacancy/19479616?utm_campaign=new_vacancies&vss=15808352&grpos=17&stl=18&utm_content=2017_02_08&utm_source=email&ptl=2&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Системный администратор в Санкт-Петербурге, работа в Проект]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 30 000 руб.
        
 Санкт-Петербург, Московские ворота
        
 1–3 года
** [2017-02-11 Sat 13:34] [[https://spb.hh.ru/vacancy/19505547?utm_campaign=new_vacancies&vss=15792986&grpos=8&stl=19&utm_content=2017_02_07&utm_source=email&ptl=1&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Full Stack разработчик (Python) в Санкт-Петербурге, работа в GOCREAM]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 65 000 до 90 000 руб.
        
 Санкт-Петербург, Василеостровская
        
 1–3 года
** [2017-02-11 Sat 13:36] [[https://spb.hh.ru/vacancy/19409351?utm_campaign=new_vacancies&vss=15808352&grpos=12&stl=20&utm_content=2017_02_07&utm_source=email&ptl=0&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Менеджер по продажам/менеджер по развитию в Санкт-Петербурге, работа в Системы и сети]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 35 000 до 85 000 руб.
        
 Санкт-Петербург, Сенная площадь, Садовая, Спасская, Адмиралтейская
        
 не требуется
** [2017-02-11 Sat 13:37] [[https://spb.hh.ru/vacancy/19607289?utm_campaign=vacancies_selected&utm_medium=email&utm_source=email&utm_content=2017_02_07][Вакансия Системный администратор в Санкт-Петербурге, работа в Баргус Трейд]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 45 000 до 60 000 руб.
        
 Санкт-Петербург, Площадь Ленина, Выборгская
        
 1–3 года
** [2017-02-11 Sat 13:39] [[https://spb.hh.ru/vacancy/19322231?utm_campaign=new_vacancies&vss=15792986&grpos=20&stl=20&utm_content=2017_02_06&utm_source=email&ptl=0&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Системный программист (Linux) в Санкт-Петербурге, работа в Мир Калкулэйт (вакансия в архиве)]]
 Компания "Калкулэйт", разработчик одноимённого дистрибутива Calculate Linux, в связи с расширением IT-отдела приглашает на работу Системного программиста (Linux)
** [2017-02-11 Sat 13:39] [[https://spb.hh.ru/vacancy/19546310?utm_campaign=new_vacancies&vss=15808352&grpos=10&stl=20&utm_content=2017_02_06&utm_source=email&ptl=0&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Системный администратор Linux в Санкт-Петербурге, работа в АртВизио]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 60 000 руб.
        
 Санкт-Петербург
        
 1–3 года
** [2017-02-11 Sat 13:40] [[https://spb.hh.ru/vacancy/19377395?utm_campaign=new_vacancies&vss=15808352&grpos=20&stl=20&utm_content=2017_02_06&utm_source=email&ptl=0&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Системный администратор в Санкт-Петербурге, работа в Mad Wave]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 от 50 000 до 55 000 руб.
        
 Санкт-Петербург, Ладожская
        
 1–3 года
** [2017-02-11 Sat 13:50] [[https://spb.hh.ru/vacancy/19563251?utm_campaign=new_vacancies&vss=15792986&grpos=16&stl=18&utm_content=2017_02_01&utm_source=email&ptl=2&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия ИТ-инженер в Санкт-Петербурге, работа в СТГ-Эко]]
 Уровень зарплаты
        
 Город
        
 Требуемый опыт работы
 до 45 000 руб.
        
 Санкт-Петербург, Московские ворота
        
 3–6 лет
** TODO [2017-02-11 Sat 13:51] [[https://spb.hh.ru/vacancy/19566374?utm_campaign=new_vacancies&vss=15808352&grpos=12&stl=18&utm_content=2017_02_01&utm_source=email&ptl=2&utm_medium=email&t=s&exp=f&swnt=s&plim=4][Вакансия Дежурный инженер технической поддержки в Санкт-Петербурге, работа в RU-CENTER Group]]
Группа компаний RU-Center Group, сообщество сильнейших хостинговых
компаний (SpaceWeb, PeterHost, Хостинг-Центр, R01, RU-Center, Reggi)
приглашает в свой дружный коллектив Инженера технической поддержки
(сменный график)

*** Требования
- Уверенные знания принципов работы Internet;
- Работа с браузерами, почтовыми клиентами, клиентами FTP и SSH,
  навыки их настройки;
- Знания ОС семейств Linux на уровне пользователя;
- Понимание принципов работы DNS;
- Базовые знания протоколов HTTP, FTP, SSH, POP3, IMAP, SMTP;
- Базовые знания HTML, PHP, MySQL;
- Коммуникабельность, обучаемость, стрессоустойчивость,
  доброжелательность, ответственность.
** [2017-02-11 Sat 15:59] [[https://wiki.gnome.org/Apps/PdfMod][Apps/PdfMod - GNOME Wiki!]]
 #+BEGIN_QUOTE
 PDF Mod is a simple application for modifying PDF documents.

 You can reorder, rotate, and remove pages, export images from a document, edit the title, subject, author, and keywords, and combine documents via drag and drop.


 #+END_QUOTE
** [2017-02-11 Sat 17:04] [[https://github.com/syohex/emacs-anzu][syohex/emacs-anzu: Emacs Port of anzu.vim]]
 anzu.el is an Emacs port of anzu.vim. anzu.el provides a minor mode which displays current match and total matches information in the mode-line in various search modes.
** [2017-02-11 Sat 17:05] [[https://github.com/emacsfodder/move-text][emacsfodder/move-text: move current line or region up or down]]
 MoveText is extracted from Basic edit toolkit. It allows you to move the current line using M-up / M-down (or any other bindings you choose) if a region is marked, it will move the region instead.
** [2017-02-11 Sat 17:34] [[https://github.com/bmag/imenu-list][bmag/imenu-list: Emacs plugin to show the current buffer's imenu entries in a seperate buffer]]
 Emacs plugin to show the current buffer's imenu entries in a seperate buffer

 To activate imenu-list manually, use M-x imenu-list-minor-mode.
 To activate it automatically on startup, add this to your init file: (imenu-list-minor-mode)

 You can also use M-x imenu-list-minor-mode to toggle imenu-list (and its window) on and off. You may wish to bind it to a key, for example C-':
** [2017-02-11 Sat 17:51] [[https://github.com/trending/emacs-lisp?since=daily][Trending Emacs Lisp repositories on GitHub today]]
 See what the GitHub community is most excited about today.
** [2017-02-11 Sat 17:51] [[https://github.com/emacs-tw/awesome-emacs][emacs-tw/awesome-emacs: A community driven list of useful Emacs packages, libraries and others.]]
 A community driven list of useful Emacs packages, libraries and others.
** [2017-02-11 Sat 18:45] [[https://github.com/leathekd/erc-hl-nicks][leathekd/erc-hl-nicks: Nickname Highlighting for ERC]]
 If you’re happy with what you’re using, you shouldn’t. (If it ain’t broke…) BUT, if you are interested in trying something new, here are some things you should know:

     erc-hl-nicks is based on erc-highlight-nicknames, so it will auto colorize nicknames (you don’t have to specify colors)
     erc-hl-nicks will ignore certain characters that IRC clients add to nicknames to avoid duplicates (nickname, nickname’, nickname”, etc.)
     erc-hl-nicks can attempt to produce colors with a sufficient amount of contrast between the nick color and the background color.
** [2017-02-11 Sat 19:55] [[http://semver.org/][Semantic Versioning 2.0.0 - Semantic Versioning]]
 #+BEGIN_QUOTE
 Given a version number MAJOR.MINOR.PATCH, increment the:

 MAJOR version when you make incompatible API changes,
 MINOR version when you add functionality in a backwards-compatible manner, and
 PATCH version when you make backwards-compatible bug fixes.
 Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.


 #+END_QUOTE
** [2017-02-11 Sat 19:57] [[https://fosdem.org/2017/schedule/][FOSDEM 2017 - Schedule]]
 #+BEGIN_QUOTE
 Every year, FOSDEM hosts a wide variety of activities. This page gives an overview with links to further information about scheduled events.

 FOSDEM is a very busy conference. This edition features 610 speakers, 669 events, and 55 tracks. We do our best to provide you with as much information and navigation options about the schedule as we can.


 #+END_QUOTE
** [2017-02-11 Sat 21:52] [[https://github.com/xuchunyang/gitter.el][xuchunyang/gitter.el: An Emacs Gitter client]]
 gitter.el is available from Melpa. After setting up Melpa as a repository and update the local package list, you can install gitter.el and its dependencies using M-x package-install gitter.
** [2017-02-11 Sat 22:24] [[https://github.com/aharris88/awesome-static-website-services][aharris88/awesome-static-website-services: A curated list of awesome static websites services]]
 Inspired by the awesome list thing.
** [2017-02-11 Sat 22:29] [[http://designrope.com/toolbox/static-web-hosting/][Static Web Hosting: Who's Best? - DesignRope]]
 The benefits of static hosting are pretty clear: speed, security, ease-of-use and cost. But what service should you use?

 There are a number of options, we’ve highlighted 15 of the best across a range of use cases:
** [2017-02-11 Sat 22:29] [[https://github.com/aharris88/awesome-cli-apps][aharris88/awesome-cli-apps: A curated list of command line apps]]
 Inspired by the awesome list thing.
** [2017-02-11 Sat 22:31] [[https://github.com/wp-cli/wp-cli][wp-cli/wp-cli: The command line interface for WordPress]]
 WP-CLI is a set of command-line tools for managing WordPress installations. You can update plugins, configure multisite installs and much more, without using a web browser.
** [2017-02-11 Sat 22:31] [[https://github.com/cytopia/ffscreencast][cytopia/ffscreencast: {bash} ffmpeg screencast with video overlay and multi monitor support]]
 ffscreencast is a shell wrapper for ffmpeg that allows fool-proof screen recording via the command line. It will auto-detect all available monitors, cameras and microphones and is able to interactively or manually choose the desired recording device(s). Additionally ffscreencast will let you overlay the camera stream on top of the desktop session.
** [2017-02-11 Sat 22:38] [[https://github.com/egeerardyn/awesome-LaTeX][egeerardyn/awesome-LaTeX: Curated list of LaTeX awesomeness]]
 This is a curated list of awesome stuff for the (La)TeX typesetting system. Awesome Issue Count License: CC BY-SA 4.0
** [2017-02-11 Sat 22:43] [[https://github.com/n1trux/awesome-sysadmin][n1trux/awesome-sysadmin: A curated list of amazingly awesome open source sysadmin resources.]]
 A curated list of amazingly awesome open source sysadmin resources. Please read CONTRIBUTING if you wish to add software and consider donating to the FLOSS projects you use regularly.
** [2017-02-11 Sat 22:48] [[https://github.com/CloudBotIRC/CloudBot][CloudBotIRC/CloudBot: CloudBot - The simple, fast, expandable, open-source Python IRC Bot!]]
 There are currently two different branches of this repository, each with a different level of stability:

     master (stable): This branch contains stable, tested code. This is the branch you should be using if you just want to run your own CloudBot! Build Status
     python3.4 (unstable): This branch is where we test and develop new features. If you would like to help develop CloudBot, you can use this branch. Build Status

 New releases will be pushed from python3.4 to master whenever we have a stable version to release. This should happen on a fairly regular basis, so you'll never be too far behind the latest improvements.
** [2017-02-11 Sat 22:50] [[https://github.com/lukasz-madon/awesome-remote-job][lukasz-madon/awesome-remote-job: A curated list of awesome remote jobs and resources. Inspired by https://github.com/vinta/awesome-python]]
 To contribute, click README.md and then the pencil icon. Make your changes and click the "Propose file change" button to submit a pull request. Make sure to follow the contributions guidelines.
** [2017-02-11 Sat 22:51] [[https://github.com/matiassingers/awesome-readme][matiassingers/awesome-readme: A curated list of awesome READMEs]]
 Elements in beautiful READMEs include, but not limited to: images, screenshots, GIFs, text formatting, etc.
** [2017-02-11 Sat 23:05] [[https://www.youtube.com/watch?v=fm15cmYU0IM][How to Bullet Journal - YouTube]]
 #+BEGIN_QUOTE
 For more, check out http://bulletjournal.com

 Book used in video: http://store.bulletjournal.com
 Sign up for the newsletter: http://goo.gl/n8FzpO
 Facebook: https://www.facebook.com/bulletjournal
 Twitter: https://www.twitter.com/rydercarroll

 #+END_QUOTE
** [2017-02-11 Sat 23:09] [[https://github.com/ahkscript/awesome-AutoHotkey][ahkscript/awesome-AutoHotkey: A curated list of awesome AutoHotkey libraries, library distributions, scripts, tools and resources.]]
 List of useful AutoHotkey libraries. Library is code that has some reusable functionality that can be combined with your own code in order to create new functionality.
** [2017-02-11 Sat 23:11] [[https://github.com/antontarasenko/awesome-economics][antontarasenko/awesome-economics: A curated collection of links for economists]]
 A curated collection of links for economists. Part of the "Awesome X" series.

 The list is periodically updated with new links. Click "Watch" in the right top corner to follow.

 Your contributions are welcomed. Add links by yourself or send them to antontarasenko@gmail.com.
** [2017-02-11 Sat 23:26] [[https://github.com/orgzly/orgzly-android][orgzly/orgzly-android: Orgzly for Android]]
  Orgzly for Android
** [2017-02-12 Sun 00:46] [[https://www.masteringemacs.org/article/complete-guide-mastering-eshell][Mastering Eshell - Mastering Emacs]]
 Eshell has a handful of commands written in Emacs-Lisp that closely emulate a large subset of what the real GNU Coreutils (or your favorite shell) has. Those commands are called “Alias functions.”
** [2017-02-12 Sun 02:22] [[https://github.com/rodakorn/randwall][rodakorn/randwall: Gnome shell extension "Random Walls" for gnome 3]]
 Gnome shell extension "Random Walls" for automatically change your desktop and lockscreen background randomly.

 Based on Lukas Knuth's Backslide code at https://bitbucket.org/LukasKnuth/backslide
** [2017-02-12 Sun 02:22] [[https://github.com/Khudsa/sincrodirs][Khudsa/sincrodirs: Gnome Shell extension for folders synchronization.]]
 GNOME Shell extension for folders synchronization.

 Uses rsync as a backend.

 Thanks to randwall extension, help me a lot to understand how to make an extension.
** [2017-02-12 Sun 02:24] [[https://github.com/jrouleau/gnome-shell-extension-gravatar][jrouleau/gnome-shell-extension-gravatar: A GNOME Shell extension to synchronize your user icon with Gravatar.]]
 A GNOME Shell extension to synchronize your user icon with Gravatar.
** [2017-02-12 Sun 06:17] [[https://github.com/orgzly/orgzly-android][orgzly/orgzly-android: Orgzly for Android]]
  Orgzly for Android
** [2017-02-12 Sun 06:17] [[https://github.com/rexim/org-cliplink][rexim/org-cliplink: Insert org-mode links from clipboard]]
 A simple command that takes a URL from the clipboard and inserts an org-mode link with a title of a page found by the URL into the current buffer.

 This code was a part of my Emacs config almost a year. I decided to publish it as a separate package in case someone needs this feature too.
** [2017-02-12 Sun 06:21] [[https://github.com/dguilak/org-mode-sms-inbox][dguilak/org-mode-sms-inbox: Harvest org-mode todos with Dropbox, Twilio, and IFTTT.]]
 Easily capture ideas or TODOs into org-mode through an app almost everyone has installed: SMS!
** [2017-02-12 Sun 06:22] [[https://en.wikipedia.org/wiki/IFTTT][IFTTT - Wikipedia]]
 IFTTT is a free web-based service that allows users to create chains of simple conditional statements, called "applets", which are triggered based on changes to other web services such as Gmail, Facebook, Instagram, and Pinterest.[4] IFTTT is an abbreviation of "If This Then That".[5]
** [2017-02-12 Sun 06:58] [[https://github.com/sri/activity-log][sri/activity-log: An activity log for Emacs's org-mode]]


 Currently tested under GNU Emacs 25.1.1 on OS X.

 I use this to keep track of what I've done, issues that I have solved, and everything else while at work. Originally, this was a part of my ~/.emacs but it seemed ripe for extraction into its own library.
** [2017-02-12 Sun 06:58] [[https://github.com/volhovM/orgstat][volhovM/orgstat: Statistics visualizer for org-mode]]
 Orgstat is statistics visualizer for org-mode. Given a set of org-mode files, it parses them, generates tree, applies modifications and generates reports using specified params. Currently only timeline report type is supported, but it's pretty easy to add txt-generating report type, contributions are welcomed.

 For more details, check orgstatExample.yaml configuration file and orgstat --help:
** [2017-02-12 Sun 07:12] [[https://github.com/joowani/dtags][joowani/dtags: Directory Tags for Lazy Programmers]]
 dtags is a lightweight command line tool which lets you:

     Tag and un-tag directories
     Run commands in multiple directories in parallel
     Change directories quickly via tag names
     Use shell variables to reference directories
     Easily manage git repositories, vagrant machines etc.
** [2017-02-12 Sun 07:14] [[https://github.com/Jonovono/dotfiles/blob/cc54740616c7908298bdb1460e2e63e2e8ee7792/.emacs.d/layers/%252Bchat/erc/packages.el][dotfiles/packages.el at cc54740616c7908298bdb1460e2e63e2e8ee7792 · Jonovono/dotfiles]]
 v3

 (setq erc-packages
       '(
         company
         company-emoji
         emoji-cheat-sheet-plus
         erc
         (erc-gitter :location (recipe
				:fetcher github
				:repo "jleechpe/erc-gitter")
                     :excluded t)
         erc-hl-nicks
         erc-image
         (erc-sasl :location local)
         erc-social-graph
         (erc-tex :location local)
         erc-view-log
         (erc-yank :location local :excluded t)
         erc-yt
         linum
         persp-mode
         ))
** [2017-02-12 Sun 07:15] [[https://github.com/search?utf8=%25E2%259C%2593&q=use-package+erc-hl-nicks&type=Code&ref=searchresults][Search · use-package erc-hl-nicks]]

 ;; Bootstrap `use-package'
 (unless (package-installed-p 'use-package)
   (package-refresh-contents)
   (package-install 'use-package))

 (when (boundp 'package-pinned-packages)
 (setq package-pinned-packages
** [2017-02-13 Mon 22:02] [[https://en.wikipedia.org/wiki/List_of_open-source_video_games][List of open-source video games - Wikipedia]]
 This is a selected list of free/libre and open-source video games. Open-source video games are games assembled from and are themselves open-source software, including public domain games with published source code. This list includes games in which the game engine is open-source but the game content (media and levels, for example) may be under a different license.
** [2017-02-13 Mon 22:06] [[https://github.com/NetHack/NetHack][NetHack/NetHack: Official NetHack Git Repository]]
 NetHack 3.6 is an enhancement to the dungeon exploration game NetHack.
 It is a distant descendent of Rogue and Hack, and a direct descendent of
 NetHack 3.4. In order to avoid confusion with interim development code 
 that was posted online in 2014 by others, there is no NetHack 3.5 release.

 NetHack 3.6.1 contains several dozen bugfixes.

 The file doc/fixes36.1 in the source distribution has a full list of each. 
 The text in there was written for the development team's own use and is 
 provided "as is", so please do not ask us to further explain the entries 
 in that file. Some entries might be considered "spoilers", particularly
 in the "new features" section.

 Here are some additional general notes that are not considered spoilers:
  * Some code paths and long-established game features have been made 
    part of the base build and no longer conditional on compile settings.
  * Several treasured NetHack community patches, or a variation of 
    them, have been rolled in to the base NetHack source tree, incuding: 
    menucolors, pickup thrown, statue glyphs, dungeon overview, sortloot.
** [2017-02-14 Tue 02:13] [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Shell-Commands-in-Dired.html][GNU Emacs Manual: Shell Commands in Dired]]
 The Dired command ! (dired-do-shell-command) reads a shell command string in the minibuffer, and runs that shell command on one or more files. The files that the shell command operates on are determined in the usual way for Dired commands (see Operating on Files). The command X is a synonym for !.
** [2017-02-14 Tue 02:26] [[http://mbork.pl/2017-02-13_Sorting_Org_entries_by_most_recent_activity][Marcin Borkowski: 2017-02-13 Sorting Org entries by most recent activity]]
 Interestingly enough, there is almost no need to write such a function. Deep in the Org-mode guts, in org-clock.el, there lies hidden a function called org-clock-get-last-clock-out-time. It’s almost never really used, but it does what we want. The only problem is that it returns a time value, i.e. not sth you can feed into org-sort. But this is easy to remedy:
** [2017-02-14 Tue 02:26] [[http://irreal.org/blog/?p=5929][Resetting a defvar Value | Irreal]]
  Apropos of yesterday’s post, I came across this query on Reddit and learned a new keystroke. One of the counterintuitive peculiarities of Elisp—and Lisps in general—is that a value defined by defvar or defcustom is immutable: once set it can’t be changed without restarting the process.
** [2017-02-14 Tue 02:27] [[http://cialu.net/blog/how-to-rotate-phone-video.html][How to rotate videos taken from smartphone]]
 On my Linux machines, a very easy way to do that is to use FFmpeg. You can install it on your distribution with a one command by terminal.
** [2017-02-14 Tue 02:27] [[http://cialu.net/blog/how-to-rotate-phone-video.html][How to rotate videos taken from smartphone]]
 ffmpeg -i '/home/user/Videos/video-to-rotate.mp4'  -c copy -metadata:s:v:0 rotate=180 '/home/user/Videos/rotated-video.mp4'
** [2017-02-14 Tue 02:29] [[http://dustymabe.com/2017/02/12/fedora-btrfssnapper-the-fedora-25-edition/][Fedora BTRFS+Snapper – The Fedora 25 Edition « A Random Walk Down Tech Street]]
 Setting up System with LUKS + LVM + BTRFS

 The manual steps for setting up the system are detailed in the part1 blog post from Fedora 22. This time around I have created a script that will quickly configure the system with LUKS + LVM + BTRFS. The script will need to be run in an Anaconda environment just like the manual steps were done in part1 last time.

 You can easily enable ssh access to your Anaconda booted machine by adding inst.sshd to the kernel command line arguments. After booting up you can scp the script over and then execute it to build the system. Please read over the script and modify it to your liking.

 Alternatively, for an automated install I have embedded that same script into a kickstart file that you can use. The kickstart file doesn't really leverage Anaconda at all because it simply runs a %pre script and then reboots the box. It's basically like just telling Anaconda to run a bash script, but allows you to do it in an automated way. None of the kickstart directives at the top of the kickstart file actually get used.
** [2017-02-14 Tue 03:45] [[https://github.com/kparal/gkeyring][kparal/gkeyring: A small Python tool for shell access to GNOME keyring. It provides a simple way to query and create keyring items.]]
 A small Python tool for shell access to GNOME keyring. It provides simple querying for and creating of keyring items.
** [2017-02-14 Tue 03:50] [[https://github.com/muflone/gnome-appfolders-manager][muflone/gnome-appfolders-manager: Manage GNOME Shell applications folders]]


 From the GNOME App Folders Manager main window you can define your custom folders to group your applications by clicking the Create folder button on the header bar.
** [2017-02-14 Tue 03:51] [[https://github.com/brunelli/gnome-shell-extension-installer][brunelli/gnome-shell-extension-installer: A bash script to search and install extensions from extensions.gnome.org]]
 A bash script to install and search extensions from extensions.gnome.org.
** [2017-02-14 Tue 03:51] [[https://github.com/lestcape/Configurable-Menu][lestcape/Configurable-Menu: A Configurable Menu for the Gnome Shell desktop enviroment.]]
 This applet have not support for cinnamon desktop anymore, will be migrated to Gnome Shell soon.
** [2017-02-14 Tue 03:54] [[https://github.com/sciancio/searchfirefoxbookmarks][sciancio/searchfirefoxbookmarks: A gnome-shell extension which searches the firefox bookmarks and provides results in your shell overview]]
 Search Firefox Bookmarks (SFB) is a GNOME Shell extension which searches the firefox bookmarks and provides results in your shell overview
** [2017-02-14 Tue 03:56] [[https://github.com/search?p=2&q=gnome-shell+search+pushed%253A%253E2016-06-01&ref=searchresults&type=Repositories&utf8=%25E2%259C%2593][Search · gnome-shell search pushed:>2016-06-01]]
 gnome-shell search pushed:>2016-06-01
** [2017-02-14 Tue 03:59] [[https://www.wiktionary.org/][Wiktionary]]
 Wiktionary
** [2017-02-14 Tue 03:59] [[https://github.com/search?utf8=%25E2%259C%2593&q=language%253Aelisp+pushed%253A%253E2017-01-01&type=Repositories&ref=searchresults][Search · language:elisp pushed:>2017-01-01]]
  Emacs Lisp
** [2017-02-14 Tue 04:00] [[https://github.com/search?o=desc&q=language%253Aelisp+pushed%253A%253E2017-01-01+stars%253A%253E10&ref=searchresults&s=updated&type=Repositories&utf8=%25E2%259C%2593][Search · language:elisp pushed:>2017-01-01 stars:>10]]
  We’ve found 519 repository results
** [2017-02-14 Tue 04:07] [[https://github.com/rmuslimov/browse-at-remote][rmuslimov/browse-at-remote: Browse target page on github/bitbucket from emacs buffers]]
 This package is easiest way to open particular link on github/gitlab/bitbucket from Emacs. It supports various kind of emacs buffer, like:

     file buffer
     dired buffer
     magit-mode buffers represinting code
     vc-annotate mode (use get there by pressing C-x v g by default)
** [2017-02-14 Tue 04:10] [[https://github.com/tvraman/emacspeak][tvraman/emacspeak: Automatically exported from code.google.com/p/emacspeak]]
 Blog Articles --- including emacspeak.blogspot.com posts.
 Manual Info manual for emacspeak.
 Web Emacspeak Web Site.
 Videos Video demos.
** [2017-02-14 Tue 04:11] [[https://github.com/skk-dev/ddskk][skk-dev/ddskk: Simple Kana to Kanji conversion program]]
 Daredevil SKK is a version of SKK (Simple Kana to Kanji conversion program, an input method of Japanese) maintained by the SKK development team at

 http://openlab.jp/skk

 It consists of a simple core and many optional programs which provide extensive features. Though it has been well developed, our target is more simplified core, and much more optional features.

 If you want to join development of Daredevil SKK, you can access its sources by git repository on the GitHub. see

 https://github.com/skk-dev/ddskk

 If you want to join the SKK Openlab Mailing list, see a description below.

 Daredevil SKK is under the GNU General Public License. See COPYING for its details.
** [2017-02-14 Tue 04:12] [[https://github.com/arthurnn/howdoi-emacs][arthurnn/howdoi-emacs: Search code from StackOverflow and paste it in emacs.]]
 Search code from StackOverflow and paste it in emacs.
** [2017-02-14 Tue 04:13] [[https://github.com/Malabarba/emacs-google-this][Malabarba/emacs-google-this: A set of emacs functions and bindings to google under point.]]
 google-this.el is a package that provides a set of functions and keybindings for launching google searches from within emacs.

 The main function is google-this (bound to C-c / g). It does a google search using the currently selected region, or the expression under point. All functions are bound under C-c / prefix, in order to comply with emacs' standards. To see all keybindings type C-c / C-h.

 If you don't like this keybind, just reassign the google-this-mode-submap variable. My personal preference is C-x g:
** [2017-02-14 Tue 04:14] [[https://github.com/skeeto/skewer-mode][skeeto/skewer-mode: Live web development in Emacs]]
 Provides live interaction with JavaScript, CSS, and HTML in a web browser. Expressions are sent on-the-fly from an editing buffer to be evaluated in the browser, just like Emacs does with an inferior Lisp process in Lisp modes.

     Watch the demo video on YouTube (webm)

 Skewer is available from MELPA, which will install the dependencies for you. This package and its dependencies are pure Elisp, meaning setup is a breeze, the whole thing is highly portable, and it works with many browsers.

 Dependencies:

     simple-httpd (available on MELPA)
     js2-mode (available on ELPA)

 Skewer requires Emacs 24.3 or later.
** [2017-02-14 Tue 04:15] [[https://github.com/bbatsov/zenburn-emacs][bbatsov/zenburn-emacs: The Zenburn colour theme ported to Emacs]]
 Zenburn for Emacs is a direct port of the popular Zenburn theme for vim, developed by Jani Nurminen. It's my personal belief (and that of its many users I presume) that it's one of the best low contrast color themes out there and that it is exceptionally easy on the eyes.
** [2017-02-14 Tue 04:17] [[https://trello.com/][Trello]]
 Trello’s boards, lists, and cards enable you to organize and prioritize your projects in a fun, flexible and rewarding way.
** [2017-02-14 Tue 04:19] [[https://github.com/org-trello/org-trello][org-trello/org-trello: Org minor mode - 2-way sync org & trello]]
 The full documentation is maintained!

     Demo

     Standard Install

     Org-trello Setup

     Quick start

     Migration

     Bindings

     Usage

     Downloads

     Contribute

     Having trouble?

     License
** [2017-02-14 Tue 04:24] [[http://editorconfig.org/][EditorConfig]]
 EditorConfig helps developers define and maintain consistent coding styles between different editors and IDEs. The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles. EditorConfig files are easily readable and they work nicely with version control systems.
** [2017-02-14 Tue 04:26] [[https://github.com/bnbeckwith/writegood-mode][bnbeckwith/writegood-mode: Minor mode for Emacs to improve English writing]]
 This is a minor mode to aid in finding common writing problems. Matt Might’s weaselwords scripts inspired this mode.

 It highlights text based on a set of weasel-words, passive-voice and duplicate words.
** [2017-02-14 Tue 05:23] [[https://github.com/remvee/android-mode][remvee/android-mode: Emacs minor mode for Android application development]]
android-mode.el -- Minor mode for Android application development

Provides support for running Android SDK subprocesses like the
emulator, logcat, ddms and ant.

Copyright (C) 2009, 2010, 2011, 2012, 2013, 2014 R.W van 't Veer

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 3
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs; see the file COPYING.  If not, write to the
Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
Boston, MA 02110-1301, USA.
** [2017-02-14 Tue 05:25] [[https://zhangda.wordpress.com/2016/02/15/configurations-for-beautifying-emacs-org-mode/][Configurations for beautifying Emacs org mode | Da's recipes on Emacs, IT, and more]]
Purpose of the configuration: to beautify org-mode’s appearance with some eye-candies
The configuration contains the following parts

    choose the right font and fall-back font
    enable utf coding
    select org-bullet symbol set
    select org-ellipsis symbol
    define the faces of org-bullet
** [2017-02-14 Tue 05:27] [[https://github.com/Wilfred/emacs-refactor][Wilfred/emacs-refactor: language-specific refactoring in Emacs]]
Emacs Refactor (EMR) is a framework for providing language-specific refactoring in Emacs. It includes refactoring commands for a variety of languages, including elisp itself!
** [2017-02-14 Tue 05:28] [[https://github.com/DarwinAwardWinner/ido-ubiquitous][DarwinAwardWinner/ido-ubiquitous: Fancy completion all over Emacs, not just for buffers and files.]]
Gimme some ido... everywhere! This package replaces stock emacs completion with ido completion wherever it is possible to do so without breaking things.
** [2017-02-14 Tue 05:29] [[https://github.com/nonsequitur/smex][nonsequitur/smex: A smart M-x enhancement for Emacs.]]
Smex is a M-x enhancement for Emacs. Built on top of Ido, it provides a convenient interface to your recently and most frequently used commands. And to all the other commands, too.
** [2017-02-14 Tue 05:30] [[https://github.com/cpitclaudel/company-coq][cpitclaudel/company-coq: IDE extensions for Proof General's Coq mode]]
A collection of extensions for Proof General's Coq mode.

See screenshots below, or jump right to setup instructions and try the tutorial with M-x company-coq-tutorial after setting up!
** [2017-02-14 Tue 05:30] [[https://github.com/porterjamesj/virtualenvwrapper.el][porterjamesj/virtualenvwrapper.el: virtualenv tool for emacs]]

    Works with the new python.el, which is the default on Emacs 24.3 and up. Does not support the older python modes.
    Python shells, interactive shells, eshell, and any other subprocesses can be made aware of your virtualenvs.
    Implements a large subset of the functionality of virtualenvwrapper.
** [2017-02-14 Tue 05:31] [[https://github.com/expez/company-quickhelp][expez/company-quickhelp: Documentation popup for Company]]
One of the things I missed the most when moving from auto-complete to company was the documentation popups that would appear when idling on a completion candidate. This package remedies that situation.

auto-complete uses popup-el to do its thing and this results in quite a few glitches. This package uses the much better pos-tip to display the popups. I recommend installing pos-tip using MELPA which fetches the version of pos-tip which is located here. This version contains a few bugfixes not included in the original on EmacsWiki.
** [2017-02-14 Tue 05:31] [[https://github.com/DogLooksGood/parinfer-mode][DogLooksGood/parinfer-mode: Parinfer for Emacs :)]]
Parinfer is a proof-of-concept editor mode for Lisp programming languages. It will infer some changes to keep Parens and Indentation inline with one another. Parinfer consists of two modes:

Indent Mode
    Indent Mode gives you full control of indentation, while Parinfer corrects parens.
Paren Mode
    Paren Mode gives you full control of parens, while Parinfer corrects indentation.

To learn more about Parinfer, please take a look at its home page.

And the parinfer-mode is the implementation on Emacs with parinfer-elisp.
** [2017-02-14 Tue 05:32] [[https://github.com/jschaf/esup][jschaf/esup: ESUP - Emacs Start Up Profiler]]
Benchmark Emacs Startup time without ever leaving your Emacs.
** [2017-02-14 Tue 05:32] [[https://github.com/noctuid/general.el][noctuid/general.el: More convenient key definitions in emacs]]
general.el provides a more convenient way to bind keys in emacs for both evil and non-evil users. general-define-key allows defining multiple keys at once, implicitly wrapping key strings with (kbd ...), having named prefix key sequences (like the leader key in vim), and more.
** [2017-02-14 Tue 05:32] [[https://github.com/rnkn/fountain-mode][rnkn/fountain-mode: Emacs major mode for screenwriting in Fountain plaintext markup]]
Fountain Mode is a complete screenwriting environment for GNU Emacs using the Fountain markup format. For more information on the Fountain markup format, visit http://fountain.io.
** [2017-02-14 Tue 05:33] [[https://github.com/Bad-ptr/persp-mode.el][Bad-ptr/persp-mode.el: named perspectives(set of buffers/window configs) for emacs]]
Perspectives for emacs, based on the perspective-el by Natalie Weizenbaum.
But the perspectives are shared among frames + ability to save/restore its state from/to a file.
** [2017-02-14 Tue 06:12] [[https://groups.google.com/forum/#!searchin/mu-discuss/gnome|sort:relevance/mu-discuss/RAxVY87rX8E/-8oSo7MlAgAJ][Setting mu4e as default email program in Gnome 3? - Google Groups]]
I'm using a script for this. I seem to remember that it was possible to add a command in the default applications of Fedora/Gnome, but it does not appear to be possible now. You can write a script such as:

#!/bin/bash
emacsclient -c --eval "(browse-url-mail \"$@\")"
** [2017-02-14 Tue 07:48] [[https://extensions.gnome.org/extension/1160/dash-to-panel/][Dash to Panel - GNOME Shell Extensions]]
An icon taskbar for the Gnome Shell. This extension moves the dash into the gnome main panel so that the application launchers and system tray are combined into a single panel, similar to that found in KDE Plasma and Windows 7+. A separate dock is no longer needed for easy access to running and favorited applications.
** [2017-02-14 Tue 07:48] [[https://extensions.gnome.org/extension/708/panel-osd/][Panel OSD - GNOME Shell Extensions]]
Configuring where on the (main) screen notifications will appear, instead of just above the message tray
** [2017-02-14 Tue 07:48] [[https://github.com/jderose9/dash-to-panel][jderose9/dash-to-panel: An icon taskbar for the Gnome Shell. This extension moves the dash into the gnome main panel so that the application launchers and system tray are combined into a single panel, similar to that found in KDE Plasma and Windows 7+. A separate dock is no longer needed for easy access to running and favorited applications.]]
How do I embed my bottom left notification drawer into the panel like a system tray? Top Icons Plus

How do I add a traditional start menu? Gno-Menu

How do I disable the hot corner? No Topleft Hot Corner

How do I move the notifications to somewhere other than the top center? Panel OSD

How do I add transparency to the panel? Dynamic Panel Transparency

How do I change workspaces by scrolling the mouse wheel in the empty space? Top Panel Workspace Scroll

Why can't I put the panel vertically on the left or right of the display? Gnome-shell and it's numerous extensions add widgets to the panel. These widgets have been designed using padding and absolute positioning assuming a horizontal layout. At this point in time, I don't think it is possible to allow for a vertical layout and still maintain any sort of reasonable compatibility with many of the other features of Gnome.
** [2017-02-14 Tue 22:47] [[https://spb.rabota.ru/vacancy38598453.html?vac_page=view&vac=100][Помощник системного администратора (работа в Санкт-Петербурге) | Вакансия компании Тэсонэро]]
#+BEGIN_QUOTE
Компании, работающей в сфере IT-Аутсорсинга (выездного обслуживания), требуется помощник системного администратора. Ищем человека, желающего работать и развиваться в сфере IT-Аутсорсинга (можно без опыта работы). Со студентами обсуждается индивидуальный график работы, есть возможность прохождения учебной практики, написание диплома и преддипломной практики.

#+END_QUOTE
** [2017-02-14 Tue 23:11] [[https://vk.com/id336959][Виктория Казакевич]]
#+BEGIN_QUOTE
Виктория Казакевич
Спасибо, друзья!!!
День рождения:
17 ноября 1982 г.
Город:
Санкт-Петербург
Семейное положение:
замужем за Сергеем Колоницким
Место работы:
ЛЭТИ
Веб-сайт:
http://socratt_owl.livejournal.com
Скрыть подробную информацию
Основная информация
Родной город:
Ленинград
Языки:
Русский
Родители:
Надежда Казакевич и Григорий Казакевич
Братья, сестры:
Mark Rubanovich, Леонид Казакевич
Контактная информация
Моб. телефон:
Информация скрыта
Skype:
sokratt_vgk
Карьера
Место работы:
ЛЭТИ
Санкт-Петербург, с 2005 г.
Ассистент кафедры ВМ-2
Образование
Вуз:
СПбГУ '05
Факультет:
Математико-механический
Кафедра/направление:
Высшей алгебры и теории чисел
Форма обучения:
Очное отделение
Статус:
Аспирантка
Школа:
Школа №583 '00
Санкт-Петербург, 1992–2000 (а)
математика
Школа:
Школа №217
Санкт-Петербург, 1989–1991 (ш)
Жизненная позиция
Полит. предпочтения:
Либеральные
Мировоззрение:
Научное
Вдохновляют:
Жизнь!
Личная информация
Деятельность:
Мат-мех СПбГУ - аспирантка (специальность - мат. логика, алгебра и теория чисел); кружок при 239, СПб матцентр - бо-ольшое жюри; ЛЭТИ - ассистент кафедры ВМ-2, "Что? Где? Когда?" - команда "МУР-ЛЭТИ", сертифицированный арбитр МАК; клуб старинного танца Historycaldances, аргентинское танго и т.д.
Интересы:
Жить интересно!!!
Любимая музыка:
Классика, рок. Оркестр Поля Мариа, Р. Клэйдерман, Ф. Гойя и т.д.
Любимые фильмы:
"Д'Артаньян и три мушкетера", весь Шерлок Холмс (наш, ясное дело), "Служебный роман", "31 июня", Гайдай, "Мертвый сезон", "Щит и меч", "Dirty dancing" и т.д.
Любимые телешоу:
"Не забудьте выключить телевизор!"
Любимые книги:
"Три мушкетера", всяческая фантастика, классический детектив, Дж. Хэрриот, И. Губерман, Крылов "Мои воспоминания", SGA и т.д.
Любимые игры:
Всевозможные интеллектуальные (в кавычках и без оных :))
Любимые цитаты:
"Жизнь описывается двумя понятиями: дедлайн и форсмажор" (Н.А. Вавилов)
"Если партия скажет: "Есть контакт!", - будем есть контакт!"
"Начнем пораньше, закончим попозже. Для компенсации будем работать без перерыва"
"Инквизиция жжет!!!"
О себе:
Не была, на состояла, не привлекалась.
Национальность: таки да!!!
Характер: есть.

С Богом я общаюсь без нытья
и не причиняя беспокойства:
глупо на устройство бытия
жаловаться автору устройства.
(Игорь Губерман)

Иду я против топора,
в руке сжимая лом
как символ торжества добра
в его борьбе со злом.
(Игорь Губерман)
Группы:
Добрая группа ツ, А мне прожить без музыки нельзя, Студия авторского стекла Богатый Кот, Зоослово всё о животных помощь пиар новости., Антресоль винтаж, Город которого больше нет, XII Танго Фестиваль Невская Милонга 2017, РетроПитер Музей транспорта для Вас, Встреча в защиту Исаакиевского собора 28.01.17, Клуб Любителей Кошек, Помогите спасти кошку Мяву, Помощь бездомным животным, Примор Приморский район СПб, МУЗЕЙ КОШКИ, Естественные науки natural sciences
показать полный список
717
друзей
192
подписчика
154
фотографии
791
отметка
123

#+END_QUOTE
** [2017-02-14 Tue 23:12] [[https://vk.com/im?peers=1927657_71521315_c7&sel=6858533][Диалоги]]
#+BEGIN_QUOTE
Только без флуда.
Во вторник она точно скажет когда занятие будет
#+END_QUOTE
** [2017-02-15 Wed 00:33] [[http://spb.rosrabota.ru/vac-full/33575490][Работа в Санкт-Петербурге: вакансия Помощник системного администратора в компании Тэсонэро]]
#+BEGIN_QUOTE
Компании, работающей в сфере It-Аутсорсинга (выездного обслуживания), требуется помощник системного администратора. Ищем человека, желающего работать и развиваться в сфере It-Аутсорсинга (можно без опыта работы). Со студентами обсуждается индивидуальный график работы, есть возможность прохождения учебной практики, написание диплома и преддипломной практики.
Обязанности:
Сборка, настройка Пк и установка По на местах;
поддержка пользователей (в том числе и в удаленных офисах);
обеспечение бесперебойной работы техники и программного обеспечения (сервера, рабочие станции, сетевое оборудование), удаленное администрирование сети, поддержка телефонии и оргтехники;
администрирование Ms Windows, Linux систем, *nix систем, прокладка и настройка сетевого оборудования;
проведение монтажных работ.
Требования:
Высшее или незаконченное техническое образование.
Базовые знания принципов обслуживания и настройки системного (Windows, Linux систем, *nix систем), прикладного программного обеспечения, сетевых настроек (Tcp/Ip), локальных сетей, диагностика “железа” компьютера.
Знание основ построения Скс.
Коммуникабельность, дисциплинированность и желание обучаться новому.
Предлагаем:
Ищем людей, желающих работать и развиваться в сфере It-Аутсорсинга (можно без опыта работы).
График работы: пятидневка 10-18, 11-19 или 12-20. Со студентами обсуждается индивидуальный график работы.
Испытательный срок 3 месяца, з/п 18000 руб. Оплачиваемый проезд + сотовая связь. При показанной хорошей работе испытательный срок сокращается до 1 месяца. После прохождения испытательного срока з/п от 20000-35000 и выше, обсуждается по итогам в зависимости от показанной работы и знаний. Оформление по Тк Рф, оплачиваемый отпуск 28 дней, оплачиваемые больничные. Карьерный рост до руководителя технического отдела.

#+END_QUOTE
** [2017-02-15 Wed 03:51] [[https://www.youtube.com/watch?v=F5YFInzcPG0][Как Работает Центральный Банк - YouTube]]
#+BEGIN_QUOTE
Центральные банки называют регуляторами рынка и гарантом стабильности, но, на самом деле, эта система с заранее проигрышным результатом для страны. Ну как страна может полностью выплатить долг Центральному банку, если изначально у страны нет денег? 

#+END_QUOTE
** [2017-02-15 Wed 04:58] [[https://github.com/GNOME/recipes][GNOME/recipes: GNOME likes to cook]]
#+BEGIN_QUOTE
This app is about cooking and recipes.

The main objects of interest are

recipes
ingredients
cuisines
chefs
The design can be found here: https://wiki.gnome.org/Design/Apps/Recipes


#+END_QUOTE
** [2017-02-15 Wed 06:50] [[http://rsync.net/#fourthpage][rsync.net Enterprise Cloud Storage]]
We give you a regular filesystem that you can access with any SSH tool

 

Our platform is built on ZFS which provides unparalleled data security and fault tolerance

 

rsync.net can scale to Petabyte size and Gigabit speeds

 

rsync / sftp / scp / git-annex / duplicity / rdiff-backup / unison
** [2017-02-15 Wed 14:50] [[https://www.youtube.com/watch?v=pVRIVd0kjWU&list=PLhnCei31lj_TnZVLvzdwFk8Rx8L4zdMee][Философия. Лекция 1.1 Введение в философию-1 - YouTube]]
#+BEGIN_QUOTE
Курс лекций преподавателей «Политеха» на онлайн-платформе «Открытое образование», openedu.ru 

#+END_QUOTE
** [2017-02-15 Wed 14:50] [[https://www.youtube.com/watch?v=pVRIVd0kjWU&list=PLhnCei31lj_TnZVLvzdwFk8Rx8L4zdMee][Философия. Лекция 1.1 Введение в философию-1 - YouTube]]
#+BEGIN_QUOTE
Курс лекций преподавателей «Политеха» на онлайн-платформе «Открытое образование», openedu.ru 

#+END_QUOTE
** [2017-02-15 Wed 14:53] [[https://openedu.ru/course/urfu/CALC/][Открытое образование - Математический анализ]]
#+BEGIN_QUOTE
Курс посвящен изучению методов дифференциального исчисления функции одной и нескольких действительных переменных и интегрального исчисления функции действительного аргумента, которые являются мощным инструментом для решения задач в физике, технике, медицине, экономике, статистике и других областях.


#+END_QUOTE
** [2017-02-15 Wed 14:53] [[https://www.youtube.com/results?q=%25D0%259E%25D1%2582%25D0%25BA%25D1%2580%25D1%258B%25D1%2582%25D0%25BE%25D0%25B5+%25D0%259E%25D0%25B1%25D1%2580%25D0%25B0%25D0%25B7%25D0%25BE%25D0%25B2%25D0%25B0%25D0%25BD%25D0%25B8%25D0%25B5&sp=EgIQAw%25253D%25253D][Открытое Образование - YouTube]]
#+BEGIN_QUOTE
Открытое Образование
#+END_QUOTE
** [2017-02-15 Wed 15:11] [[https://github.com/adam-p/markdown-here][adam-p/markdown-here: Google Chrome, Firefox, and Thunderbird extension that lets you write email in Markdown and render it before sending.]]
#+BEGIN_QUOTE
Markdown Here is a Google Chrome, Firefox, Safari, Opera, and Thunderbird extension that lets you write email† in Markdown‡ and render them before sending. It also supports syntax highlighting (just specify the language in a fenced code block).


#+END_QUOTE
** [2017-02-15 Wed 15:11] [[https://github.com/YePpHa/YouTubeCenter][YePpHa/YouTubeCenter: YouTube Center is a userscript designed to expand the functionality of YouTube. It includes the ability to download the video you're watching, auto selecting your preferred video quality and much more.]]
#+BEGIN_QUOTE
YouTube Center is a userscript designed to expand the functionality of YouTube. It includes the ability to download the video you're watching, auto selecting your preferred video quality and much more.

#+END_QUOTE
** [2017-02-15 Wed 15:12] [[https://github.com/mauricecruz/chrome-devtools-zerodarkmatrix-theme][mauricecruz/chrome-devtools-zerodarkmatrix-theme: A highly customized dark theme for Chrome]]
#+BEGIN_QUOTE
A highly customized dark theme for Google Chrome.

Stable and Canary channels are officially supported. Beta and Dev channels will work, but I'm not testing on them.


#+END_QUOTE
** [2017-02-15 Wed 15:13] [[https://github.com/segmentio/daydream][segmentio/daydream: A chrome extension to record your actions into a nightmare script]]
#+BEGIN_QUOTE
Just click the black daydream icon (it should turn green to indicate that it is actively recording), run all the tasks you wish to automate, and then click the green icon and open the popup.


#+END_QUOTE
** [2017-02-15 Wed 15:27] [[https://github.com/1c7/Youtube-Auto-Subtitle-Download][1c7/Youtube-Auto-Subtitle-Download: Download Youtube Subtitle ( Chrome Tempermonkey Script )]]
First, you need use Chrome(Web browser) and Tampermonkey (Tampermonkey is a Chrome extension)
** [2017-02-15 Wed 15:27] [[https://github.com/csu/export-saved-reddit][csu/export-saved-reddit: Export saved Reddit posts into a HTML file for import into Google Chrome.]]
Exports saved and/or upvoted Reddit posts into a HTML file that is ready to be imported into Google Chrome. Sorts items into folders by subreddit.
** [2017-02-15 Wed 15:30] [[https://github.com/Tampermonkey/tampermonkey][Tampermonkey/tampermonkey: Tampermonkey is a free browser extension and the most popular userscript manager for Blink- and WebKit-based Browsers like Chrome, Opera Next and Safari.]]

Tampermonkey is a free browser extension and the most popular userscript manager for Blink- and WebKit-based Browsers like Chrome, Opera Next and Safari.
** [2017-02-15 Wed 15:44] [[https://openedu.ru/course/#status=current&sort=new_first&dir=up][Открытое образование - Курсы]]
#+BEGIN_QUOTE
Отсортировано: сначала новые
#+END_QUOTE
** [2017-02-15 Wed 16:31] [[https://github.com/alebedev/git-media][alebedev/git-media: Handling large media files in Git]]
#+BEGIN_QUOTE
GitMedia extension allows you to use Git with large media files without storing the media in Git itself.


#+END_QUOTE
** [2017-02-15 Wed 16:38] [[https://github.com/haiwen/seafile][haiwen/seafile: File syncing and sharing software with file encryption and group sharing, emphasis on reliability and high performance.]]
#+BEGIN_QUOTE
File syncing and sharing software with file encryption and group sharing, emphasis on reliability and high performance. http://seafile.com/

#+END_QUOTE
** [2017-02-15 Wed 21:27] [[https://vk.com/gradusminus][Градус Минус]]
#+BEGIN_QUOTE
Градус Минус
У моего бога хер больше чем у твоего...
Город:
Санкт-Петербург
Место работы:
Работники "НИИ командных приборов"
3
общих друга
124
друга
78
подписчиков
69
фотографий
389
видеозаписей

#+END_QUOTE
** [2017-02-16 Thu 05:49] [[https://turtlapp.com/][Turtl: A secure, encrypted Evernote alternative | Turtl]]
 Yes. All of Turtl's source code for its clients and server are available online on our Github. Turtl's code is licensed GPLv3, meaning anybody can download and run their own version personally or in their company's intranet.
** [2017-02-16 Thu 05:51] [[https://gitlab.com/fengshaun/syncopoli][fengshaun / syncopoli · GitLab]]

    Server address - The IP address of your server
    Protocol - Rsync or SSH
    Port - Self explanatory
    User - This should be your rsync user or ssh user (depending on protocol)
    Additional Options - Any additional options you want to give rsync
    Private key - Should be your dropbear-compatible ssh key (see below)
    Rsync Password - password used to authenticate with the Rsync daemon
    Frequency - How often you want to run all the sync profiles (in hours)
** [2017-02-16 Thu 05:57] [[https://github.com/RichiH/vcsh][RichiH/vcsh: config manager based on Git]]
While it may appear that there's an overwhelming amount of documentation and while the explanation of the concepts behind vcsh needs to touch a few gory details of git internals, getting started with vcsh is extremely simple.
** [2017-02-16 Thu 06:06] [[https://en.wikisource.org/wiki/Main_Page][Wikisource, the free library]]


    Wikimedia Commons
    MediaWiki
    Meta-Wiki
    Wikispecies
    Wikibooks
    Wikidata
    Wikinews
    Wikipedia
    Wikiquote
    Wikiversity
    Wikivoyage
** [2017-02-16 Thu 06:09] [[https://en.wikipedia.org/wiki/List_of_free_and_open-source_software_packages][List of free and open-source software packages - Wikipedia]]
This is a list of free and open-source software packages, computer software licensed under free software licenses and open-source licenses. Software that fits the Free Software Definition may be more appropriately called free software; the GNU project in particular objects to their works being referred to as open-source.[1] For more information about the philosophical background for open-source software, see free software movement and Open Source Initiative. However, nearly all software meeting the Free Software Definition also meets the Open Source Definition and vice versa. A small fraction of the software that meets either definition is listed here.
** [2017-02-16 Thu 06:20] [[https://github.com/Kozea/Radicale][Kozea/Radicale: A simple CalDAV (calendar) and CardDAV (contact) server.]]
Radicale is a free and open-source CalDAV and CardDAV server.

For complete documentation, please visit the Radicale online documentation
** [2017-02-16 Thu 06:32] [[http://radicale.org/user_documentation/][Radicale - CalDAV and CardDAV Server - Contents]]
Radicale is written in pure Python and does not depend on any library. It is known to work on Python 2.6, 2.7, 3.1, 3.2, 3.3, 3.4 and PyPy > 1.9. The dependencies are optional, as they are only needed for various authentication methods [1].
** [2017-02-16 Thu 07:00] [[https://github.com/pimutils/vdirsyncer][pimutils/vdirsyncer: Synchronize calendars and contacts]]
Vdirsyncer synchronizes your calendars and addressbooks between two storages. The most popular purpose is to synchronize a CalDAV/CardDAV server with a local folder or file. The local data can then be accessed via a variety of programs, none of which have to know or worry about syncing to a server.
** [2017-02-16 Thu 07:00] [[https://github.com/Kozea/Radicale][Kozea/Radicale: A simple CalDAV (calendar) and CardDAV (contact) server.]]
 A simple CalDAV (calendar) and CardDAV (contact) server. http://radicale.org
** [2017-02-16 Thu 07:01] [[http://www.courier-mta.org/][The Courier Mail Server]]
The Courier mail transfer agent (MTA) is an integrated mail/groupware server based on open commodity protocols, such as ESMTP, IMAP, POP3, LDAP, SSL, and HTTP. Courier provides ESMTP, IMAP, POP3, webmail, and mailing list services within a single, consistent, framework. Individual components can be enabled or disabled at will. The Courier mail server now implements basic web-based calendaring and scheduling services integrated in the webmail module. Advanced groupware calendaring services will follow soon.
** [2017-02-16 Thu 07:54] [[https://github.com/Malabarba/elisp-bug-hunter][Malabarba/elisp-bug-hunter: Hunt down errors in elisp files.]]
#+BEGIN_QUOTE
Automatically debug and bisect your init (.emacs) file!

The Bug Hunter is an Emacs library that finds the source of an error or unexpected behavior inside an elisp configuration file (typically init.el or .emacs).
#+END_QUOTE
** [2017-02-16 Thu 08:12] [[https://github.com/astahlman/ob-async][astahlman/ob-async: Asynchronous src_block execution for org-babel]]
ob-async enables asynchronous execution of org-babel src blocks, like this:
** [2017-02-16 Thu 16:52] [[https://github.com/mofarrell/p2pvc][mofarrell/p2pvc: A point to point color terminal video chat.]]
A point to point color terminal video chat.
** [2017-02-16 Thu 20:08] [[https://www.youtube.com/watch?v=NG9v68Vzwk4][Функции Центрального Банка РФ - ШОК! Вся правда! - YouTube]]
#+BEGIN_QUOTE
Обязанность каждого, повысить уровень своей финансовой грамотности и стать на защиту своих интересов перед произволом банковских систем!

Не можете платить за кредит? Попали в сложную ситуацию и не знаете, что делать? Банк задалбывает звонками и намерен подать в суд? Угрожают коллекторы и вы в страхе, что лишитесь всего? Спасение есть!
Снизить платежи по кредиту, остановит рост банковских долгов и вовсе списать банковскую задолженность - это реально!

#+END_QUOTE
** [2017-02-16 Thu 20:08] [[https://www.youtube.com/watch?v=NG9v68Vzwk4][Функции Центрального Банка РФ - ШОК! Вся правда! - YouTube]]
#+BEGIN_QUOTE
Обязанность каждого, повысить уровень своей финансовой грамотности и стать на защиту своих интересов перед произволом банковских систем!

Не можете платить за кредит? Попали в сложную ситуацию и не знаете, что делать? Банк задалбывает звонками и намерен подать в суд? Угрожают коллекторы и вы в страхе, что лишитесь всего? Спасение есть!
Снизить платежи по кредиту, остановит рост банковских долгов и вовсе списать банковскую задолженность - это реально!

Решаем любые проблемы с кредитами в рамках закона!
Свяжись с нами, консультация бесплатная!
Телефон: 8 (914) 665-32-15
Заполнить заявку: http://eskalatdv.ru
Skype: eskalat.dv

#+END_QUOTE
** [2017-02-18 Sat 02:55] [[https://www.youtube.com/channel/UC7P9rGN3iFD_LLK9eI2kqAg/about][NCS Music 2017 / Музыка без авторских прав 2017 - YouTube]]
#+BEGIN_QUOTE
На канале выкладываются самые новые и популярные треки без авторских прав, для работы с Youtube! 
Если вы использовали трек с данного канала и через некоторое время на него появился автор, не спешите обвинять канал в своих бедах так некоторые авторы все же решаются присвоить себе свое творение, это может произойти через день, неделю месяц, год, и то это в редких случаев. Те треки которые обретут на канале авторское право будут удаляться а информация об обретение авторства будет опубликована в группе вконтакте.

#+END_QUOTE
** [2017-02-18 Sat 02:56] [[https://www.youtube.com/watch?v=SS9uhfIl01g][Warriyo - Mortals (feat. Laura Brehm) {NCS Release} {Future Bass} - YouTube]]
#+BEGIN_QUOTE
Группа в вк. https://vk.com/musicncs2017

#+END_QUOTE
** [2017-02-18 Sat 03:00] [[https://www.zotero.org/][Zotero | Home]]
#+BEGIN_QUOTE
Zotero [zoh-TAIR-oh] is a free, easy-to-use tool to help you collect, organize, cite, and share your research sources.

#+END_QUOTE
** [2017-02-18 Sat 03:01] [[https://www.lyx.org/][LyX | LyX – The Document Processor]]
#+BEGIN_QUOTE
LyX is a document processor that encourages an approach to writing based on the structure of your documents (WYSIWYM) and not simply their appearance (WYSIWYG).

#+END_QUOTE
** [2017-02-18 Sat 04:01] [[https://www.reddit.com/r/emacs/comments/5tqn61/orgrefiletargets_based_on_current_org_file/][org-refile-targets based on current org file : emacs]]
All that should be required is to call org-refile inside a let, like:

(let ((org-refile-targets 'whatever))
  (org-refile ...
** [2017-02-18 Sat 04:04] [[https://github.com/aritra-b-11/schedule-mode][aritra-b-11/schedule-mode]]
Schedule mode is a derived mode of org. This is intended for haveing a table format for scheduling. This buffer will have folloing parts:

    Comments for usage help
    effort table for calculating total man days
    schedule table for checking milestone, resource, work, planned & actual dates
    owner table describing owners
** [2017-02-18 Sat 08:49] [[https://github.com/emacs-pe/markdown-edit-indirect.el][emacs-pe/markdown-edit-indirect.el: Edit markdown code block in a separate buffer]]
Edit markdown code block in a separate buffer like org-edit-src-code.
** [2017-02-18 Sat 08:52] [[http://gwene.org/][Read RSS Feeds Via NNTP]]
Then read the feeds with a news reader via news.gwene.org.
** [2017-02-18 Sat 17:46] [[https://tools.ietf.org/html/rfc5321#section-2.3.11][RFC 5321 - Simple Mail Transfer Protocol]]
   This document specifies an Internet standards track protocol for the
   Internet community, and requests discussion and suggestions for
   improvements.  Please refer to the current edition of the "Internet
   Official Protocol Standards" (STD 1) for the standardization state
   and status of this protocol.  Distribution of this memo is unlimited.
** [2017-02-18 Sat 19:17] [[https://github.com/tarsius/magit-rockstar/blob/master/magit-rockstar.el][magit-rockstar/magit-rockstar.el at master · tarsius/magit-rockstar]]
#+BEGIN_QUOTE
;; This package provides two commands which manipulate author and
;; committer dates.  You could use it to make yourself look like
;; a rockstar programmer who hammers out commits at one commit per
;; minute.  But the real purpose is to recover from heavy
;; re-arrangements of commits, that have causes the existing author
;; and committer dates to become meaningless.

#+END_QUOTE
** [2017-02-18 Sat 19:19] [[https://ghost.org/][Ghost - The Professional Publishing Platform]]
#+BEGIN_QUOTE
Ghost is a fully open source, hackable platform for building and running a modern online publication. We power blogs, magazines and journalists from Zappos to Sky News.
Test it out
Find out more

#+END_QUOTE
** [2017-02-18 Sat 19:21] [[https://github.com/TryGhost/Ghost][TryGhost/Ghost: A simple, powerful publishing platform]]
#+BEGIN_QUOTE
The project is maintained by a non-profit organisation called the Ghost Foundation, along with an amazing group of independent contributors. We're trying to make publishing software that changes the shape of online journalism.


#+END_QUOTE
** [2017-02-18 Sat 19:24] [[https://github.com/javaguirre/ghost-blog-emacs][javaguirre/ghost-blog-emacs: Ghost mode for Emacs]]
#+BEGIN_QUOTE
The package uses markdown-mode for highlighting.


#+END_QUOTE
** [2017-02-18 Sat 19:25] [[https://github.com/tarsius/git-elisp-overview][tarsius/git-elisp-overview: Git-related Emacs packages]]
#+BEGIN_QUOTE
There is more to Git than magic. A list of Git related Emacs packages, compiled by the maintainer of Magit. The intention is to list all such packages in existence. Please tell me about packages that I have missed.


#+END_QUOTE
** [2017-02-18 Sat 19:56] [[http://www.ideasonboard.org/uvc/][Linux UVC driver & tools]]
#+BEGIN_QUOTE
Welcome to the USB Video Class Linux device driver home.

The goal of this project is to provide all necessary software components to fully support UVC compliant devices in Linux. This include a V4L2 kernel device driver and patches for user-space tools.

The USB Device Class Definition for Video Devices, or USB Video Class, defines video streaming functionality on the Universal Serial Bus. Much like nearly all mass storage devices (USB flash disks, external SATA disk enclosures, ...) can be managed by a single driver because they conform to the USB Mass Storage specification, UVC compliant peripherals only need a generic driver.

The UVC specification covers webcams, digital camcorders, analog video converters, analog and digital television tuners, and still-image cameras that support video streaming for both video input and output.

Due to the limited available man power and the broad scope of the UVC specification, the Linux UVC project will concentrate the development efforts on video input devices, especially webcams. Video output devices are supported in bulk mode only.


#+END_QUOTE
** [2017-02-18 Sat 21:28] [[https://github.com/umlaeute/v4l2loopback][umlaeute/v4l2loopback: v4l2-loopback device]]
this module allows you to create "virtual video devices" normal (v4l2) applications will read these devices as if they were ordinary video devices, but the video will not be read from e.g. a capture card but instead it is generated by another application. this allows you for instance to apply apply some nifty video effects on your Skype video... it also allows some more serious things (e.g. I've been using it to add streaming capabilities to an application by the means of hooking GStreamer into the loopback devices).
** [2017-02-19 Sun 02:43] [[https://github.com/Airblader/i3][Airblader/i3: i3-gaps – i3 with more features (forked from https://github.com/i3/i3)]]
This is a fork of i3wm, a tiling window manager for Linux. It includes a few additional features which you can read up on below.

If you want to check out how you could use them, you could check out my dotfiles repository.

This fork, much like i3 itself, maintains two branches: The gaps branch is the equivalent of i3's stable master branch while gaps-next contains gaps and i3's next.
** [2017-02-19 Sun 05:49] [[https://jeffkarney.com/2013/01/15/fixing-postfix-permission-issues-linux/][Fixing Postfix permission issues on Linux | Jeff Karney]]
You probably have a permission issue with your Postfix installation.  This is usually caused by a bad upgrade or maybe user error when moving or recovering mail folders.
** [2017-02-19 Sun 06:48] [[https://ocw.mit.edu/courses/economics/14-01-principles-of-microeconomics-fall-2007/lecture-notes/][Lecture Notes | Principles of Microeconomics | Economics | MIT OpenCourseWare]]
The lecture notes shown below are from the one of the Discussion sections for the course. The subtopics for each lecture are related to the chapters in the textbook. These lecture notes were prepared by Xingze Wang, YingHsuan Lin, and Frederick Jao specifically for MIT OpenCourseWare.
** [2017-02-19 Sun 08:35] [[https://www.netlify.com/blog/2016/05/24/5-bullst-reasons-not-to-use-a-static-generator/][5 Bulls**t Reasons Not to Use a Static Generator | Netlify]]
Prose.io - Prose.io actually lets you navigate and create new content right on GitHub. Once you have a site up and running in a repository, you can create new posts, define URLs, write in Markdown or use their built in editor to write and format your posts.
** [2017-02-19 Sun 08:36] [[https://www.netlify.com/blog/2016/05/24/5-bullst-reasons-not-to-use-a-static-generator/][5 Bulls**t Reasons Not to Use a Static Generator | Netlify]]
First, let’s talk about toolsets. While there are many different options, the majority of static site generators fall into three categories (with a fourth coming up strong): JavaScript, Ruby, and Python-based offerings. The popularity of React means there are a handful of newer options built around it, and those will only grow in number. That’s in addition to outliers like Hugo, which is built with Google’s Go language. While you may be familiar with all the offerings, you no doubt have one that you prefer, so that narrows the field straight off the bat.

Then it’s time to decide what kind of project you are launching. Do you want to create a blog? Well, my friend, you should check out Jekyll, Hexo or Pelican. Setting up your portfolio? Try out Expose or Cactus. Need to set up a highly polished corporate or marketing site? Creative agencies love Middleman and Roots. Gatsby and Phenomic, both built with React, give you blogs that function like single page apps. Speaking of single page apps, build one with Metalsmith or Assemble.

There’s no need to be overwhelmed by the possibilities, and if you are, staticgen.com–a leaderboard of top static web generators–can help you figure out the best tool for your project.
** [2017-02-19 Sun 17:14] [[http://anime-figures.ru/][Интернет-магазин Anime Figures - Anime Figures - Аниме фигурки и не только!]]
#+BEGIN_QUOTE
19.02.2017. И вновь свежая партия фигурок приехала к нам в магазинчик! Первым идёт красавец-демон Себастьян Михаэлис из третьего сезона аниме 'Демон-дворецкий', за ним следуют две фигурки из замечательного аниме, которым можно обучать студентов кулинарных ВУЗов - 'Кулинарные поединки Сомы': это прекрасные Накири Эрина и Мито Икуми! Желаем Вам прекрасного настроения сегодня!


#+END_QUOTE
** [2017-02-19 Sun 22:00] [[https://github.com/jwiegley/dot-emacs][jwiegley/dot-emacs: My .emacs.el file and other personal Emacs goodies]]
#+BEGIN_QUOTE
My .emacs.el file and other personal Emacs goodies http://www.newartisans.com

#+END_QUOTE
** [2017-02-20 Mon 14:26] [[https://github.com/jborg/attic][jborg/attic: Deduplicating backup program]]
Attic is a deduplicating backup program. The main goal of Attic is to provide an efficient and secure way to backup data. The data deduplication technique used makes Attic suitable for daily backups since only changes are stored.
** [2017-02-20 Mon 14:27] [[https://github.com/rsnapshot/rsnapshot][rsnapshot/rsnapshot: a tool for backing up your data using rsync (if you want to get help, use https://lists.sourceforge.net/lists/listinfo/rsnapshot-discuss)]]
 a tool for backing up your data using rsync (if you want to get help, use https://lists.sourceforge.net/lists/listinfo/rsnapshot-discuss) http://rsnapshot.org
** [2017-02-20 Mon 18:25] [[http://3dtoday.ru/][Сообщество владельцев 3D-принтеров — 3DToday — описание 3D-принтеров, отзывы о 3D-принтерах, характеристики, фотографии и описания, распечатанные 3D-модели и многое другое]]
#+BEGIN_QUOTE
3Dtoday – портал для любителей и профессионалов, заинтересованных в 3D-печати и сопутствующих технологиях. Все самое актуальное о мире 3D-печати: новости, блоги, обзоры и технички.


#+END_QUOTE
** [2017-02-20 Mon 18:57] [[https://www.youtube.com/watch?v=DF_5MvV1wXM][6 АНИМЕ КОТОРЫЕ МОЖНО ПОКАЗАТЬ РОДИТЕЛЯМ - YouTube]]
#+BEGIN_QUOTE
Многие родители в наше время из-за дискриминации на телевидении относятся к аниме предвзято, я решил сделать подборку из 6 картин, которые могут понравится старшим)
1) Death note - Тетрадь смерти
2) Fullmetal alchemist - Стальной алхимик
3) Пять сантиметров в секунду
4) Kimi ga nozomu eien - Беспокойные сердца
5) Девочка покорившая время
6) Сад изящных слов

#+END_QUOTE
** [2017-02-20 Mon 19:10] [[https://www.youtube.com/watch?v=Q-BpqyOT3a8&feature=em-uploademail][What Is A RESTful API? Explanation of REST & HTTP - YouTube]]
#+BEGIN_QUOTE
In this video i will explain what a RESTful API is along with HTTP and endpoints. We will look at the Github API as an example

#+END_QUOTE
** [2017-02-20 Mon 23:57] [[https://emacs.stackexchange.com/questions/5298/reading-mailing-list-archives-in-emacs][email - Reading mailing list archives in Emacs? - Emacs Stack Exchange]]
up vote
19
down vote
accepted
        

Sure GNUS is an answer. From emacswiki

M-x gnus
B
nntp
news.gmane.org

And select gmane.emacs.devel. From here you can browse through the threads using GNUs NNTP interface (which is what it was originally written to do). This is probably the best solution for browsing through historical mailing lists.

As others have mentioned you may only want to read a small set of emails perhaps attached to a bug or patchwork. In this case if you can download the mbox file you can browse it directly without dealing with network latency. Again Emacs has many solutions for email however built in you can use Rmail quite easily. The steps for this are:

M-x rmail

This will bring up your default inbox (most likely your systems /var/mail/$USER and copy it in ~/RMAIL). However to load in a "foreign" mail box you type:

i
path/to/mbox
h

This will put you at the summary view of the mail box which you can then browse with the usual Emacs navigation.
** [2017-02-21 Tue 08:30] [[https://github.com/windelicato/dotfiles/][windelicato/dotfiles: arch linux configuration files]]
Arch Linux configuration files for programs and BSPWM

Requirements to run full setup with applets...

    dzen2 - for the clickable applets
    conky - for the top bar
    mpd - for the music applet
    mpc - for the music applet
    gmrun - to run programs
    docky - dock launcher at the bottom
    vnstat - for network applet statistics
    xdotool - to get current mouse position
    tint2 - to get windowlist on statusbar
** [2017-02-22 Wed 01:32] [[https://github.com/theanalyst/ix.el][theanalyst/ix.el: An emacs client to http://ix.io pastebin]]
ix.el is available as a package via MELPA or Marmalade. If MELPA/Marmalade is already added to your package archives install the package ix.el from there. Otherwise do this in a *scratch* buffer:
** [2017-02-22 Wed 06:25] [[https://github.com/ankurdave/color-identifiers-mode][ankurdave/color-identifiers-mode: Emacs minor mode to highlight each source code identifier uniquely based on its name]]
#+BEGIN_QUOTE
Color Identifiers is a minor mode for Emacs that highlights each source code identifier uniquely based on its name. It is inspired by a post by Evan Brooks.

Currently it supports Scala (scala-mode2), JavaScript (js-mode and js2-mode), Ruby, Python, Emacs Lisp, Clojure, C, C++, and Java. You can add support for your favorite mode by modifying color-identifiers:modes-alist and optionally calling color-identifiers:set-declaration-scan-fn.


#+END_QUOTE
** [2017-02-22 Wed 06:31] [[https://www.commandlinefu.com/commands/browse][All commands | commandlinefu.com]]
Delete that bloated snippets file you've been using and share your personal repository with the world. That way others can gain from your CLI wisdom and you from theirs too. All commands can be commented on, discussed and voted up or down.
** [2017-02-22 Wed 06:32] [[https://github.com/ncrocfer/clf][ncrocfer/clf: Command line tool to search and view snippets in the terminal]]
Commandlinefu.com is the place to record awesome command-line snippets. This tool allows you to search and view the results into your terminal.
** [2017-02-22 Wed 09:51] [[https://www.youtube.com/user/koenighaunstetten/about][Rainer König - YouTube]]
#+BEGIN_QUOTE
This is the channel of Rainer König, Augsburg, Germany. 

Some family videos, some recordings of my music experiments and some screencast tutorials.

#+END_QUOTE
** [2017-02-22 Wed 11:20] [[https://github.com/naelstrof/maim][naelstrof/maim: maim (make image) takes screenshots of your desktop. It has options to take only a region, and relies on slop to query for regions. maim is supposed to be an improved scrot.]]
maim (Make Image) is a utility that takes screenshots of your desktop using imlib2. It's meant to overcome shortcomings of scrot and performs better in several ways.
** [2017-02-22 Wed 12:06] [[https://github.com/muennich/physlock][muennich/physlock: Lightweight linux console locking tool]]
Control physical access to a linux computer by locking all of its virtual terminals / consoles.

physlock is an alternative to vlock, it is equivalent to `vlock -an'. It is written because vlock blocks some linux kernel mechanisms like hibernate and suspend and can therefore only be used with some limitations. physlock is designed to be more lightweight, it does not have a plugin interface and it is not started using a shell script wrapper.

physlock tries to detect the user logged in on the active console by first searching the utmp file for an entry whose ut_line field equals the device name of the active console, e.g. "tty1". If no such entry is found, then physlock falls back to the owner of the device file of the active console. Some graphical login managers do neither write an appropriate utmp entry nor set the owner of the device file. You have to manually set up sessreg(1) in order to use physlock with such a graphical login manager.
** [2017-02-22 Wed 12:20] [[https://blog.san-ss.com.ar/2011/03/using-gnome-keyring-in-xmonad][SanSS's Blog: Using gnome keyring in xmonad]]
I use SSH a lot and I also use Ubuntu’s cloud service(UbuntuOne). I use public key logins in most of the hosts I SSH into, so in order not to unlock my key each time I wanted to SSH or SCP to another host I used the GNOME keyring to store the unlocked key. And UbuntuOne uses the keyring to store the password to use to login to the service.
** [2017-02-25 Sat 09:03] [[https://github.com/k4m4/terminals-are-sexy][k4m4/terminals-are-sexy: 💥 A curated list of Terminal frameworks, plugins & resources for CLI lovers.]]


    A curated list of Terminal frameworks, plugins & resources for CLI lovers.

Check out my blog and follow me on Twitter.
** [2017-02-25 Sat 09:04] [[https://github.com/k4m4/movies-for-hackers][k4m4/movies-for-hackers: 🎬 A curated list of movies every hacker & cyberpunk must watch.]]
WarGames: The Dead Code         Thriller/Drama  2008    4.5/10
WarGames        Thriller/Drama  1983    7.1/10
Hackers         Crime/Drama     1995    6.2/10
Antitrust       Thriller/Drama  2001    6.1/10
Reboot  Thriller/Drama  2012    4.1/10
Takedown        Thriller/Drama  2000    6.3/10
23      Thriller/Drama  1998    7.3/10
** [2017-02-25 Sat 09:04] [[https://github.com/kamranahmedse/design-patterns-for-humans][kamranahmedse/design-patterns-for-humans: Design Patterns for Humans™ - An ultra-simplified explanation]]
Design patterns are solutions to recurring problems; guidelines on how to tackle certain problems. They are not classes, packages or libraries that you can plug into your application and wait for the magic to happen. These are, rather, guidelines on how to tackle certain problems in certain situations.
** [2017-02-25 Sat 09:04] [[https://github.com/jaebradley/uber-cli][jaebradley/uber-cli: Uber, at your fingertips]]
Clearly, I'm a lazy person (just look at what this tool does - it helps me figure out if I should order a car to pick me up and drive me to where I want to go).
** [2017-02-25 Sat 09:05] [[https://github.com/freeCodeCamp/freeCodeCamp][freeCodeCamp/freeCodeCamp: The https://freeCodeCamp.com open source codebase and curriculum. Learn to code and help nonprofits.]]
freeCodeCamp is a friendly open source community where you learn to code and help nonprofits.

We help our campers build job-worthy portfolios of real apps used by real people, while helping nonprofits.

You start by working through our self-paced, browser-based full stack JavaScript curriculum.
** [2017-02-25 Sat 09:05] [[https://github.com/carpedm20/awesome-hacking][carpedm20/awesome-hacking: A curated list of awesome Hacking tutorials, tools and resources]]
A curated list of awesome Hacking. Inspired by awesome-machine-learning

If you want to contribute to this list (please do), send me a pull request or contact me @carpedm20

For a list of free hacking books available for download, go here
** [2017-02-25 Sat 09:08] [[https://github.com/duckduckgo/zeroclickinfo-goodies][duckduckgo/zeroclickinfo-goodies: DuckDuckGo Instant Answers based on Perl & JavaScript]]
We want every programming search to have great results, providing the information you need instantly. The Programming Mission empowers the community to create Instant Answers for reference, libraries, help, and tools.
** [2017-02-25 Sat 09:10] [[https://github.com/perl-doc-cats/perlfaq][perl-doc-cats/perlfaq: frequently asked questions about Perl]]
This repository contains the sources of the perlfaq as maintained by perl-doc-cats on GitHub. For more information, see:

    http://perldoc.perl.org/perlfaq.html
    https://github.com/perl-doc-cats/perlfaq
** [2017-02-25 Sat 09:11] [[https://github.com/duckduckgo/duckduckgo][duckduckgo/duckduckgo: DuckDuckGo Instant Answer Infrastructure]]
This repository contains the core code responsible for triggering and handling the DuckDuckHack Instant Answers. It is the base of the DuckDuckHack Instant Answer infrastructure.
** [2017-02-25 Sat 09:12] [[https://github.com/petdance/ack2][petdance/ack2: ack 2.0 is a greplike tool optimized for programmers searching large heterogeneous trees of source code.]]
ack is a code-searching tool, similar to grep but optimized for programmers searching large trees of source code. It runs in pure Perl, is highly portable, and runs on any platform that runs Perl.
** [2017-02-25 Sat 09:12] [[https://github.com/BurntSushi/ripgrep][BurntSushi/ripgrep: ripgrep combines the usability of The Silver Searcher with the raw speed of grep.]]
ripgrep is a line oriented search tool that combines the usability of The Silver Searcher (similar to ack) with the raw speed of GNU grep. ripgrep works by recursively searching your current directory for a regex pattern. ripgrep has first class support on Windows, Mac and Linux, with binary downloads available for every release.
** [2017-02-25 Sat 10:05] [[https://github.com/rgleichman/glance][rgleichman/glance: A visual Haskell]]
Glance is a visual syntax for the programming language Haskell. The goal of this project is to increase programmer happiness and productivity by allowing programmers to create and understand programs in new and different ways. Currently, the Glance executable produces a visual representation of your code in the form of an SVG image when given a textual Haskell source file. In the future, I hope to create a visual editor for Haskell. Please scroll down to see some example images.
** [2017-02-25 Sat 10:05] [[https://github.com/koalaman/shellcheck][koalaman/shellcheck: ShellCheck, a static analysis tool for shell scripts]]
The goals of ShellCheck are

    To point out and clarify typical beginner's syntax issues that cause a shell to give cryptic error messages.

    To point out and clarify typical intermediate level semantic problems that cause a shell to behave strangely and counter-intuitively.

    To point out subtle caveats, corner cases and pitfalls that may cause an advanced user's otherwise working script to fail under future circumstances.
** [2017-02-25 Sat 10:05] [[https://github.com/facebook/Haxl][facebook/Haxl: A Haskell library that simplifies access to remote data, such as databases or web-based services.]]
Haxl is a Haskell library that simplifies access to remote data, such as databases or web-based services. Haxl can automatically
** [2017-02-25 Sat 10:06] [[https://github.com/caiorss/Functional-Programming][caiorss/Functional-Programming: Functional Programming concepts, examples and patterns illustrated in Haskell, Ocaml and Python]]
The purpose of this tutorial is to illustrate functional programming concepts in many languages by providing reusable and useful snippets of code, examples, case studies and applications.
** [2017-02-25 Sat 10:07] [[https://github.com/gibiansky/IHaskell][gibiansky/IHaskell: A Haskell kernel for IPython.]]
IHaskell is a kernel for the Jupyter project, which allows you to use Haskell inside Jupyter frontends (including the console and notebook).
** [2017-02-25 Sat 10:07] [[https://github.com/joeyh/github-backup][joeyh/github-backup: backs up everything github knows about a repository, to the repository]]
github-backup is a simple tool you run in a git repository you cloned from GitHub. It backs up everything GitHub publishes about the repository, including branches, tags, other forks, issues, comments, wikis, milestones, pull requests, watchers, and stars.
** [2017-02-25 Sat 10:08] [[https://github.com/jgm/gitit][jgm/gitit: A wiki using HAppS, pandoc, and git]]
Gitit is a wiki program written in Haskell. It uses Happstack for the web server and pandoc for markup processing. Pages and uploaded files are stored in a git, darcs, or mercurial repository and may be modified either by using the VCS's command-line tools or through the wiki's web interface. By default, pandoc's extended version of markdown is used as a markup language, but reStructuredText, LaTeX, HTML, DocBook, or Emacs Org-mode markup can also be used. Pages can be exported in a number of different formats, including LaTeX, RTF, OpenOffice ODT, and MediaWiki markup. Gitit can be configured to display TeX math (using texmath) and highlighted source code (using highlighting-kate).
** [2017-02-25 Sat 10:10] [[https://github.com/3b1b/manim][3b1b/manim: Animation engine for explanatory math videos]]
Animation engine for explanatory math videos

For those who want to play around with this tool, I should be upfront that I've mostly had my own use cases (i.e. 3b1b videos) in mind while building it, and it might not be the most friendly thing to get up and running. In particular, I have not done a great job tracking requirements, and documentation, to put it euphamistically, almost exclusively takes the form of naming conventions.

For 9/10 math animation needs, you'd probably be better off using a more well-maintained tool, like mathplotlib or mathematica. I happen to think the program "Grapher" built into osx is really great, and surprisingly versatile for many needs. My own reasons for building this tool and using it for videos are twofold, and I'm not sure how well they apply to other people's use cases.
** [2017-02-25 Sat 10:10] [[https://github.com/3b1b/manim][3b1b/manim: Animation engine for explanatory math videos]]
Animation engine for explanatory math videos

For those who want to play around with this tool, I should be upfront that I've mostly had my own use cases (i.e. 3b1b videos) in mind while building it, and it might not be the most friendly thing to get up and running. In particular, I have not done a great job tracking requirements, and documentation, to put it euphamistically, almost exclusively takes the form of naming conventions.

For 9/10 math animation needs, you'd probably be better off using a more well-maintained tool, like mathplotlib or mathematica. I happen to think the program "Grapher" built into osx is really great, and surprisingly versatile for many needs. My own reasons for building this tool and using it for videos are twofold, and I'm not sure how well they apply to other people's use cases.
** [2017-02-25 Sat 13:05] [[https://github.com/LightTable/LightTable][LightTable/LightTable: The Light Table IDE]]
Light Table is a next generation code editor that connects you to your creation with instant feedback. Light Table is very customizable and can display anything a Chromium browser can.
** [2017-02-25 Sat 13:14] [[http://mads-hartmann.com/2016/07/03/exporting-org-from-make.html][Exporting org from Make]]
 Recently I've been quite obsessed with Make. I think it might be the perfect tool to deal with complex software projects that consist of many different systems that are build using various languages (my team at issuu uses it to the build, test, & deploy our frontend, backend and various internal tools). However, I'll save that rant for another blog post but given my fascination with Make I recently set out to write a Makefile for this blog.
** Note read a book PAM Mastery by Michael W Lucas
 <2016-12-13 Tue 01:46>
** Note Checkout Unmark do something with your bookmarks 
 <2016-12-13 Tue 03:56>
** Note karboon                                              :drawing:vector: 
 <2016-12-13 Tue 04:08>
** Note Kodi announce official plex addon         :kodi:plex:addons:official: 
 <2016-12-13 Tue 04:42>
** Note linux enter group without logout ~newgrp~  :linux:group:enter:logout: 
 <2016-12-13 Tue 08:18>
** Note Find and Install missing build dependencies as found in debian/control :debian:develop:packaging:source:building: 
 <2016-12-13 Tue 12:55>
#+BEGIN_SRC bash
sudo mk-build-deps --install --remove
#+END_SRC
** Note Change token gitsome and ssh key       :security:token:github:update: 
 <2016-12-13 Tue 14:28>
** Note На сайте и на 2 этаде у диспетчерской в конце декабря появится наше расписание занятий :university:shedule: 
 <2016-12-30 Fri 20:57>
** Note use maybe                  :python:utilities:file:try:execute:github: 
 <2016-12-13 Tue 23:02>
[[https://github.com/p-e-w/maybe][p-e-w/maybe: :rabbit2: See what a program does before deciding whether you really want it to happen.]]
#+BEGIN_QUOTE
See what a program does before deciding whether you really want it to happen.
#+END_QUOTE
** [[https://github.com/etsy/logster][logster]] parse log files                 :python:system:log:metrics:parser: 
 <2016-12-14 Wed 00:51>
  Parse log files, generate metrics for Graphite and Ganglia
** [[https://github.com/micahflee/onionshare/blob/master/README.md][onionshare/README.md at master · micahflee/onionshare]] :onion:python:share:files:tor:github: 
 <2016-12-14 Wed 00:53>
 OnionShare lets you securely and anonymously share files of any size. It works by starting a web server, making it accessible as a Tor onion service, and generating an unguessable URL to access and download the files. It doesn't require setting up a server on the internet somewhere or using a third party filesharing service. You host the file on your own computer and use a Tor onion service to make it temporarily accessible over the internet. The other user just needs to use Tor Browser to download the file from you.

 Features include:

     A user-friendly drag-and-drop graphical user interface that works in Windows, Mac OS X, and Linux
     Ability to share multiple files and folders at once
     Support for multiple people downloading files at once
     Automatically copies the unguessable URL to your clipboard
     Shows you the progress of file transfers
     When file is done transferring, automatically closes OnionShare to reduce the attack surface
     Localized into several languages, and supports international unicode filenames

 If you're interested in exactly what OnionShare does and does not protect against, read the Security Design Document.
** [[https://github.com/maebert/jrnl#jrnl----][maebert/jrnl: A simple command line journal application that stores your journal in a plain text file.]] :python:journal:github:top: 
 <2016-12-14 Wed 00:56>
 jrnl Build Status Downloads Version

 For news on updates or to get help, read the docs, follow @maebert or submit an issue on Github.

 jrnl is a simple journal application for your command line. Journals are stored as human readable plain text files - you can put them into a Dropbox folder for instant syncing and you can be assured that your journal will still be readable in 2050, when all your fancy iPad journal applications will long be forgotten.

 jrnl also plays nice with the fabulous DayOne and can read and write directly from and to DayOne Journals.

 Optionally, your journal can be encrypted using the 256-bit AES.
 Why keep a journal?

 Journals aren't only for 13-year old girls and people who have too much time on their summer vacation. A journal helps you to keep track of the things you get done and how you did them. Your imagination may be limitless, but your memory isn't. For personal use, make it a good habit to write at least 20 words a day. Just to reflect what made this day special, why you haven't wasted it. For professional use, consider a text-based journal to be the perfect complement to your GTD todo list - a documentation of what and how you've done it.
** [[https://github.com/PressLabs/gitfs][PressLabs/gitfs: Version controlled file system]] :python:git:filesystem:github:top: 
 <2016-12-14 Wed 00:59>
 gitfs Build Status Coverage Status
 Welcome to GitFS

 gitfs is a FUSE file system that fully integrates with git. You can mount a remote repository's branch locally, and any subsequent changes made to the files will be automatically committed to the remote.
 What's its purpose?

 gitfs was designed to bring the full powers of git to everyone, no matter how little they know about versioning. A user can mount any repository and all the his changes will be automatically converted into commits. gitfs will also expose the history of the branch you're currently working on by simulating snapshots of every commit.

 gitfs is useful in places where you want to keep track of all your files, but at the same time you don't have the possibility of organizing everything into commits yourself. A FUSE filesystem for git repositories, with local cache
 Features

     Automatically commits changes: create, delete, update files and their metadata
     Browse through working index and commit history
     Merges with upstream by automatically accepting local changes
     Caching commits reduces the memory footprint and speeds up navigation
     Reduces the number of pushes by batching commits
** [[https://github.com/apenwarr/sshuttle][apenwarr/sshuttle: Transparent proxy server that works as a poor man's VPN. Forwards over ssh. Doesn't require admin. Works with Linux and MacOS. Supports DNS tunneling.]] :python:github:top:ssh:vpn:proxy:easy: 
 <2016-12-14 Wed 06:49>
  Transparent proxy server that works as a poor man's VPN. Forwards over ssh. Doesn't require admin. Works with Linux and MacOS. Supports DNS tunneling.
** [[https://github.com/jkbrzt/httpie][jkbrzt/httpie: Modern command line HTTP client — user-friendly curl alternative with intuitive UI, JSON support, syntax highlighting, wget-like downloads, extensions, etc. Follow https://twitter.com/CLIHTTP for tips and updates.]] :python:github:top:http:client: 
 <2016-12-14 Wed 06:50>
 HTTPie: a CLI, cURL-like tool for humans

 HTTPie (pronounced aitch-tee-tee-pie) is a command line HTTP client. Its goal is to make CLI interaction with web services as human-friendly as possible. It provides a simple http command that allows for sending arbitrary HTTP requests using a simple and natural syntax, and displays colorized output. HTTPie can be used for testing, debugging, and generally interacting with HTTP servers.
** [[https://github.com/kennethreitz/requests][kennethreitz/requests: Python HTTP Requests for Humans™]] :python:github:top:http:request:human:easy: 
 <2016-12-14 Wed 06:51>
 Requests is the only Non-GMO HTTP library for Python, safe for human consumption.

 Warning: Recreational use of other HTTP libraries may result in dangerous side-effects, including: security vulnerabilities, verbose code, reinventing the wheel, constantly reading documentation, depression, headaches, or even death.
** [[https://github.com/donnemartin/data-science-ipython-notebooks][donnemartin/data-science-ipython-notebooks: Continually updated data science Python notebooks: Deep learning (TensorFlow, Theano, Caffe), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.]] :python:github:top:data:science: 
 <2016-12-14 Wed 06:51>
  Continually updated data science Python notebooks: Deep learning (TensorFlow, Theano, Caffe), scikit-learn, Kaggle, big data (Spark, Hadoop MapReduce, HDFS), matplotlib, pandas, NumPy, SciPy, Python essentials, AWS, and various command lines.
** [[https://github.com/nvbn/thefuck][nvbn/thefuck: Magnificent app which corrects your previous console command.]] :python:github:top:shell:completion:fix:correct:spell: 
 <2016-12-14 Wed 06:52>
 Magnificent app which corrects your previous console command, inspired by a @liamosaur tweet.
** [[https://github.com/faif/python-patterns][faif/python-patterns: A collection of design patterns/idioms in Python]] :python:github:top:patterns:study:programming: 
 <2016-12-14 Wed 06:55>
 python-patterns

 A collection of design patterns and idioms in Python.

 When an implementation is added or modified, be sure to update this file and rerun append_output.sh (eg. ./append_output.sh borg.py) to keep the output comments at the bottom up to date.
** [[https://github.com/fchollet/keras][fchollet/keras: Deep Learning library for Python. Convnets, recurrent neural networks, and more. Runs on Theano or TensorFlow.]] :python:github:top:deep:learning: 
 <2016-12-14 Wed 06:56>
 You have just found Keras.

 Keras is a high-level neural networks library, written in Python and capable of running on top of either TensorFlow or Theano. It was developed with a focus on enabling fast experimentation. Being able to go from idea to result with the least possible delay is key to doing good research.

 Use Keras if you need a deep learning library that:

     Allows for easy and fast prototyping (through total modularity, minimalism, and extensibility).
     Supports both convolutional networks and recurrent networks, as well as combinations of the two.
     Supports arbitrary connectivity schemes (including multi-input and multi-output training).
     Runs seamlessly on CPU and GPU.

 Read the documentation at Keras.io.

 Keras is compatible with: Python 2.7-3.5.
** [[https://github.com/jonathanslenders/python-prompt-toolkit][jonathanslenders/python-prompt-toolkit: Library for building powerful interactive command lines in Python]] :python:github:top:commandline:cli:build:programming: 
 <2016-12-14 Wed 06:59>

 prompt_toolkit is a library for building powerful interactive command lines and terminal applications in Python.

 Read the documentation on readthedocs.
** [[https://github.com/binux/pyspider][binux/pyspider: A Powerful Spider(Web Crawler) System in Python.]] :python:github:top:spider:web: 
 <2016-12-14 Wed 07:00>

 A Powerful Spider(Web Crawler) System in Python. TRY IT NOW!

     Write script in Python
     Powerful WebUI with script editor, task monitor, project manager and result viewer
     MySQL, MongoDB, Redis, SQLite, Elasticsearch; PostgreSQL with SQLAlchemy as database backend
     RabbitMQ, Beanstalk, Redis and Kombu as message queue
     Task priority, retry, periodical, recrawl by age, etc...
     Distributed architecture, Crawl Javascript pages, Python 2&3, etc...

 Tutorial: http://docs.pyspider.org/en/latest/tutorial/
 Documentation: http://docs.pyspider.org/
 Release notes: https://github.com/binux/pyspider/releases
** [[https://github.com/soimort/you-get][soimort/you-get: Dumb downloader that scrapes the web]] :python:github:top:downloader:scrape:web:youtube: 
 <2016-12-14 Wed 07:17>

 You-Get is a tiny command-line utility to download media contents (videos, audios, images) from the Web, in case there is no other handy way to do it.

 Here's how you use you-get to download a video from this web page:

 $ you-get http://www.fsf.org/blogs/rms/20140407-geneva-tedx-talk-free-software-free-society
 Site:       fsf.org
 Title:      TEDxGE2014_Stallman05_LQ
 Type:       WebM video (video/webm)
 Size:       27.12 MiB (28435804 Bytes)

 Downloading TEDxGE2014_Stallman05_LQ.webm ...
 100.0% ( 27.1/27.1 MB) ├████████████████████████████████████████┤[0/0]   12 MB/s

 And here's why you might want to use it:

     You enjoyed something on the Internet, and just want to download them for your own pleasure.
     You watch your favorite videos online from your computer, but you are prohibited from saving them. You feel that you have no control over your own computer. (And it's not how an open Web is supposed to work.)
     You want to get rid of any closed-source technology or proprietary JavaScript code, and disallow things like Flash running on your computer.
     You are an adherent of hacker culture and free software.

 What you-get can do for you:

     Download videos / audios from popular websites such as YouTube, Youku, Niconico, and a bunch more. (See the full list of supported sites)
     Stream an online video in your media player. No web browser, no more ads.
     Download images (of interest) by scraping a web page.
     Download arbitrary non-HTML contents, i.e., binary files.

 Interested? Install it now and get started by examples.

 Are you a Python programmer? Then check out the source and fork it!
** [[https://github.com/miguelgrinberg/flasky][miguelgrinberg/flasky: Companion code to my O'Reilly book "Flask Web Development".]] :python:github:top:flasky:book: 
 <2016-12-14 Wed 07:18>

 Flasky

 This repository contains the source code examples for my O'Reilly book Flask Web Development.

 The commits and tags in this repository were carefully created to match the sequence in which concepts are presented in the book. Please read the section titled "How to Work with the Example Code" in the book's preface for instructions.
** [[https://github.com/alexjc/neural-doodle][alexjc/neural-doodle: Turn your two-bit doodles into fine artworks with deep neural networks, generate seamless textures from photos, transfer style from one image to another, perform example-based upscaling, but wait... there's more! (An implementation of Semantic Style Transfer.)]] :python:github:top:neural:image:drawing:ia: 
 <2016-12-14 Wed 07:19>

 Use a deep neural network to borrow the skills of real artists and turn your two-bit doodles into masterpieces! This project is an implementation of Semantic Style Transfer (Champandard, 2016), based on the Neural Patches algorithm (Li, 2016). Read more about the motivation in this in-depth article and watch this workflow video for inspiration.

 The doodle.py script generates a new image by using one, two, three or four images as inputs depending what you're trying to do: the original style and its annotation, and a target content image (optional) with its annotation (a.k.a. your doodle). The algorithm extracts annotated patches from the style image, and incrementally transfers them over to the target image based on how closely they match.

 NOTE: Making a #NeuralDoodle is a skill. The parameters in the script were adjusted to work well by default and with the examples below. For new images, you may need to adjust values and modify on your input data too. It takes practice, but you can reach almost photo-realistic results if you iterate! (Ask for advice here or see examples.)
** [[https://github.com/toastdriven/restless][toastdriven/restless: A lightweight REST miniframework for Python.]] :python:github:top:rest:api: 
 <2016-12-14 Wed 07:20>

 A lightweight REST miniframework for Python.

 Documentation is at http://restless.readthedocs.org/.

 Works great with Django, Flask, Pyramid, Tornado & Itty, but should be useful for many other Python web frameworks. Based on the lessons learned from Tastypie & other REST libraries.
 Features

     Small, fast codebase
     JSON output by default, but overridable
     RESTful
     Python 3.2+ (with shims to make broke-ass Python 2.6+ work)
     Flexible

 Anti-Features

 (Things that will never be added...)

     Automatic ORM integration
     Authorization (per-object or not)
     Extensive filtering options
     XML output (though you can implement your own)
     Metaclasses
     Mixins
     HATEOAS

 Why?

 Quite simply, I care about creating flexible & RESTFul APIs. In building Tastypie, I tried to create something extremely complete & comprehensive. The result was writing a lot of hook methods (for easy extensibility) & a lot of (perceived) bloat, as I tried to accommodate for everything people might want/need in a flexible/overridable manner.

 But in reality, all I really ever personally want are the RESTful verbs, JSON serialization & the ability of override behavior.

 This one is written for me, but maybe it's useful to you.
** [[https://github.com/coleifer/peewee][coleifer/peewee: a small, expressive orm -- supports postgresql, mysql and sqlite]] :python:github:top:database:mysql:sqlite:postgresql: 
 <2016-12-14 Wed 07:20>

 Peewee is a simple and small ORM. It has few (but expressive) concepts, making it easy to learn and intuitive to use.

     A small, expressive ORM
     Written in python with support for versions 2.6+ and 3.2+.
     built-in support for sqlite, mysql and postgresql
     tons of extensions available in the playhouse
         Postgresql HStore, JSON, arrays and more
         SQLite full-text search, user-defined functions, virtual tables and more
         Schema migrations and model code generator
         Connection pool
         Encryption
         and much, much more...
** [[https://github.com/nvie/rq][nvie/rq: Simple job queues for Python]] :python:github:top:job:processing:multitask: 
 <2016-12-14 Wed 07:21>

 RQ (Redis Queue) is a simple Python library for queueing jobs and processing them in the background with workers. It is backed by Redis and it is designed to have a low barrier to entry. It should be integrated in your web stack easily.

 RQ requires Redis >= 2.7.0.
** [[https://github.com/nicolargo/glances][nicolargo/glances: Glances an Eye on your system. A top/htop alternative.]] :python:github:top:system:info: 
 <2016-12-14 Wed 07:22>

 Follow Glances on Twitter: @nicolargo or @glances_system

 Glances is a cross-platform curses-based system monitoring tool written in Python.
** [[https://github.com/eliangcs/http-prompt][eliangcs/http-prompt: HTTPie + prompt_toolkit = an interactive command-line HTTP client featuring autocomplete and syntax highlighting]] :python:github:top:http:prompt:cli: 
 <2016-12-14 Wed 07:22>

 HTTP Prompt is an interactive command-line HTTP client featuring autocomplete and syntax highlighting, built on HTTPie and prompt_toolkit.
** [[https://github.com/a1studmuffin/SpaceshipGenerator][a1studmuffin/SpaceshipGenerator: A Blender script to procedurally generate 3D spaceships]] :python:github:top:blender:spaceship:script: 
 <2016-12-14 Wed 07:24>


     Start with a box.
     Build the hull: Extrude the front/rear faces several times, adding random translation/scaling/rotation along the way.
     Add asymmetry to the hull: Pick random faces and extrude them out in a similar manner, reducing in scale each time.
     Add detail to the hull: Categorize each face by its orientation and generate details on it such as engines, antenna, weapon turrets, lights etc.
     Sometimes apply horizontal symmetry.
     Add a Bevel modifier to angularize the shape a bit.
     Apply materials to the final result.
     Take over the universe with your new infinite fleet of spaceships.
** [[https://github.com/StijnMiroslav/top-starred-devs-and-repos-to-follow][StijnMiroslav/top-starred-devs-and-repos-to-follow: The Top-Starred Python GitHub Devs, Orgs, and Repos to Follow (All-Time and Trending)]] :python:github:top:starred: 
 <2016-12-14 Wed 07:24>

 top-starred-devs-and-repos-to-follow

     The Top-Starred Python GitHub Devs, Orgs, and Repos to Follow (All-Time and Trending)

 Why?

 Why follow the top-starred Python GitHub devs?

     Following influencers is usually a good practice. It has helped me in multiple ways:

         Whenever I run out of inspiration, I look at these influencers and see what they have achieved. This brings back the energy and I am back on my projects

         You can follow these influencers to see which events are they attending, what are they reading and what are they working on. This can quickly become a wealth of knowledge in itself.

         To some extent, it also provides a human touch to these influencers. By just looking at their profiles, they might come across as some one out of the world. But, when you start following them regularly, you tend to relate yourself with the influencers.

     Inspired by the following Reddit post.

 After reading through the post, I was curious to see a similar list for Python GitHub devs, orgs, and repos.
 'Top-Starred'?

 There's no definitive way to determine 'top' devs, orgs, and repos by language. Every metric has its flaws. The lists below look at total number of stars in Python repositories, which seems to be a decent metric that is readily available/easy to mine.

 Dev stats are for individual contributors. Org stats are also provided: viewing the org link shows the devs who are part of the org. Not sure how you'd measure stats for each dev part of an org, or similarly, devs contributing to other projects.

 GitHub is not perfect in classifying repos as Python. The lists below try to manually filter out mis-classified repos.

 I found it interesting to track 'all time' and 'trending' stats, so lists for each are included. Sources are provided after each list.
** [[https://github.com/reinderien/mimic][reinderien/mimic: {ab}using Unicode to create tragedy]] :python:github:top:mimic:problems:generate: 
 <2016-12-14 Wed 07:26>

 mimic

 [ab]using Unicode to create tragedy
 Introduction

 monster

 mimic provokes:

     fun
     frustration
     curiosity
     murderous rage

 It's inspired by this terrible idea floating around:

     MT: Replace a semicolon (;) with a greek question mark (;) in your friend's C# code and watch them pull their hair out over the syntax error
     — Peter Ritchie (@peterritchie) November 16, 2014

 There are many more characters in the Unicode character set that look, to some extent or another, like others – homoglyphs. Mimic substitutes common ASCII characters for obscure homoglyphs.

 Fun games to play with mimic:

     Pipe some source code through and see if you can find all of the problems
     Pipe someone else's source code through without telling them
     Be fired, and then killed
** [[https://github.com/pavelgonchar/colornet][pavelgonchar/colornet: Neural Network to colorize grayscale images]] :python:github:top:neuron:colorize:images: 
 <2016-12-14 Wed 07:26>

 colornet

 Neural Network to colorize grayscale images
** [[https://github.com/cyrus-and/gdb-dashboard][cyrus-and/gdb-dashboard: Modular visual interface for GDB in Python]] :python:github:top:gdb:debug:c: 
 <2016-12-14 Wed 07:32>

 Modular visual interface for GDB in Python.

 This comes as a standalone single-file .gdbinit which, among the other things, enables a configurable dashboard showing the most relevant information during the program execution. Its main goal is to reduce the number of GDB commands issued to inspect the current program status allowing the programmer to focus on the control flow instead.
** [[https://github.com/jayfk/statuspage][jayfk/statuspage: A statuspage generator that lets you host your statuspage for free on Github.]] :python:github:top:status:page: 
 <2016-12-14 Wed 07:34>

 A statuspage generator that lets you host your statuspage for free on GitHub. Uses issues to display incidents and labels for severity.
** [[https://github.com/nlintz/TensorFlow-Tutorials][nlintz/TensorFlow-Tutorials: Simple tutorials using Google's TensorFlow Framework]] :python:github:top:google:learn:study:deep: 
 <2016-12-14 Wed 07:35>

 Introduction to deep learning based on Google's TensorFlow framework. These tutorials are direct ports of Newmu's Theano Tutorials.
** [[https://github.com/ujjwalkarn/DataSciencePython][ujjwalkarn/DataSciencePython: common data analysis and machine learning tasks using python]] :python:github:top:collection:data:science:analysis: 
 <2016-12-14 Wed 07:35>

 Python Data Science Tutorials

     This repo contains a curated list of Python tutorials for Data Science, NLP and Machine Learning.

     Curated list of R tutorials for Data Science, NLP and Machine Learning.

     Comprehensive topic-wise list of Machine Learning and Deep Learning tutorials, codes, articles and other resources.
** [[https://github.com/scrapy/scrapy][scrapy/scrapy: Scrapy, a fast high-level web crawling & scraping framework for Python.]] :python:github:top:scrapy:web:spider:framework: 
 <2016-12-14 Wed 07:36>

 Scrapy is a fast high-level web crawling and web scraping framework, used to crawl websites and extract structured data from their pages. It can be used for a wide range of purposes, from data mining to monitoring and automated testing.

 For more information including a list of features check the Scrapy homepage at: http://scrapy.org
** [[https://github.com/certbot/certbot][certbot/certbot: Certbot, previously the Let's Encrypt Client, is EFF's tool to obtain certs from Let's Encrypt, and (optionally) auto-enable HTTPS on your server. It can also act as a client for any other CA that uses the ACME protocol.]] :python:github:top:ssl:encryption:web: 
 <2016-12-14 Wed 07:37>

  Certbot, previously the Let's Encrypt Client, is EFF's tool to obtain certs from Let's Encrypt, and (optionally) auto-enable HTTPS on your server. It can also act as a client for any other CA that uses the ACME protocol.
** [[https://github.com/reddit/reddit][reddit/reddit: the code that powers reddit.com]] :python:github:top:reddit:power: 
 <2016-12-14 Wed 07:38>

 Greetings!

 This is the primary codebase that powers reddit.com.

 For notices about major changes and general discussion of reddit development, subscribe to the /r/redditdev and /r/changelog subreddits.

 You can also chat with us via IRC in #reddit-dev on freenode.
** [[https://github.com/pandas-dev/pandas][pandas-dev/pandas: Flexible and powerful data analysis / manipulation library for Python, providing labeled data structures similar to R data.frame objects, statistical functions, and much more]] :python:github:top:data:analysis:library: 
 <2016-12-14 Wed 07:42>

 What is it

 pandas is a Python package providing fast, flexible, and expressive data structures designed to make working with "relational" or "labeled" data both easy and intuitive. It aims to be the fundamental high-level building block for doing practical, real world data analysis in Python. Additionally, it has the broader goal of becoming the most powerful and flexible open source data analysis / manipulation tool available in any language. It is already well on its way toward this goal.
 Main Features

 Here are just a few of the things that pandas does well:

     Easy handling of missing data (represented as NaN) in floating point as well as non-floating point data
     Size mutability: columns can be inserted and deleted from DataFrame and higher dimensional objects
     Automatic and explicit data alignment: objects can be explicitly aligned to a set of labels, or the user can simply ignore the labels and let Series, DataFrame, etc. automatically align the data for you in computations
     Powerful, flexible group by functionality to perform split-apply-combine operations on data sets, for both aggregating and transforming data
     Make it easy to convert ragged, differently-indexed data in other Python and NumPy data structures into DataFrame objects
     Intelligent label-based slicing, fancy indexing, and subsetting of large data sets
     Intuitive merging and joining data sets
     Flexible reshaping and pivoting of data sets
     Hierarchical labeling of axes (possible to have multiple labels per tick)
     Robust IO tools for loading data from flat files (CSV and delimited), Excel files, databases, and saving/loading data from the ultrafast HDF5 format
     Time series-specific functionality: date range generation and frequency conversion, moving window statistics, moving window linear regressions, date shifting and lagging, etc.
** [[https://github.com/scikit-learn/scikit-learn][scikit-learn/scikit-learn: scikit-learn: machine learning in Python]] :python:github:top:machine:learning: 
 <2016-12-14 Wed 07:43>

 scikit-learn is a Python module for machine learning built on top of SciPy and distributed under the 3-Clause BSD license.

 The project was started in 2007 by David Cournapeau as a Google Summer of Code project, and since then many volunteers have contributed. See the AUTHORS.rst file for a complete list of contributors.

 It is currently maintained by a team of volunteers.

 Website: http://scikit-learn.org
** [[https://github.com/airbnb/superset][airbnb/superset: Superset is a data exploration platform designed to be visual, intuitive, and interactive]] :python:github:top:data:exploration:platform:visual: 
 <2016-12-14 Wed 07:45>

 Superset is a data exploration platform designed to be visual, intuitive and interactive.

 [this project used to be named Caravel, and Panoramix in the past]
** [[https://github.com/XX-net/XX-Net][XX-net/XX-Net: a web proxy tool]]      :python:github:top:proxy:google:free: 
 <2016-12-14 Wed 07:46>


     XX-Net is a free desktop application that delivers fast, reliable and secure access to the open Internet for users in censored regions. It uses google app engine (GAE) as a proxy server through the firewall.
** [[https://github.com/cmusatyalab/openface][cmusatyalab/openface: Face recognition with deep neural networks.]] :python:github:top:face:recognition:deep:neural: 
 <2016-12-14 Wed 07:47>

 Free and open source face recognition with deep neural networks.

     Website: http://cmusatyalab.github.io/openface/
     API Documentation
     Join the cmu-openface group or the gitter chat for discussions and installation issues.
     Development discussions and bugs reports are on the issue tracker.

 This research was supported by the National Science Foundation (NSF) under grant number CNS-1518865. Additional support was provided by the Intel Corporation, Google, Vodafone, NVIDIA, and the Conklin Kistler family fund. Any opinions, findings, conclusions or recommendations expressed in this material are those of the authors and should not be attributed to their employers or funding sources.
** [[https://github.com/mailpile/Mailpile][mailpile/Mailpile: A free & open modern, fast email client with user-friendly encryption and privacy features]] :python:github:top:mailLclient:web: 
 <2016-12-14 Wed 07:50>

 Mailpile (https://www.mailpile.is/) is a modern, fast web-mail client with user-friendly encryption and privacy features. The development of Mailpile is funded by a large community of backers and all code related to the project is and will be released under an OSI approved Free Software license.

 Mailpile places great emphasis on providing a clean, elegant user interface and pleasant user experience. In particular, Mailpile aims to make it easy and convenient to receive and send PGP encrypted or signed e-mail.

 Mailpile's primary user interface is web-based, but it also has a basic command-line interface and an API for developers. Using web technology for the interface allows Mailpile to function both as a local desktop application (accessed by visiting localhost in the browser) or a remote web-mail on a personal server or VPS.

 The core of Mailpile is a fast search engine, custom written to deal with large volumes of e-mail on consumer hardware. The search engine allows e-mail to be organized using tags (similar to GMail's labels) and the application can be configured to automatically tag incoming mail either based on static rules or bayesian classifiers.

 Note: We are currently "in beta", which means the app's basic features are (mostly) in place and packages are available for popular operating systems, for people who would like to help test and debug. For more details follow @MailpileTeam on Twitter or read our blog.
** [[https://github.com/mail-in-a-box/mailinabox][mail-in-a-box/mailinabox: Mail-in-a-Box helps individuals take back control of their email by defining a one-click, easy-to-deploy SMTP+everything else server: a mail server in a box.]] :python:github:top:mail:script: 
 <2016-12-14 Wed 07:53>

 Mail-in-a-Box helps individuals take back control of their email by defining a one-click, easy-to-deploy SMTP+everything else server: a mail server in a box.

 Please see https://mailinabox.email for the project's website and setup guide!

 Our goals are to:

     Make deploying a good mail server easy.
     Promote decentralization, innovation, and privacy on the web.
     Have automated, auditable, and idempotent configuration.
     Not make a totally unhackable, NSA-proof server.
     Not make something customizable by power users.

 Additionally, this project has a Code of Conduct, which supersedes the goals above. Please review it when joining our community.
** [[https://github.com/charlierguo/gmail][charlierguo/gmail: A Pythonic interface for Google Mail]] :python:github:top:gmail:interface: 
 <2016-12-14 Wed 07:54>

 GMail for Python

 A Pythonic interface to Google's GMail, with all the tools you'll need. Search, read and send multipart emails, archive, mark as read/unread, delete emails, and manage labels.

 This library is still under development, so please forgive some of the rough edges

 Heavily inspired by Kriss "nu7hatch" Kowalik's GMail for Ruby library
** [[https://github.com/laramies/theHarvester][laramies/theHarvester: E-mail, subdomain and people names harvester]] :python:github:top:analysis:penetration:mail:subdomain:people: 
 <2016-12-14 Wed 07:54>

 What is this?
 -------------

 theHarvester is a tool for gathering e-mail accounts, subdomain names, virtual
 hosts, open ports/ banners, and employee names from different public sources
 (search engines, pgp key servers).

 Is a really simple tool, but very effective for the early stages of a penetration
 test or just to know the visibility of your company in the Internet.

 The sources are:

 Passive:
 --------
 -google: google search engine  - www.google.com

 -googleCSE: google custom search engine

 -google-profiles: google search engine, specific search for Google profiles

 -bing: microsoft search engine  - www.bing.com

 -bingapi: microsoft search engine, through the API (you need to add your Key in
           the discovery/bingsearch.py file)

 -dogpile: Dogpile search engine - www.dogpile.com

 -pgp: pgp key server - mit.edu

 -linkedin: google search engine, specific search for Linkedin users


 -vhost: Bing virtual hosts search

 -twitter: twitter accounts related to an specific domain (uses google search)

 -googleplus: users that works in target company (uses google search)

 -yahoo: Yahoo search engine

 -baidu: Baidu search engine

 -shodan: Shodan Computer search engine, will search for ports and banner of the
          discovered hosts  (http://www.shodanhq.com/)
** [[https://github.com/tomekwojcik/envelopes][tomekwojcik/envelopes: Mailing for human beings]] :python:github:top:mail:human:easy: 
 <2016-12-14 Wed 07:55>

 Envelopes is a wrapper for Python's email and smtplib modules. It aims to make working with outgoing e-mail in Python simple and fun.
** [[https://github.com/EFForg/starttls-everywhere][EFForg/starttls-everywhere: A system for ensuring & authenticating STARTTLS encryption between mail servers]] :python:github:top:mail:ttls:security:ensure: 
 <2016-12-14 Wed 07:56>

 STARTTLS Everywhere
 Example usage

 WARNING: this is a pre-alpha codebase. Do not run it on production mailservers!!!

 If you have a Postfix server you're willing to endanger deliverability on, you can try obtain a certificate with the Let's Encrypt Python Client, note the directory it lives in below /etc/letsencrypt/live and then do:

 git clone https://github.com/EFForg/starttls-everywhere
 cd starttls-everywhere
 # Promise you don't care if deliverability breaks on this mail server
 letsencrypt-postfix/PostfixConfigGenerator.py examples/starttls-everywhere.json /etc/postfix /etc/letsencrypt/live/YOUR.DOMAIN.EXAMPLE.COM

 This will:

     Ensure your mail server initiates STARTTLS encryption
     Install the Let's Encrypt cert in Postfix
     Enforce mandatory TLS to some major email domains
     Enforce minimum TLS versions to some major email domains
** [[https://github.com/eugene-eeo/mailthon][eugene-eeo/mailthon: elegant email sending for Python]] :python:github:top:mail:send:lib: 
 <2016-12-14 Wed 07:57>

 Useful links: Documentation (outdated) | Issue Tracker | PyPI Page

 Mailthon is an MIT licensed email library for Python that aims to be highly extensible and composable. Mailthon is unicode aware and supports internationalised headers and email addresses. Also it aims to be transport agnostic, meaning that SMTP can be swapped out for other transports:
** [[https://github.com/pulb/mailnag][pulb/mailnag: An extensible mail notification daemon]] :python:github:top:mail:notification:gnome:gtk: 
 <2016-12-14 Wed 07:57>

 Mailnag is a daemon program that checks POP3 and IMAP servers for new mail.
 On mail arrival it performs various actions provided by plugins.
 Mailnag comes with a set of desktop-independent default plugins for
 visual/sound notifications, script execution etc. and can be extended
 with additional plugins easily.
** [[https://github.com/git-multimail/git-multimail][git-multimail/git-multimail: Send notification emails for pushes to a git repository (an improved version of post-receive-mail)]] :python:github:top:git:pushes:notification:mail: 
 <2016-12-14 Wed 07:58>

 git-multimail is a tool for sending notification emails on pushes to a Git repository. It includes a Python module called git_multimail.py, which can either be used as a hook script directly or can be imported as a Python module into another script.

 git-multimail is derived from the Git project's old contrib/hooks/post-receive-email, and is mostly compatible with that script. See README.migrate-from-post-receive-email for details about the differences and for how to migrate from post-receive-email to git-multimail.
** [[https://github.com/hmason/introbot][hmason/introbot: A python script to generate the text of intro e-mails.]] :python:github:mail:introductury:intro: 
 <2016-12-14 Wed 08:00>

 Introbot is a quick python script to write an introductory e-mail between n parties.

 To use, edit settings.py and swap in your info.
** [[https://github.com/kdeldycke/maildir-deduplicate][kdeldycke/maildir-deduplicate: :e-mail: CLI to deduplicate mails from maildir folders.]] :python:github:top:mail:deduplication:cli: 
 <2016-12-14 Wed 08:00>

 Command-line tool to deduplicate mails from a set of maildir folders.
** [[https://github.com/schweikert/mailgraph][schweikert/mailgraph: Mail plotting script]] :perl:github:top:mail:plotting:script:graph: 
 <2016-12-14 Wed 08:05>

 mailgraph is a very simple mail statistics RRDtool frontend for Postfix
 that produces daily, weekly, monthly and yearly graphs of received/sent 
 and bounced/rejected mail (SMTP traffic).
** [[https://github.com/Gilwyad/mailnesia.com][Gilwyad/mailnesia.com: Anonymous Email in Seconds]] :perl:github:top:anonymous:mail:com: 
 <2016-12-14 Wed 08:06>

 Mailnesia is a fully featured disposable email provider. Just like a real email service but without any password or the ability to send mail. Features at a glance:

     Automatically visits registration/activation links in emails, completing any registration process instantly
     Alternate mailbox names (aliases) for extra anonymity, use any name you want
     Alternative domain names (all mail is accepted regardless of domain name)
     Displaying HTML emails correctly including attached images, files
     Multiple encodings supported: Chinese, Japanese, Korean, Russian etc
     RSS feed for every mailbox
     New emails appear as they arrive, without needing to refresh the page
     Fast, easy to use interface
     Translated to 10+ languages

 This repository contains the source code of Mailnesia. What it includes:

     The website including everything: images, CSS, JavaScript etc
     The email receiving server
     Additional utilities for maintenance, testing etc
     How to set up the SQL tables

 What is not included:

     Configuration for web server, database server or any other external utility
     Scripts to start and monitor the website/RSS/email server processes
** [[https://www.youtube.com/watch?v=yzIMircGU5I&list=PL5-da3qGB5ICCsgW1MxlZ0Hq8LL5U3u9y][What is pandas? (Introduction to the Q&A series) - YouTube]] :youtube:channel: 
 <2016-12-14 Wed 08:28>


 What is pandas? (Introduction to the Q&A series)
** [[https://www.youtube.com/watch?v=POe1cufDWFs][Data Science with Python Pandas by Athena Kan - YouTube]] :youtube:python:pandas: 
 <2016-12-14 Wed 08:32>

 Harvard Business Review named data scientist "the sexiest job of the 21st century." Python pandas is a commonly-used tool in the industry to easily and efficiently clean, analyze, and visualize data of varying sizes and types. In this seminar, we'll learn how to use pandas to extract meaningful insights and recommendations from real-world datasets.
** [[http://orgmode.org/manual/index.html][The Org Manual]]                             :org:mode:manual:official:long: 
 <2016-12-14 Wed 08:35>

 This manual is a printed edition of the official Org reference documentation from the Org 7.3 distribution.
** [[https://github.com/jlevy/repren][jlevy/repren: Rename anything]] :python:github:top:rename:files:organization: 
 <2016-12-14 Wed 08:44>

 Repren is a simple but flexible, command-line tool for rewriting file contents according to a set of regular expression patterns, and renaming or moving files. Essentially, it is a general-purpose, brute-force text file refactoring tool.

 For example, repren can perform a Java refactor that involves renaming the Java class filename, as well as every occurrence of that class name in code or documentation. Or it can change the naming scheme for files, so every path like foo.1.jpg is renamed foo-1.jpg. Or it can move files by rewriting parent directories.

 It's strives to be more powerful and thoughtful than usual options like perl -pie, rpl, sed, or rename:

     It can do search-and-replace, file renaming, or both.
     It allows file renaming on full paths, including moving files, creating directories, or rewriting directory hierarchies.
     It supports fully expressive regular expressions, with capturing groups and back substitutions.
     It performs simultaneous group renamings, i.e. rename "foo" as "bar", and "bar" as "foo" at once, without requiring a temporary intermediate rename.
     It is careful. It has a nondestructive mode, and prints clear stats on its changes. It leaves backups. File operations are done atomically, so interruptions never leave a previously existing file truncated or partly edited.
     It supports helpful variations like an option to replace on word breaks, so you avoid splitting a word, and "case-preserving" renames that let you find and rename identifiers with case variants (lowerCamel, UpperCamel, lower_underscore, and UPPER_UNDERSCORE) consistently.
     It has this nice documentaion!
** [[https://github.com/wting/autojump][wting/autojump: A cd command that learns - easily navigate directories from the command line]] :python:github:top:cd:naviation:shell: 
 <2016-12-14 Wed 08:45>

 autojump - a faster way to navigate your filesystem
 DESCRIPTION

 autojump is a faster way to navigate your filesystem. It works by maintaining a database of the directories you use the most from the command line.

 Directories must be visited first before they can be jumped to.
** [[https://github.com/docopt/docopt][docopt/docopt: Pythonic command line arguments parser, that will make you smile]] :python:github:top:fun:smile:shell:cli:arguments: 
 <2016-12-14 Wed 08:48>

 Hell no! You know what's awesome? It's when the option parser is generated based on the beautiful help message that you write yourself! This way you don't need to write this stupid repeatable parser-code, and instead can write only the help message--the way you want it.

 docopt helps you create most beautiful command-line interfaces easily:
** [[https://github.com/gleitz/howdoi][gleitz/howdoi: howdoi - instant coding answers via the command line]] :python:github:top:hack:answers:questions:stackoverflowgoogle: 
 <2016-12-14 Wed 08:49>

 Are you a hack programmer? Do you find yourself constantly Googling for how to do basic programing tasks?

 Suppose you want to know how to format a date in bash. Why open your browser and read through blogs (risking major distraction) when you can simply stay in the console and ask howdoi:
** [[https://github.com/sivel/speedtest-cli][sivel/speedtest-cli: Command line interface for testing internet bandwidth using speedtest.net]] :python:github:top:speedtest:internet:cli: 
 <2016-12-14 Wed 08:51>

 Command line interface for testing internet bandwidth using speedtest.net
** [[https://github.com/chriskiehl/Gooey][chriskiehl/Gooey: Turn (almost) any Python command line program into a full GUI application with one line]] :python:github:top:cli:gui:convert:oneline: 
 <2016-12-14 Wed 08:51>

  Turn (almost) any Python command line program into a full GUI application with one line
** [[https://github.com/idank/explainshell][idank/explainshell: match command-line arguments to their help text]] :python:github:top:explain:cli:man:shell: 
 <2016-12-14 Wed 08:52>

 explainshell is a tool (with a web interface) capable of parsing man pages, extracting options and explain a given command-line by matching each argument to the relevant help text in the man page.
 How?

 explainshell is built from the following components:

     man page reader which converts a given man page from raw format to html (manpage.py)
     classifier which goes through every paragraph in the man page and classifies it as contains options or not (algo/classifier.py)
     an options extractor that scans classified paragraphs and looks for options (options.py)
     a storage backend that saves processed man pages to mongodb (store.py)
     a matcher that walks the command's AST (parsed by bashlex) and contextually matches each node to the relevant help text (matcher.py)

 When querying explainshell, it:

     parses the query into an AST
     visits interesting nodes in the AST, such as:
         command nodes - these nodes represent a simple command
         shell related nodes - these nodes represent something the shell interprets such as '|', '&&'
     for every command node we check if we know how to explain the current program, and then go through the rest of the tokens, trying to match each one to the list of known options
     returns a list of matches that are rendered with Flask
** [[https://github.com/chrippa/livestreamer][chrippa/livestreamer: Command-line utility that extracts streams from various services and pipes them into a video player of choice.]] :python:github:top:stream:live:youtube: 
 <2016-12-14 Wed 08:54>

 Livestreamer is a command-line utility that pipes video streams from various services into a video player, such as VLC. The main purpose of Livestreamer is to allow the user to avoid buggy and CPU heavy flash plugins but still be able to enjoy various streamed content. There is also an API available for developers who want access to the video stream data.

     Documentation: http://docs.livestreamer.io/
     Issue tracker: https://github.com/chrippa/livestreamer/issues
     PyPI: https://pypi.python.org/pypi/livestreamer
     Discussions: https://groups.google.com/forum/#!forum/livestreamer
     IRC: #livestreamer @ Freenode
     Free software: Simplified BSD license
** [[https://github.com/chrisallenlane/cheat][chrisallenlane/cheat: cheat allows you to create and view interactive cheatsheets on the command-line. It was designed to help remind *nix system administrators of options for commands that they use frequently, but not frequently enough to remember.]] :python:github:top:cheatsheat: 
 <2016-12-14 Wed 08:55>

 cheat allows you to create and view interactive cheatsheets on the command-line. It was designed to help remind *nix system administrators of options for commands that they use frequently, but not frequently enough to remember.
** [[https://github.com/Russell91/pythonpy][Russell91/pythonpy: the swiss army knife of the command line]] :python:github:top:swiss:knife:cli:shell: 
 <2016-12-14 Wed 09:13>

  the swiss army knife of the command line
** [[https://github.com/maebert/jrnl][maebert/jrnl: A simple command line journal application that stores your journal in a plain text file.]] :python:github:top:journal:cli:text: 
 <2016-12-14 Wed 09:14>

 For news on updates or to get help, read the docs, follow @maebert or submit an issue on Github.

 jrnl is a simple journal application for your command line. Journals are stored as human readable plain text files - you can put them into a Dropbox folder for instant syncing and you can be assured that your journal will still be readable in 2050, when all your fancy iPad journal applications will long be forgotten.

 jrnl also plays nice with the fabulous DayOne and can read and write directly from and to DayOne Journals.

 Optionally, your journal can be encrypted using the 256-bit AES.
 Why keep a journal?

 Journals aren't only for 13-year old girls and people who have too much time on their summer vacation. A journal helps you to keep track of the things you get done and how you did them. Your imagination may be limitless, but your memory isn't. For personal use, make it a good habit to write at least 20 words a day. Just to reflect what made this day special, why you haven't wasted it. For professional use, consider a text-based journal to be the perfect complement to your GTD todo list - a documentation of what and how you've done it.
** [[https://github.com/kennethreitz/clint][kennethreitz/clint: Python Command-line Application Tools]] :python:github:top:develop:cli:library: 
 <2016-12-14 Wed 09:15>

 Clint is awesome. Crazy awesome. It supports colors, but detects if the session is a TTY, so doesn't render the colors if you're piping stuff around. Automagically.

 Awesome nest-able indentation context manager. Example: (with indent(4): puts('indented text')). It supports custom email-style quotes. Of course, it supports color too, if and when needed.

 It has an awesome Column printer with optional auto-expanding columns. It detects how wide your current console is and adjusts accordingly. It wraps your words properly to fit the column size. With or without colors mixed in. All with a single function call.

 The world's easiest to use implicit argument system w/ chaining methods for filtering. Seriously.

 Run the various executables in examples to get a good feel for what Clint offers.

 You'll never want to not use it.
** [[https://github.com/donnemartin/haxor-news][donnemartin/haxor-news: Browse Hacker News like a haxor: A Hacker News command line interface (CLI).]] :python:github:top:cli:hacker:news: 
 <2016-12-14 Wed 09:15>

  Browse Hacker News like a haxor: A Hacker News command line interface (CLI).
** [[https://github.com/sympy/sympy][sympy/sympy: A computer algebra system written in pure Python]] :python:github:top:algebra:math:library: 
 <2016-12-14 Wed 09:19>

  A computer algebra system written in pure Python http://sympy.org/
** [[https://github.com/nylas/sync-engine][nylas/sync-engine: IMAP/SMTP sync system with modern APIs]] :python:github:top:sync:imap:stmp:engine:rest: 
 <2016-12-14 Wed 09:20>

 The Nylas Sync Engine provides a RESTful API on top of a powerful email sync platform, making it easy to build apps on top of email. See the full API documentation for more details.
** [[https://github.com/Supervisor/supervisor][Supervisor/supervisor: Supervisor process control system for UNIX]] :python:github:top:system:conrol:unix: 
 <2016-12-14 Wed 09:20>

 Supervisor is a client/server system that allows its users to control a number of processes on UNIX-like operating systems.
** [[https://github.com/facebookarchive/huxley][facebookarchive/huxley: A testing system for catching visual regressions in Web applications.]] :python:github:top:watch:browser: 
 <2016-12-14 Wed 09:21>

 Watches you browse, takes screenshots, tells you when they change

 Huxley is a test-like system for catching visual regressions in Web applications. It was built by Pete Hunt with input from Maykel Loomans at Instagram.
 Archived Repo

 This is an archived project and is no longer supported or updated by Facebook or Instagram. Please do not file issues or pull-requests against this repo. If you wish to continue to develop this code yourself, we recommend you fork it.
** [[https://github.com/tschellenbach/Stream-Framework][tschellenbach/Stream-Framework: Stream Framework is a Python library, which allows you to build newsfeed and notification systems using Cassandra and/or Redis.]] :python:github:top:stream:framework:android:newsfeed:notification:redis: 
 <2016-12-14 Wed 09:22>

 Stream Framework is a python library which allows you to build activity streams & newsfeeds using Cassandra and/or Redis. If you're not using python have a look at Stream, which supports Node, Ruby, PHP, Python, Go, Scala, Java and REST.

 Examples of what you can build are:

     Activity streams such as seen on Github
     A Twitter style newsfeed
     A feed like Instagram/ Pinterest
     Facebook style newsfeeds
     A notification system

 (Feeds are also commonly called: Activity Streams, activity feeds, news streams.)
** [[https://github.com/cuckoosandbox/cuckoo][cuckoosandbox/cuckoo: Cuckoo Sandbox is an automated dynamic malware analysis system]] :python:github:top:malware:system: 
 <2016-12-14 Wed 09:23>

 In three words, Cuckoo Sandbox is a malware analysis system.

 What does that mean? It simply means that you can throw any suspicious file at it and in a matter of seconds Cuckoo will provide you back some detailed results outlining what such file did when executed inside an isolated environment.

 If you want to contribute to development, please read this and this first. Make sure you check our Issues and Pull Requests and that you join our IRC channel.
** [[https://github.com/giampaolo/psutil][giampaolo/psutil: A cross-platform process and system utilities module for Python]] :python:github:top:system:information: 
 <2016-12-14 Wed 09:23>

 psutil (process and system utilities) is a cross-platform library for retrieving information on running processes and system utilization (CPU, memory, disks, network) in Python. It is useful mainly for system monitoring, profiling and limiting process resources and management of running processes. It implements many functionalities offered by command line tools such as: ps, top, lsof, netstat, ifconfig, who, df, kill, free, nice, ionice, iostat, iotop, uptime, pidof, tty, taskset, pmap. It currently supports Linux, Windows, OSX, Sun Solaris, FreeBSD, OpenBSD and NetBSD, both 32-bit and 64-bit architectures, with Python versions from 2.6 to 3.5 (users of Python 2.4 and 2.5 may use 2.1.3 version). PyPy is also known to work.
** [[https://github.com/Jahaja/psdash][Jahaja/psdash: A linux system information web dashboard using psutils and flask]] :python:github:top:web:system:information:dashboard: 
 <2016-12-14 Wed 09:24>

 psdash is a system information web dashboard for linux using data mainly served by psutil - hence the name.

     Features
     Installation
     Getting started
     Configuration
     Screenshots
     License

 Features

     Overview
     Dashboard overview of the system displaying data on cpu, disks, network, users, memory, swap and network.

     Processes
     List processes (top like) and view detailed process information about each process.

     Apart from a detailed process overview this is also available for each process:
         Open files
         Open connections
         Memory maps
         Child processes
         Resource limits
     Disks
     List info on all disks and partitions.
     Network
     List info on all network interfaces and the current throughput. System-wide open connections listing with filtering. Somewhat like netstat.
     Logs
     Tail and search logs. The logs are added by patterns (like /var/log/*.log) which are checked periodically to account for new or deleted files.
     Multi-node/Cluster Support for multiple agent nodes that is either specified by a config or will register themselves on start-up to a common psdash node that runs the web interface.
     All data is updated automatically, no need to refresh

 The GUI is pretty much a modified bootstrap example as I'm no designer at all. If you got a feel for design and like to improve the UI parts of psdash, please create a pull request with your changes. It would be much appreciated as there's much room for improvements.
** [[https://github.com/stamparm/maltrail][stamparm/maltrail: Malicious traffic detection system]] :python:github:top:traffic:malicious:detection:system: 
 <2016-12-14 Wed 09:24>

 Maltrail is a malicious traffic detection system, utilizing publicly available (black)lists containing malicious and/or generally suspicious trails, along with static trails compiled from various AV reports and custom user defined lists, where trail can be anything from domain name (e.g. zvpprsensinaix.com for Banjori malware), URL (e.g. http://109.162.38.120/harsh02.exe for known malicious executable), IP address (e.g. 185.130.5.231 for known attacker) or HTTP User-Agent header value (e.g. sqlmap for automatic SQL injection and database takeover tool). Also, it uses (optional) advanced heuristic mechanisms that can help in discovery of unknown threats (e.g. new malware).
** [[https://github.com/NVIDIA/DIGITS][NVIDIA/DIGITS: Deep Learning GPU Training System]] :python:github:top:nvidia:gpu:deep:learning:tool: 
 <2016-12-14 Wed 09:25>

  Deep Learning GPU Training System https://developer.nvidia.com/digits
** [[https://github.com/luispedro/BuildingMachineLearningSystemsWithPython][luispedro/BuildingMachineLearningSystemsWithPython: Source Code for the book Building Machine Learning Systems with Python]] :python:github:top:book:building:machine:learning:systems: 
 <2016-12-14 Wed 09:25>

 Source Code for the book Building Machine Learning Systems with Python by Luis Pedro Coelho and Willi Richert.

 The book was published in 2013 (second edition in 2015) by Packt Publishing and is available from their website.

 The code in the repository corresponds to the second edition. Code for the first edition is available in first_edition branch.
** [[https://github.com/Yelp/dumb-init][Yelp/dumb-init: A minimal init system for Linux containers]] :python:github:top:docker:container:minimal:init:system: 
 <2016-12-14 Wed 09:26>

 dumb-init is a simple process supervisor and init system designed to run as PID 1 inside minimal container environments (such as Docker). It is deployed as a small, statically-linked binary written in C.

 Lightweight containers have popularized the idea of running a single process or service without normal init systems like systemd or sysvinit. However, omitting an init system often leads to incorrect handling of processes and signals, and can result in problems such as containers which can't be gracefully stopped, or leaking containers which should have been destroyed.

 dumb-init enables you to simply prefix your command with dumb-init. It acts as PID 1 and immediately spawns your command as a child process, taking care to properly handle and forward signals as they are received.
** [[https://github.com/quokkaproject/quokka][quokkaproject/quokka: CMS (Content Management System) - Python, Flask and MongoDB]] :python:github:top:cms:django:flask:mongodb: 
 <2016-12-14 Wed 09:27>

  CMS (Content Management System) - Python, Flask and MongoDB http://www.quokkaproject.org
** [[https://github.com/ckan/ckan][ckan/ckan: CKAN is an open-source DMS (data management system) for powering data hubs and data portals. CKAN makes it easy to publish, share and use data. It powers datahub.io, catalog.data.gov and data.gov.uk among many other sites.]] :python:github:top:data:manage:system: 
 <2016-12-14 Wed 09:27>

 CKAN is the world’s leading open-source data portal platform. CKAN makes it easy to publish, share and work with data. It's a data management system that provides a powerful platform for cataloging, storing and accessing datasets with a rich front-end, full API (for both data and catalog), visualization tools and more. Read more at ckan.org.
** [[https://github.com/mathics/Mathics][mathics/Mathics: a general-purpose computer algebra system]] :python:github:top:math:compute:system: 
 <2016-12-14 Wed 09:28>

 Mathics is a general-purpose computer algebra system (CAS). It is meant to be a free, lightweight alternative to Mathematica.

 The home page of Mathics is http://mathics.github.io.

- [[https://mathics.angusgriffith.com/][Mathics]]

** [[https://github.com/sdg-mit/gitless][sdg-mit/gitless: A version control system built on top of Git]] :python:github:top:git:less:version:control:system: 
 <2016-12-14 Wed 09:28>

 Gitless is an experimental version control system built on top of Git. Many people complain that Git is hard to use. We think the problem lies deeper than the user interface, in the concepts underlying Git. Gitless is an experiment to see what happens if you put a simple veneer on an app that changes the underlying concepts. Because Gitless is implemented on top of Git (could be considered what Git pros call a "porcelain" of Git), you can always fall back on Git. And of course your coworkers you share a repository with need never know that you're not a Git aficionado.

- [[http://gitless.com/][Gitless]]
** [[https://github.com/PressLabs/gitfs][PressLabs/gitfs: Version controlled file system]] :python:github:top:git:filesystem: 
 <2016-12-14 Wed 09:31>

 gitfs is a FUSE file system that fully integrates with git. You can mount a remote repository's branch locally, and any subsequent changes made to the files will be automatically committed to the remote.
 What's its purpose?

 gitfs was designed to bring the full powers of git to everyone, no matter how little they know about versioning. A user can mount any repository and all the his changes will be automatically converted into commits. gitfs will also expose the history of the branch you're currently working on by simulating snapshots of every commit.

 gitfs is useful in places where you want to keep track of all your files, but at the same time you don't have the possibility of organizing everything into commits yourself. A FUSE filesystem for git repositories, with local cache
 Features

     Automatically commits changes: create, delete, update files and their metadata
     Browse through working index and commit history
     Merges with upstream by automatically accepting local changes
     Caching commits reduces the memory footprint and speeds up navigation
     Reduces the number of pushes by batching commits
** [[https://github.com/pinry/pinry][pinry/pinry: The open-source core of Pinry, a tiling image board system for people who want to save, tag, and share images, videos and webpages in an easy to skim through format.]] :python:github:top:image:tag:pinterest:tiling: 
 <2016-12-14 Wed 09:32>

 The open-source core of Pinry, a tiling image board system for people who want to save, tag, and share images, videos and webpages in an easy to skim through format.

 For more information and a working demo board visit getpinry.com.
** [[https://github.com/rasguanabana/ytfs][rasguanabana/ytfs: YouTube File System]] :python:github:top:youtube:filesystem: 
 <2016-12-14 Wed 09:33>

 YTFS - File system which enables you to search and play movies from YouTube as files - with tools of your choice. Based on FUSE, written in Python 3.
** [[https://github.com/python-diamond/Diamond][python-diamond/Diamond: Diamond is a python daemon that collects system metrics and publishes them to Graphite (and others). It is capable of collecting cpu, memory, network, i/o, load and disk metrics. Additionally, it features an API for implementing custom collectors for gathering metrics from almost any source.]] :python:github:top:system:information:graph:collect: 
 <2016-12-14 Wed 09:42>

  Diamond is a python daemon that collects system metrics and publishes them to Graphite (and others). It is capable of collecting cpu, memory, network, i/o, load and disk metrics. Additionally, it features an API for implementing custom collectors for gathering metrics from almost any source. http://diamond.readthedocs.org/
** [[https://github.com/dropbox/changes][dropbox/changes: A dashboard for your code. A build system.]] :python:github:top:code:dashboard:git: 
 <2016-12-14 Wed 09:44>

 Changes is a build coordinator and reporting solution written in Python.

 The project is primarily built on top of Jenkins, but efforts are underway to replace the underlying dependency. The current work-in-progress tooling exists under several additional repositories:

     https://github.com/dropbox/changes-client
     https://github.com/dropbox/changes-mesos-framework

 Note

 Changes is under extremely active and rapid development, and you probably shouldn't use it unless you like broken software.
** [[https://github.com/saffsd/langid.py][saffsd/langid.py: Stand-alone language identification system]] :python:github:top:language:eidentification:system: 
 <2016-12-14 Wed 09:45>

 langid.py is a standalone Language Identification (LangID) tool.

 The design principles are as follows:

     Fast
     Pre-trained over a large number of languages (currently 97)
     Not sensitive to domain-specific features (e.g. HTML/XML markup)
     Single .py file with minimal dependencies
     Deployable as a web service

 All that is required to run langid.py is >= Python 2.7 and numpy. The main script langid/langid.py is cross-compatible with both Python2 and Python3, but the accompanying training tools are still Python2-only.

** [[https://github.com/guardian/alerta][guardian/alerta: Alerta monitoring system]] :python:github:top:monitoring:system:alert: 
 <2016-12-14 Wed 09:47>

 The Alerta monitoring tool was developed with the following aims in mind:

     distributed and de-coupled so that it is SCALABLE
     minimal CONFIGURATION that easily accepts alerts from any source
     quick at-a-glance VISUALISATION with drill-down to detail
** [[https://github.com/danielmagnussons/orgmode][danielmagnussons/orgmode: orgmode is for keeping notes, maintaining TODO lists, planning projects, and authoring documents with a fast and effective plain-text system.]] :python:github:top:sublimetext:org:mode: 
 <2016-12-14 Wed 09:47>

 Adds support for Org mode's .org syntax files to Sublime Text.

 Tested on Windows 7 and Ubuntu 12.04 and Mac OS X 10.7.5 with Sublime Text 2 & 3
** [[https://github.com/dzone/osqa][dzone/osqa: OSQA is a free, entry-level Q&A system from the makers of AnswerHub, the market-leading professional Q&A platform. Looking for Enterprise functionality? Checkout http://answerhub.com]] :python:github:top:question:answer:system: 
 <2016-12-14 Wed 09:49>

  OSQA is a free, entry-level Q&A system from the makers of AnswerHub, the market-leading professional Q&A platform. Looking for Enterprise functionality? Checkout http://answerhub.com
** [[https://github.com/lincolnloop/salmon][lincolnloop/salmon: A simple monitoring system.]] :python:github:top:system:monitoring:unmaintained: 
 <2016-12-14 Wed 09:49>

 This project is unmaintained

 My need for simple monitoring quickly became a need for more complex monitoring. I'm no longer using Salmon, as such, I'm no longer maintaining it. If you would like to continue developing Salmon, feel free to fork the repo and we can point this to your fork.
** [[https://github.com/jek/blinker][jek/blinker: A fast Python in-process signal/event dispatching system.]] :python:github:top:process:event:dispatching:system: 
 <2016-12-14 Wed 09:50>

  A fast Python in-process signal/event dispatching system. https://pythonhosted.org/blinker/
** [[https://github.com/klen/graphite-beacon][klen/graphite-beacon: Simple alerting system for Graphite metrics]] :python:github:top:alerting:system: 
 <2016-12-14 Wed 09:51>

 Simple alerting system for Graphite metrics.

 Features:

     Simplest installation (one python package dependency)
     No software dependencies (Databases, AMQP and etc)
     Light and full asyncronous
     SMTP, HipChat, Slack, PagerDuty, HTTP handlers (Please make a request for additional handlers)
     Easy configurable and supports historical values
** [[https://github.com/russss/Herd][russss/Herd: A single-command bittorrent distribution system, based on Twitter's Murder]] :python:github:top:torrent:distribution:system:twitter:murder:unmaintained: 
 <2016-12-14 Wed 09:51>

 DEPRECATED PROJECT: I (@russss) am no longer maintaining this code - in fact I've never actually deployed it in production myself, although others have. I won't be accepting any more pull requests for this project. If you're maintaining a fork, let me know and I'll link to it.
 About

 Herd is a torrent-based file distribution system based on Murder. It allows for quick and easy transfer of small and large files. You can probably use it for other things too.

 Herd requires no extra Python modules and includes everything needed for destinations including its own (lightly modified) copy of BitTornado.

 Herd has been updated from its fork Horde which removed limitations around large file transfers, peer seeding, and python integration. Herd now has the same capabilities as Horde in that regard.
** [[https://github.com/jensl/critic][jensl/critic: Critic code review system.]] :python:github:top:critic:review:system: 
 <2016-12-14 Wed 09:53>

 This is the code review system, Critic.

 Critic has a few concepts that might be useful to know.
** [[https://github.com/cms-dev/cms][cms-dev/cms: Contest Management System]]             :python:github:top:cms: 
 <2016-12-14 Wed 09:53>

 Contest Management System

 Homepage: http://cms-dev.github.io/

 Build Status Join the chat at https://gitter.im/cms-dev/cms
 Introduction

 CMS, or Contest Management System, is a distributed system for running and (to some extent) organizing a programming contest.

 CMS has been designed to be general and to handle many different types of contests, tasks, scorings, etc. Nonetheless, CMS has been explicitly build to be used in the 2012 International Olympiad in Informatics, held in September 2012 in Italy.
** [[https://github.com/b12io/orchestra][b12io/orchestra: Orchestra is a system for orchestrating project teams of experts and machines.]] :python:github:top:orchestration:team: 
 <2016-12-14 Wed 09:53>

 Orchestra is a system for orchestrating project teams of experts and machines. Projects can include everything from design teams working on a client's project to newsrooms bringing together reporters, photographers, and editors for a story. In Orchestra workflows, you can assign senior experts to review other experts in order to provide feedback and iteratively refine the work. Orchestra also brings machines and automation onto projects: a crawler can collect content from the web before an expert combs through it, or a classifier can filter out bad data so an analyst spends less time in the noise. New workflows can be added with some simple python glue and an html interface.

 To learn more about Orchestra with some examples and a getting started guide, or to reach out to the Orchestra team, take a look at some of these resources:

     Orchestra website
     A blog post introducing Orchestra v0.1.0 to the world
     Subscribe to the Orchestra mailing list
** [[https://github.com/michael-lazar/rtv][michael-lazar/rtv: Browse Reddit from your terminal]] :python:github:top:reddit:cli:client: 
 <2016-12-14 Wed 10:03>


 RTV provides an interface to view and interact with reddit from your terminal.
 It's compatible with most terminal emulators on Linux and OS X.
** [[https://github.com/rossem/RedditStorage][rossem/RedditStorage: Store files onto reddit subreddits.]] :python:github:top:reddit:store:files:subreddits: 
 <2016-12-14 Wed 10:03>

 RedditStorage is an application that allows you to store on reddit subreddits via raw bytes. The file is encoded into characters and encrypted using AES encryption, after which it can be stored on a subreddit of choice (ideally your own private subreddit). To retrieve the file, the process is simply reversed. Unfortunately, reddit comments have a character limit of 10000. If your file exceeds that amount, it will be split up among comments in the same thread which form links by replying to each other.
** [[https://github.com/ssimunic/Daily-Reddit-Wallpaper][ssimunic/Daily-Reddit-Wallpaper: Change your wallpaper to the most upvoted image of the day from /r/wallpapers or any other subreddit on system startup]] :python:github:top:reddit:wallpaper:changer:gnome:daily: 
 <2016-12-14 Wed 10:04>

 This script changes your wallpaper to most upvoted image of the day on /r/wallpapers or from any other subreddit.

 Run it on startup for new wallpaper on every session.

 Supported: Linux (gnome, kde, mate, lxde), Windows and OS X
** [[https://github.com/rhiever/reddit-analysis][rhiever/reddit-analysis: A Python script that parses post titles, self-texts, and comments on reddit and makes word clouds out of the word frequencies.]] :python:github:top:reddit:cloud:analysis:visualisation: 
 <2016-12-14 Wed 10:10>

  A Python script that parses post titles, self-texts, and comments on reddit and makes word clouds out of the word frequencies.
** [[https://github.com/sisimai/p5-Sisimai][sisimai/p5-Sisimai: Mail Analyzing Interface for email bounce: A Perl module to parse RFC5322 bounce mails and generating structured data as JSON from parsed results. Formerly known as bounceHammer 4: an error mail analyzer.]] :perl:github:top:mail:analyzing: 
 <2016-12-14 Wed 10:24>

  Mail Analyzing Interface for email bounce: A Perl module to parse RFC5322 bounce mails and generating structured data as JSON from parsed results. Formerly known as bounceHammer 4: an error mail analyzer. http://libsisimai.org
** [[https://github.com/HoverHell/RedditImageGrab][HoverHell/RedditImageGrab: Downloads images from sub-reddits of reddit.com.]] :python:github:top:reddit:image:download:script: 
 <2016-12-14 Wed 10:26>

 I created this script to download the latest (and greatest) wallpapers off of image subreddits like wallpaper to keep my desktop wallpaper fresh and interesting. The main idea is that the script would download any JPEG or PNG formatted image that it found listed in the specified subreddit and download them to a folder.
** [[https://github.com/myusuf3/octogit][myusuf3/octogit: giving git more tentacles]] :python:github:top:interface:client: 
 <2016-12-14 Wed 10:27>

 A free and open source interface to github from the command line. Avoid the usual copy and paste when creating repositories, keep up to date on issues, and much more.
** [[https://github.com/alixander/PyScribe][alixander/PyScribe: A Python library to make debugging with print statements simpler and more effective.]] :python:github:top:print:analysis: 
 <2016-12-14 Wed 10:28>

 A Python library to make debugging with print statements simpler and more effective.

 PyScribe.com for full documentation. (Work in progress)

 Warning: This project is currently in a pre-release state. Open to contributions and collaborators.
** [[https://github.com/liris/websocket-client][liris/websocket-client: websocket client for python]] :python:github:top:socket:client: 
 <2016-12-14 Wed 10:31>

 websocket-client module is WebSocket client for python. This provide the low level APIs for WebSocket. All APIs are the synchronous functions.

 websocket-client supports only hybi-13.
** [[https://github.com/guyzmo/git-repo][guyzmo/git-repo: Git-Repo: CLI utility to manage git services from your workspace]] :python:github:top:git:control:manage:gitlab:services: 
 <2016-12-14 Wed 10:31>

 Control your remote git hosting services from the git commandline. The usage is very simple. To clone a new project, out of GitHub, just issue:
** [[https://github.com/pimutils/khal][pimutils/khal: CLI calendar application]] :python:github:top:calendar:CalDAV: 
 <2016-12-14 Wed 10:33>

 Khal is a standards based CLI and terminal calendar program, able to synchronize with CalDAV servers through vdirsyncer.
** [[https://github.com/fagga/transmission-remote-cli][fagga/transmission-remote-cli: Curses interface for the daemon of the BitTorrent client Transmission]] :python:github:top:transmission:client:cli: 
 <2016-12-14 Wed 10:33>

  Curses interface for the daemon of the BitTorrent client Transmission
** [[https://github.com/andreafrancia/trash-cli][andreafrancia/trash-cli: Command line interface to the freedesktop.org trashcan.]] :python:github:top:freedesktop:trash:cli: 
 <2016-12-14 Wed 10:33>

  Command line interface to the freedesktop.org trashcan.
** [[https://github.com/TailorDev/Watson][TailorDev/Watson: A wonderful CLI to track your time!]] :python:github:top:project:management:time:track: 
 <2016-12-14 Wed 10:34>

 Watson is here to help you manage your time. You want to know how much time you are spending on your projects? You want to generate a nice report for your client? Watson is here for you.
** [[https://github.com/richrd/suplemon][richrd/suplemon: Console (CLI) text editor with multi cursor support. Suplemon replicates Sublime Text like functionality in the terminal. Try it out, give feedback, fork it!]] :python:github:top:editor:sublimetext:alternative: 
 <2016-12-14 Wed 10:35>

  :lemon: Console (CLI) text editor with multi cursor support. Suplemon replicates Sublime Text like functionality in the terminal. Try it out, give feedback, fork it!
** [[https://github.com/streamlink/streamlink][streamlink/streamlink: CLI for extracting streams from various websites to a video player of your choosing]] :python:github:top:livestreamer:fork:stream:cli: 
 <2016-12-14 Wed 10:36>

 Streamlink is a CLI utility that pipes flash videos from online streaming services to a variety of video players such as VLC, or alternatively, a browser.

 The main purpose of streamlink is to convert CPU-heavy flash plugins to a less CPU-intensive format.

 Streamlink is a fork of the livestreamer project.
** [[https://github.com/j-bennet/wharfee][j-bennet/wharfee: A CLI with autocompletion and syntax highlighting for Docker commands.]] :python:github:top:docker:cli:autocompletion: 
 <2016-12-14 Wed 10:37>

 A shell for Docker that can do autocompletion and syntax highlighting.
** [[https://github.com/rcaloras/bashhub-client][rcaloras/bashhub-client: Bash history in the cloud. Indexed and searchable.]] :python:github:git:bash:cloud:sync: 
 <2016-12-14 Wed 10:38>

 Bashhub saves every terminal command entered across all sessions and systems and provides powerful querying across all commands.
** [[https://github.com/iamale/bashhub-server][iamale/bashhub-server: Unofficial Bashhub server (and also a REST API example in Kyoukai)]] :python:github:top:bashhub:unofficial:client: 
 <2016-12-14 Wed 10:40>

  Unofficial Bashhub server (and also a REST API example in Kyoukai)
** [[https://github.com/dvorka/hstr][dvorka/hstr: Bash and Zsh shell history suggest box - easily view, navigate, search and manage your command history.]] :c:lang:github:top:bash:history: 
 <2016-12-14 Wed 10:48>

  Bash and Zsh shell history suggest box - easily view, navigate, search and manage your command history. http://www.mindforger.com
** [[https://github.com/crazy-max/ftp-sync][crazy-max/ftp-sync: A shell script to synchronize files between a remote FTP server and your local server/computer.]] :shell:github:top:ftp:sync:automatically: 
 <2016-12-14 Wed 10:50>

  A shell script to synchronize files between a remote FTP server and your local server/computer.
** [[https://github.com/trengrj/recent][trengrj/recent: log bash history to an sqlite database]] :python:github:top:bash:history:recent: 
 <2016-12-14 Wed 10:51>

  log bash history to an sqlite database
** [[https://github.com/sanjujosh/auto-image-renamer][sanjujosh/auto-image-renamer: Rename images using deep learning]] :python:github:top:deep:learning:rename:images: 
 <2016-12-14 Wed 10:52>

 Rename images using deep learning
** [[https://github.com/serialoverflow/demimove][serialoverflow/demimove: A cross-platform file browser for mass renaming]] :python:github:top:qt:rename:mass: 
 <2016-12-14 Wed 10:54>

 Demimove is a mass renaming file browser for Linux and Windows, written with python2.7 and PyQt4.

 A couple of features you might find interesting:

     Interactivity: Demimove allows adding/removing of (multiple) targets quickly by mouse interaction (instead of or complementary to matching via regex/globbing patterns).
     Automatic Previews: Demimove provides an automatic and immediate preview of any change.
     Performance: Demimove is fast, thanks to Qt and its QFileSystemModel. Even thousands of files are no problem (although there's a ceiling, as always).
     Commit History: You can undo any commit, although currently only in order of last to first.
     Multiple Pattern Support: You can have any number of match and filter patterns by separating them with a slash ("/").
     Recursive support: Demimove supports recursive lookups and renames. You can specify the depth of the recursion.
     Config File: You can save and restore options to and from a file (~/.config/demimove/demimove.ini).

 Other than that, it hopefully comes with everything you'd expect from a standard mass renamer, including regex/globbing support and preconfigured actions.
** [[https://github.com/emanuelfeld/poirot][emanuelfeld/poirot: CLI to search a Git repo's revision history for text patterns (e.g. passwords, tokens, IP addresses, and names)]] :python:github:top:penetration:passwords:tokens:search:git:repositories: 
 <2016-12-14 Wed 10:55>

 Poirot helps you investigate your repositories. Give him a set of clues (e.g. strings or regular expressions) and he will report back any place they appear in your repository's revision history.

 When used as a pre-commit hook, Poirot can warn you if you're about to commit something you might not intend (think passwords, private keys, tokens, and other bits of sensitive or personally identifiable information).

 Poirot began as a fork of CFPB's fellow gumshoe, Clouseau.
** [[https://github.com/jlevy/the-art-of-command-line][jlevy/the-art-of-command-line: Master the command line, in one page]] :markdown:master:onepage:cli: 
 <2016-12-14 Wed 10:59>

  Master the command line, in one page
** [[https://github.com/marcusbuffett/command-line-chess][marcusbuffett/command-line-chess: A python program to play chess against an AI in the terminal.]] :python:github:top:chess:games:cli: 
 <2016-12-14 Wed 11:00>

  A python program to play chess against an AI in the terminal.
** [[https://github.com/zk-phi/sublimity][zk-phi/sublimity: emacs]] smooth-scrolling and minimap like sublime editor]] :emacs:sublime:minimap: 
 <2016-12-14 Wed 11:02>

 smooth-scrolling, minimap and distraction-free mode (inspired by the sublime editor)
** [[https://github.com/rakanalh/emacs-dashboard][rakanalh/emacs-dashboard: A shameless extraction of Spacemac's startup screen]] :emacs:dashboard: 
 <2016-12-14 Wed 11:05>

 A shameless extraction of Spacemacs’ startup screen.
 Features

     Displays an awesome Emacs banner!
     Recent files
     Bookmarks list
     Recent projectile projects list (Depends on `projectile` package)
** [[https://github.com/rejeep/drag-stuff.el][rejeep/drag-stuff.el: Drag stuff around in Emacs]]              :emacs:drag: 
 <2016-12-14 Wed 11:12>

 Drag Stuff is a minor mode for Emacs that makes it possible to drag stuff (words, region, lines) around in Emacs.
** [[https://github.com/emcrisostomo/fswatch][emcrisostomo/fswatch: A cross-platform file change monitor with multiple backends: Apple OS X File System Events, *BSD kqueue, Solaris/Illumos File Events Notification, Linux inotify, Microsoft Windows and a stat()-based backend.]] :cpp:file:change:watcher: 
 <2016-12-14 Wed 11:19>

  A cross-platform file change monitor with multiple backends: Apple OS X File System Events, *BSD kqueue, Solaris/Illumos File Events Notification, Linux inotify, Microsoft Windows and a stat()-based backend. http://emcrisostomo.github.io/fswatch/
** [[https://github.com/CleverRaven/Cataclysm-DDA][CleverRaven/Cataclysm-DDA: Cataclysm - Dark Days Ahead. A fork/variant of Cataclysm Roguelike by Whales.]] :github:top:game:roguelike: 
 <2016-12-14 Wed 11:21>

 Cataclysm: Dark Days Ahead is a roguelike set in a post-apocalyptic world. While some have described it as a "zombie game", there is far more to Cataclysm than that. Struggle to survive in a harsh, persistent, procedurally generated world. Scavenge the remnants of a dead civilization for food, equipment, or, if you are lucky, a vehicle with a full tank of gas to get you the hell out of Dodge. Fight to defeat or escape from a wide variety of powerful monstrosities, from zombies to giant insects to killer robots and things far stranger and deadlier, and against the others like yourself, that want what you have...
** [[https://github.com/orf/gping][orf/gping: Ping, but with a graph]]           :python:github:top:ping:graph: 
 <2016-12-14 Wed 11:23>

 My apartments internet is all 4g, and while it's normally pretty fast it can be a bit flakey. I often found myself running ping -t google.com in a command window to get a rough idea of the network speed, and I thought a graph would be a great way to visualize the data. I still wanted to just use the command line though, so I decided to try and write a cross platform one that I could use. And here we are.
** [[https://github.com/smira/aptly][smira/aptly: aptly - Debian repository management tool]] :go:lang:github:top:debian:repository:management: 
 <2016-12-14 Wed 11:27>

 Aptly is a swiss army knife for Debian repository management.
 http://www.aptly.info/img/aptly_logo.png

 Documentation is available at http://www.aptly.info/. For support use mailing list aptly-discuss.

 Aptly features: ("+" means planned features)

     make mirrors of remote Debian/Ubuntu repositories, limiting by components/architectures
     take snapshots of mirrors at any point in time, fixing state of repository at some moment of time
     publish snapshot as Debian repository, ready to be consumed by apt
     controlled update of one or more packages in snapshot from upstream mirror, tracking dependencies
     merge two or more snapshots into one
     filter repository by search query, pulling dependencies when required
     publish self-made packages as Debian repositories
     REST API for remote access
     mirror repositories "as-is" (without resigning with user's key) (+)
     support for yum repositories (+)

 Current limitations:

     translations are not supported yet
** [[https://notabug.org/koz.ross/awesome-c][koz.ross/awesome-c: A curated list of awesome C frameworks, libraries, resources and other shiny things. Inspired by all the other awesome-... projects out there. - NotABug.org: Free code hosting]] :c:lang:awesome:links: 
 <2016-12-14 Wed 11:36>

 A curated list of C good stuff. This list contains only free software for code, and sellers who aren't evil for physical resources.

 This is released under a Creative Commons-Attribution-ShareAlike license, version 4. You can find its text in the LICENSE file.

 This project is part of Peers - a community for growing our freedom. Support us today!

 An important note: This project does not index anything C++-related; only pure C stuff is considered.

 Note for contributors: If you want to make a pull request, please read CONTRIBUTING.md first.
** [[https://www.youtube.com/watch?v=DR3dBWZWaGg&list=PLG9dLrY9JZKgXfVYlg_0lq6s-i5r0Lw0w&index=14][Программирование на Си. #14. Указатели. - YouTube]] :c:lang:tutorial:youtube:video:russian: 
 <2016-12-14 Wed 11:41>

 В данном видео-уроке мы познакомимся с указателями. Одна из важнейших тем в программировании на C и C++.
** [[https://habrahabr.ru/post/265635/][Навигация в крупных проектах для Vim и Emacs / Хабрахабр]] :gtags:howto:russian: 
 <2016-12-14 Wed 13:16>

  Лучше всего установить плагин ggtags, взять его можно здесь или в elpa, melpa или marmalade. Потом откройте один из файлов проекта и нажмите M-x ggtags-mode, затем M-x ggtags-visit-project-root и выберите папку где тэги лежат. Все, дальше в рамках файлов проекта если вы нажмете M-., то сработает переход к определению символа, который в данный момент под курсором. Хотите ввести имя символа вручную — C-u M-.. Если у символа больше одного определения, то нажимайте M-n и M-p для переключения между определениями. Чтобы обновить файл тэгов нажмите M-x ggtags-update-tags находясь на одном из файлов проекта.
** [[https://github.com/vinszent/gnome-twitch][vinszent/gnome-twitch: Enjoy Twitch on your GNU/Linux desktop]] :gnome:twitch:video:stream:gaming: 
 <2016-12-14 Wed 13:52>

  Enjoy Twitch on your GNU/Linux desktop http://gnome-twitch.vinszent.com
** [[https://github.com/docker/docker/issues/23630][Bug: docker daemon failing to start · Issue #23630 · docker/docker]] :docker:error:systemd:fail:start:bug:networking: 
 <2016-12-14 Wed 14:07>

  rm -rf /var/lib/docker/network and restart daemon.
** [[https://github.com/Valloric/YouCompleteMe][Valloric/YouCompleteMe: A code-completion engine for Vim]] :python:github:top:vim:completion: 
 <2016-12-15 Thu 00:12>

 YouCompleteMe is a fast, as-you-type, fuzzy-search code completion engine for Vim. It has several completion engines:

     an identifier-based engine that works with every programming language,
     a Clang-based engine that provides native semantic code completion for C/C++/Objective-C/Objective-C++ (from now on referred to as "the C-family languages"),
     a Jedi-based completion engine for Python 2 and 3 (using the JediHTTP wrapper),
     an OmniSharp-based completion engine for C#,
     a combination of Gocode and Godef semantic engines for Go,
     a TSServer-based completion engine for TypeScript,
     a Tern-based completion engine for JavaScript,
     a racer-based completion engine for Rust,
     and an omnifunc-based completer that uses data from Vim's omnicomplete system to provide semantic completions for many other languages (Ruby, PHP etc.).
** [[https://github.com/abingham/emacs-ycmd][abingham/emacs-ycmd: Emacs client for ycmd, the code completion system.]] :emacs:github:top:completion:client: 
 <2016-12-15 Thu 00:13>

 emacs-ycmd is a client for ycmd, the code completion system. It takes care of managing a ycmd server and fetching completions from that server.

 emacs-ycmd comprises a core set of functionality for communicating with ycmd as well as integration with the Emacs completion framework company-mode.

 A lot of the concepts behind emacs-ycmd are actually concepts from ycmd itself, so if you feel lost you might read the ycmd documentation and/or the the original YouCompleteMe documentation.

 Important: The ycmd package itself doesn't provide a real UI for selecting and inserting completions into your files. For that you need to use company-ycmd or another "completion framework".
** [[https://github.com/Valloric/ycmd#building][Valloric/ycmd: A code-completion & code-comprehension server]] :cpp:github:top:compilation:server:emacs:vim: 
 <2016-12-15 Thu 00:16>

 ycmd is a server that provides APIs for code-completion and other code-comprehension use-cases like semantic GoTo commands (and others). For certain filetypes, ycmd can also provide diagnostic errors and warnings.

 ycmd was originally part of YouCompleteMe's codebase, but has been split out into a separate project so that it can be used in editors other than Vim.

 The best way to learn how to interact with ycmd is by reading through (and running) the example_client.py file. See the README for the examples folder for details on how to run the example client.
** [[https://github.com/jorgenschaefer/elpy][jorgenschaefer/elpy: Emacs Python Development Environment]] :emacs:github:top:python: 
 <2016-12-15 Thu 06:49>

 Elpy is an Emacs package to bring powerful Python editing to Emacs. It combines and configures a number of other packages, both written in Emacs Lisp as well as Python.
** [[https://github.com/jorgenschaefer/Config][jorgenschaefer/Config: Personal configuration files]] :emacs:config:jorgenschaefer:elpy: 
 <2016-12-15 Thu 06:51>

 These are my configuration files for UNIX home directories. If you clone this, be aware that I break stuff randomly and will happily use git push --force. You’ve been warned.
** [[https://www.packtpub.com/networking-and-servers/extending-ansible][Extending Ansible | PACKT Books]]        :ansible:book:official:recommended: 
 <2016-12-15 Thu 08:38>


 Extending Ansible
 Learning
 Rishabh Das
 March 2016
 2 customer reviews
 Discover how to efficiently deploy and customize Ansible in the way your platform demands
** [[https://github.com/chaica/feed2tweet][chaica/feed2tweet: Parse rss feed and tweet new posts to Twitter]] :python:github:top:feed:tweet:rss:atom: 
 <2016-12-15 Thu 08:44>

 Feed2tweet automatically parses rss feeds, identifies new posts and posts them on Twitter. For the full documentation, read it online.
** [[https://github.com/chaica][chaica]]                           :python:github:user:developer:feed2tweet: 
 <2016-12-15 Thu 08:47>


     feed2tweet

     Parse rss feed and tweet new posts to Twitter

     Python 63 3
     retweet

     Retweet automatically retweets tweets from a Twitter user

     Python 56 15
     db2twitter

     Build and send tweets with data from your database

     Python 30 1
     twitterwatch

     Twitter bot to watch the activity of a Twitter user timeline

     Python 11 2
     persistentlist

     Python 5 1
** [[https://github.com/cloudson/gitql][cloudson/gitql: A git query language]] :go:github:top:git:query:language:sql: 
 <2016-12-15 Thu 09:10>

 Gitql is a Git query language.
 In a repository path ...
** [[https://github.com/zeit/hyper][zeit/hyper: A terminal built on web technologies]] :javascript:github:top:shell:terminal:web: 
 <2016-12-15 Thu 09:10>

  A terminal built on web technologies https://hyper.is
** [[https://github.com/mawww/kakoune][mawww/kakoune: mawww's experiment for a better code editor]] :cpp:gihtub:top:vim:editor:inspired: 
 <2016-12-15 Thu 09:11>



 Kakoune is a code editor heavily inspired by Vim, as such most of its commands are similar to vi’s ones, and it shares Vi’s "keystrokes as a text editing language" model.

 Kakoune can operate in two modes, normal and insertion. In insertion mode, keys are directly inserted into the current buffer. In normal mode, keys are used to manipulate the current selection and to enter insertion mode.

 Kakoune has a strong focus on interactivity, most commands provide immediate and incremental results, while still being competitive (as in keystroke count) with Vim.

 Kakoune works on selections, which are oriented, inclusive range of characters, selections have an anchor and a cursor character. Most commands move both of them, except when extending selection where the anchor character stays fixed and the cursor one moves around.
** [[https://github.com/tensorflow/tensorflow][tensorflow/tensorflow: Computation using data flow graphs for scalable machine learning]] :python:cpp:github:top:computation:math: 
 <2016-12-15 Thu 09:12>

 TensorFlow is an open source software library for numerical computation using data flow graphs. Nodes in the graph represent mathematical operations, while the graph edges represent the multidimensional data arrays (tensors) that flow between them. This flexible architecture lets you deploy computation to one or more CPUs or GPUs in a desktop, server, or mobile device without rewriting code. TensorFlow also includes TensorBoard, a data visualization toolkit.

 TensorFlow was originally developed by researchers and engineers working on the Google Brain team within Google's Machine Intelligence research organization for the purposes of conducting machine learning and deep neural networks research. The system is general enough to be applicable in a wide variety of other domains, as well.
** [[https://github.com/firehol/netdata][firehol/netdata: Get control of your servers. Simple. Effective. Awesome. https://my-netdata.io/]] :c:github:top:web:system:monitoring:web: 
 <2016-12-15 Thu 09:14>

 netdata is a system for distributed real-time performance and health monitoring. It provides unparalleled insights, in real-time, of everything happening on the system it runs (including applications such as web and database servers), using modern interactive web dashboards.

 netdata is fast and efficient, designed to permanently run on all systems (physical & virtual servers, containers, IoT devices), without disrupting their core function.
** [[https://github.com/Bilibili/ijkplayer][Bilibili/ijkplayer: Android/iOS video player based on FFmpeg n3.2, with MediaCodec, VideoToolbox support.]] :cpp:android:github:top:video:player:ffmpeg: 
 <2016-12-15 Thu 09:21>

  Android/iOS video player based on FFmpeg n3.2, with MediaCodec, VideoToolbox support.
** [[https://github.com/antirez/redis][antirez / redis]]                              :c:github:top:database:redis: 
 <2016-12-15 Thu 09:22>



 Redis is an in-memory database that persists on disk. The data model is key-value, but many different kind of values are supported: Strings, Lists, Sets, Sorted Sets, Hashes, HyperLogLogs, Bitmaps.
** [[https://github.com/swilly22/redis-module-graph][swilly22/redis-module-graph]]            :c:github:top:redis:graph:database: 
 <2016-12-15 Thu 09:22>

 This project is an attempt to build a graph database ontop of Redis using Redis modules, where the nodes in the graph represents entities such as a person or a place and connections such as 'visit' are made between the different entities.

 As entities might have several attributes Redis hashes seems ideal to hold them, as such a node in the graph is named after an entity's key, for example supose we had a persone entity representing Barack Obama, our entity's key within redis would be "Barack Obama" and two of its attributes could be Age (55) and profession, we could also have another entity under the key Hawaii. with an attribute population (1,442,949). Finally we could construct a simple graph by connecting Barak Obama with an edge representing the relation born to Hawaii.

 This is one of the key ideas behind this project; a node in the graph is simply a reference to an entity stored as Redis hash.
** [[https://github.com/jp9000/obs-studio][jp9000 / obs-studio]]                           :c:github:top:obs:streaming: 
 <2016-12-15 Thu 09:23>



 OBS - Free and open source software for live streaming and screen recording
** [[https://github.com/SamyPesse/How-to-Make-a-Computer-Operating-System][SamyPesse/How-to-Make-a-Computer-Operating-System: How to Make a Computer Operating System in C++]] :c:github:top:book:programming:operatingsystem: 
 <2016-12-15 Thu 09:25>

 Online book about how to write a computer operating system in C/C++ from scratch.

 Caution: This repository is a remake of my old course. It was written several years ago as one of my first projects when I was in High School, I'm still refactoring some parts. The original course was in French and I'm not an English native. I'm going to continue and improve this course in my free-time.

 Book: An online version is available at http://samypesse.gitbooks.io/how-to-create-an-operating-system/ (PDF, Mobi and ePub). It was generated using GitBook.

 Source Code: All the system source code will be stored in the src directory. Each step will contain links to the different related files.

 Contributions: This course is open to contributions, feel free to signal errors with issues or directly correct the errors with pull-requests.

 Questions: Feel free to ask any questions by adding issues or commenting sections.

 You can follow me on Twitter @SamyPesse or GitHub.
** [[https://github.com/jameysharp/corrode][jameysharp/corrode: C to Rust translator]] :haskell:c:rust:github:top:translation: 
 <2016-12-15 Thu 09:27>

 This program reads a C source file and prints an equivalent module in Rust syntax. It's intended to be useful for two different purposes:

     Partial automation for migrating legacy code that was implemented in C. (This tool does not fully automate the job because its output is only as safe as the input was; you should clean up the output afterward to use Rust features and idioms where appropriate.)

     A new, complementary approach to static analysis for C programs. If this program can't translate your C source to equivalent Rust, you might consider whether your program is too complicated and hiding bugs. Or, if translation succeeds, the Rust compiler may report warnings and errors that your C compiler misses, or you may be able to use a custom Rust linter to detect project-specific problems.
** [[https://github.com/koalaman/shellcheck][koalaman/shellcheck: ShellCheck, a static analysis tool for shell scripts]] :haskell:shell:gihtub:top:spell:check: 
 <2016-12-15 Thu 09:27>

 ShellCheck is a GPLv3 tool that gives warnings and suggestions for bash/sh shell scripts:

 Screenshot of a terminal showing problematic shell script lines highlighted.

 The goals of ShellCheck are

     To point out and clarify typical beginner's syntax issues that cause a shell to give cryptic error messages.

     To point out and clarify typical intermediate level semantic problems that cause a shell to behave strangely and counter-intuitively.

     To point out subtle caveats, corner cases and pitfalls that may cause an advanced user's otherwise working script to fail under future circumstances.

 See the gallery of bad code for examples of what ShellCheck can help you identify!
** [[https://github.com/lukasmartinelli/hadolint][lukasmartinelli/hadolint: Dockerfile linter written in Haskell]] :haskell:github:top:dockerfile:linter: 
 <2016-12-15 Thu 09:30>

 A smarter Dockerfile linter that helps you build best practice Docker images. The linter is parsing the Dockerfile into an AST and performs rules on top of the AST. It is standing on the shoulders of Shellcheck to lint the Bash code inside RUN instructions.

 :globe_with_meridians: Check the online version on hadolint.lukasmartinelli.ch
** [[https://github.com/gitql/gitql][gitql/gitql: SQL interface to Git repositories, written in Go.]] :go:github:top:git:interface:sql: 
 <2016-12-15 Thu 09:31>

 gitql is a SQL interface to Git repositories, written in Go.

 WARNING: gitql is still in a very early stage of development. It is considered experimental.
** [[https://github.com/o1egl/govatar][o1egl/govatar: Avatar generator library for GO language]] :go:github:top:avatar:generator: 
 <2016-12-15 Thu 09:32>

 GOvatar image
 Overview

 GOvatar is an avatar generator writen in GO
** [[https://github.com/gogits/gogs][gogits/gogs: Gogs (Go Git Service) is a painless self-hosted Git service.]] :go:github:top:web:git:web:interface: 
 <2016-12-15 Thu 09:33>

  Gogs (Go Git Service) is a painless self-hosted Git service. https://gogs.io
** [[https://github.com/getlantern/lantern][getlantern/lantern: Open Internet for everyone. Lantern is a free application that delivers fast, reliable and secure access to the open Internet for users in censored regions. It uses a variety of techniques to stay unblocked, including domain fronting, p2p, and pluggable transports.]] :go:github:top:p2p:internet:tor:freedom: 
 <2016-12-15 Thu 09:35>

  :izakaya_lantern: Open Internet for everyone. Lantern is a free application that delivers fast, reliable and secure access to the open Internet for users in censored regions. It uses a variety of techniques to stay unblocked, including domain fronting, p2p, and pluggable transports. https://getlantern.org
** [[https://github.com/astaxie/build-web-application-with-golang][astaxie/build-web-application-with-golang: A golang ebook intro how to build a web with golang]] :go:github:top:web:book:programming: 
 <2016-12-15 Thu 09:36>

  A golang ebook intro how to build a web with golang
** [[https://github.com/rancher/rancher][rancher/rancher: A Platform for Operating Docker in Production]] :shell:github:top:docker:management: 
 <2016-12-15 Thu 09:38>

 Rancher is an open source project that provides a complete platform for operating Docker in production. It provides infrastructure services such as multi-host networking, global and local load balancing, and volume snapshots. It integrates native Docker management capabilities such as Docker Machine and Docker Swarm. It offers a rich user experience that enables devops admins to operate Docker in production at large scale.
** [[https://github.com/laradock/laradock][laradock/laradock: A Docker PHP development environment.]] :shell:github:top:docker:php:environment: 
 <2016-12-15 Thu 09:38>

 Laradock is a Docker PHP development environment. It facilitate running PHP Apps on Docker.

 Laradock is configured to run Laravel Apps by default, and it can be modified to run all kinds of PHP Apps (Symfony, CodeIgniter, Wordpress, Drupal...).
** [[https://github.com/icefox/git-map][icefox/git-map: Executes git commands in multiple Git repositories at the same time.]] :shell:github:top:git:multiple:repositories:manage: 
 <2016-12-15 Thu 09:39>

 git map is a tool to execute a Git command in multiple Git directories at the same time.

 WHY?
 =======

 Occasionally I have projects made up of several Git repositories.  Running 'git map branch' quickly confirms everyone is on the correct branch, 'git map clean -dxf' to clean them all, and 'git map fetch' to make sure they all have the latest objects before going off line is very handy.  This tool will work on all the Git repositories that are at the same level in the file system relative to the current directory or current repository you are in.
** [[https://github.com/nicolashery/mac-dev-setup][nicolashery/mac-dev-setup: A beginner's guide to setting up a development environment on Mac OS X]] :shell:github:top:mac:development:environment: 
 <2016-12-15 Thu 09:41>

  A beginner's guide to setting up a development environment on Mac OS X
** [[https://github.com/sstephenson/bats][sstephenson/bats: Bash Automated Testing System]] :shell:github:top:bash:automated:system: 
 <2016-12-15 Thu 09:42>

 Bats is a TAP-compliant testing framework for Bash. It provides a simple way to verify that the UNIX programs you write behave as expected.

 A Bats test file is a Bash script with special syntax for defining test cases. Under the hood, each test case is just a function with a description.
** [[https://github.com/jwilder/nginx-proxy][jwilder/nginx-proxy: Automated nginx proxy for Docker containers using docker-gen]] :shell:github:top:docker:nginx:proxy: 
 <2016-12-15 Thu 09:43>

 nginx-proxy sets up a container running nginx and docker-gen. docker-gen generates reverse proxy configs for nginx and reloads nginx when containers are started and stopped.
** [[https://github.com/thoughtbot/dotfiles][thoughtbot/dotfiles: A set of vim, zsh, git, and tmux configuration files.]] :shell:github:top:configurations: 
 <2016-12-15 Thu 09:44>

  A set of vim, zsh, git, and tmux configuration files. https://thoughtbot.com/open-source
** [[https://github.com/soimort/translate-shell][soimort/translate-shell: Command-line translator using Google Translate, Bing Translator, Yandex.Translate, etc.]] :awk:github:top:translate: 
 <2016-12-15 Thu 09:46>

 Translate Shell (formerly Google Translate CLI) is a command-line translator powered by Google Translate (default), Bing Translator, Yandex.Translate and Apertium. It gives you easy access to one of these translation engines your terminal:
** [[https://github.com/dumblob/mysql2sqlite][dumblob/mysql2sqlite: Converts MySQL dump to SQLite3 compatible dump]] :awk:github:top:mysql:sqlite:converts: 
 <2016-12-15 Thu 09:47>

 Converts MySQL dump to SQLite3 compatible dump (including MySQL KEY xxxxx statements from the CREATE block).
** [[https://github.com/step-/JSON.awk][step-/JSON.awk: Practical JSON parser written in awk]] :awk:github:top:json:parser: 
 <2016-12-15 Thu 09:48>

 A practical JSON parser written in awk.
 Quick Start

 This software is based on JSON.sh, a pipeable JSON parser written in Bash, retrieved on 2013-03-13 and herein ported to awk. JSON.awk is a self-contained script with no external dependencies.
** [[https://github.com/archan937/jsonv.sh][archan937/jsonv.sh: A Bash command line tool for converting JSON to CSV]] :awk:github:top:json:csv:converting: 
 <2016-12-15 Thu 09:48>

 A Bash command line tool for converting JSON to CSV
** [[https://github.com/PaulReiber/Log-Dissector][PaulReiber/Log-Dissector: awk-based tool for extracting knowledge from logfiles]] :awk:github:top:log:parse: 
 <2016-12-15 Thu 09:49>

 LogDissector is an AWK script for making sense of very large logfiles.

 It creates a bunch of other files from the data it collects as it passes over the logfile.

 Make sure you have sufficient disk space before running it.

 LogDissector was written both to showcase the power of AWK's associative arrays, and as a tool for daily use in systems administration.
** [[https://github.com/deuill/fawkss][deuill/fawkss: Fawkss is a CSS preprocessor for people who dislike CSS preprocessors]] :awk:github:top:css:preprocessor: 
 <2016-12-15 Thu 09:50>

 Fawkss [fɔːks] is a simple CSS preprocessor built as a single AWK (nawk/gawk/mawk) script. Syntactically, it borrows as much as possible from the SASS language, for convenience and familiarity.

 This is more of a fun project than a production-ready piece of software, though it may find some use for people needing simple additions to CSS without pulling in the massive ecosystem that comes with Less.js/SASS etc.
** [[https://github.com/miloyip/game-programmer][miloyip/game-programmer: A Study Path for Game Programmer]] :makefile:github:top:gaming:programmer:study:path: 
 <2016-12-15 Thu 09:52>

  A Study Path for Game Programmer
** [[https://github.com/Kickball/awesome-selfhosted][Kickball/awesome-selfhosted: This is a list of Free Software network services and web applications which can be hosted locally. Selfhosting is the process of locally hosting and managing applications instead of renting from SaaS providers.]] :makefile:github:top:list:selfhosting:services: 
 <2016-12-15 Thu 09:52>

  This is a list of Free Software network services and web applications which can be hosted locally. Selfhosting is the process of locally hosting and managing applications instead of renting from SaaS providers. https://reddit.com/r/selfhosted
** [[https://github.com/gitbucket/gitbucket][gitbucket/gitbucket: A Git platform powered by Scala with easy installation, high extensibility & github API compatibility]] :cpp:github:top:clone:service:repository:local: 
 <2016-12-15 Thu 09:53>


     easy installation
     high extensibility by plugins
     API compatibility with Github

 Features

 The current version of GitBucket provides a basic features below:

     Public / Private Git repository (http and ssh access)
     Repository viewer and online file editing
     Wiki
     Issues / Pull request
     Email notification
     Simple user and group management with LDAP integration
     Plug-in system

 If you want to try the development version of GitBucket, see Developer's Guide.
** [[https://github.com/ccrisan/motioneyeos][ccrisan/motioneyeos: A Video Surveillance OS For Single-board Computers]] :makefile:github:top:surveillance:video:os: 
 <2016-12-15 Thu 09:55>

 motionEyeOS is a Linux distribution that turns your single board computer into a video surveillance system. Check out the wiki for more details.

 Follow us on facebook: https://www.facebook.com/motioneyeos.
** [[https://github.com/phodal/developer][phodal/developer: developer roadmap. use growth https://github.com/phodal/growth replace this]] :makefile:github:top:developer:roadmap:path: 
 <2016-12-15 Thu 09:56>

  developer roadmap. use growth https://github.com/phodal/growth replace this http://developer.phodal.com/
** [[https://github.com/Polytonic/Glitter][Polytonic/Glitter: Dead Simple OpenGL (Graphics)]] :cmake:github:top:OpenGL: 
 <2016-12-15 Thu 09:58>

 Glitter is a dead simple boilerplate for OpenGL, intended as a starting point for the tutorials on learnopengl.com and open.gl. Glitter compiles and statically links every required library, so you can jump right into doing what you probably want: how to get started with OpenGL.
** [[https://github.com/rpavlik/cmake-modules][rpavlik/cmake-modules: My collection of CMake modules]] :cmake:github:top:collection:modules: 
 <2016-12-15 Thu 09:59>

 Ryan A. Pavlik, Ph.D.

 ryan.pavlik@gmail.com abiryan@ryand.net http://academic.cleardefinition.com
 Introduction

 This is a collection of CMake modules that I've produced during the course of a variety of software development. There are a number of find modules, especially for virtual reality and physical simulation packages, some utility modules of more general interest, and some patches or workarounds for CMake itself.

 Each module is generally documented, and depending on how busy I was when I created it, the documentation can be fairly complete.

 By now, it also includes contributions both from open-source projects I work on, as well as friendly strangers on the Internet contributing their modules. I am very grateful for improvements/fixes/pull requests!
** [[https://github.com/Akagi201/learning-cmake][Akagi201/learning-cmake: learning cmake]]        :cmake:github:top:learning: 
 <2016-12-15 Thu 10:00>

 This is a simple CMake practice project which contains some different scenarios.

     hello-world

     Demo a simplest CMake project.

     hello-world-clear

     Separate the output files and src files.

     hello-world-lib

     Demo how to make a static/shared library.

     hello-world-shared

     Demo how to utilize external static/shared library.

     curl

     Demo how to use cmake with curl.

     hello-module

     Demo how to use cmake find module.

     config-file

     Demo how to work with config.h.
** [[https://github.com/webmin/webmin][webmin/webmin: Webmin source code]] :perl:github:top:webmin:system:manage:web:interface: 
 <2016-12-15 Thu 10:01>

 Webmin is a web-based interface for system administration for Unix. 
 Using any browser that supports tables and forms, you can setup user
 accounts, Apache, internet services, DNS, file sharing and so on. 

 Webmin consists of a simple web server, and a number of CGI programs
 which directly update system files like /etc/inetd.conf and /etc/passwd.
 The web server and all CGI programs are written in Perl version 5, and use
 only the standard perl modules.
** [[https://github.com/mozilla-bteam/bmo][mozilla-bteam/bmo: bugzilla.mozilla.org source]]  :perl:github:top:bugzilla: 
 <2016-12-15 Thu 10:02>

 Bugzilla is a free bug-tracking system that is developed by an active
 community of volunteers in the Mozilla community. You can install and
 use it without having to pay any license fee.
** [[https://github.com/sitaramc/gitolite][sitaramc/gitolite: Hosting git repositories -- Gitolite allows you to setup git hosting on a central server, with very fine-grained access control and many (many!) more powerful features.]] :perl:github:top:git:hosting:local: 
 <2016-12-15 Thu 10:04>

  Hosting git repositories -- Gitolite allows you to setup git hosting on a central server, with very fine-grained access control and many (many!) more powerful features. http://wiki.github.com/sitaramc/gitol…
** [[https://github.com/major/MySQLTuner-perl][major/MySQLTuner-perl: MySQLTuner is a script written in Perl that will assist you with your MySQL configuration and make recommendations for increased performance and stability.]] :perl:github:top:mysql:assist:suggest: 
 <2016-12-15 Thu 10:08>

  MySQLTuner is a script written in Perl that will assist you with your MySQL configuration and make recommendations for increased performance and stability. http://mysqltuner.com
** [[https://github.com/thoughtbot/rcm][thoughtbot/rcm: rc file (dotfile) management]] :perl:github:top:dotfiles:management: 
 <2016-12-15 Thu 10:23>

 This is a management suite for dotfiles. See the tutorial to get started quickly.

 It assumes that you have a separate dotfiles directory, or are interested in creating one.

 The programs provided are rcup(1), mkrc(1), rcdn(1), and lsrc(1). They are explained in the tutorial and configured using rcrc(5).
** [[https://github.com/sullo/nikto][sullo/nikto: Nikto web server scanner]] :perl:github:top:web:server:scanner: 
 <2016-12-15 Thu 10:23>

 Nikto web server scanner - https://cirt.net/Nikto2

 Full documentation - https://cirt.net/nikto2-docs/

 Basic usage:
** [[https://github.com/k4rthik/git-cal][k4rthik/git-cal: github like contributions calendar on terminal]] :perl:github:top:contributions:visualization: 
 <2016-12-15 Thu 10:24>

  github like contributions calendar on terminal
** [[https://github.com/baedert/corebird][baedert/corebird: Native Gtk+ Twitter Client]] :vala:github:top:gtk:twitter:client: 
 <2016-12-15 Thu 10:27>

  Native Gtk+ Twitter Client http://corebird.baedert.org
** [[https://github.com/codito/gnome-pomodoro][codito/gnome-pomodoro: A time management utility for GNOME based on the pomodoro technique!]] :vala:github:top:gtk:gnome:pomodoro: 
 <2016-12-15 Thu 10:28>

  A time management utility for GNOME based on the pomodoro technique! http://gnomepomodoro.org/
** [[https://github.com/phw/peek][phw/peek: Simple animated Gif screen recorder for Linux]] :vala:github:top:gtk:gnome:record:gif: 
 <2016-12-15 Thu 10:28>

 A simple tool that allows you to record short animated GIF images from your screen.

 Currently only Linux with X11 is supported. Other Unix like systems using X11 should work as well. It is planned to also support Wayland and maybe other operating systems in the future.
** [[https://github.com/GNOME/vala][GNOME/vala: vala]]                                  :vala:github:top:source: 
 <2016-12-15 Thu 10:29>

 Vala is a programming language that aims to bring modern programming
 language features to GNOME developers without imposing any additional
 runtime requirements and without using a different ABI compared to
 applications and libraries written in C.

 valac, the Vala compiler, is a self-hosting compiler that translates
 Vala source code into C source and header files. It uses the GObject
 type system to create classes and interfaces declared in the Vala source
 code.
** [[https://github.com/pdfpc/pdfpc][pdfpc/pdfpc: A presenter console with multi-monitor support for PDF files.]] :vala:github:top:gnome:gtk:presentation:viewer: 
 <2016-12-15 Thu 10:30>

 pdfpc is a GTK based presentation viewer application for GNU/Linux which uses Keynote like multi-monitor output to provide meta information to the speaker during the presentation. It is able to show a normal presentation window on one screen, while showing a more sophisticated overview on the other one providing information like a picture of the next slide, as well as the left over time till the end of the presentation. The input files processed by pdfpc are PDF documents, which can be created using nearly any of today's presentation software.

 More information, including screenshots and a demo presentation, can be found at https://pdfpc.github.io/
** [[https://github.com/jessevdk/gitg][jessevdk/gitg: A GitX clone for gtk+/GNOME (**moved to git.gnome.org**)]] :vala:github:top:git:interface:gnome:gui: 
 <2016-12-15 Thu 10:31>

 gitg is a graphical user interface for git. It aims at being a small,
 fast and convenient tool to visualize the history of git repositories.
 Besides visualization, gitg also provides several utilities to manage your
 repository and commit your work.
** [[https://github.com/tiliado/nuvolaplayer][tiliado/nuvolaplayer: The third generation of Nuvola Player - cloud music integration for your Linux desktop]] :vala:github:top:player:cloud: 
 <2016-12-15 Thu 10:32>

  The third generation of Nuvola Player - cloud music integration for your Linux desktop https://tiliado.eu/nuvolaplayer/
** [[https://github.com/jangernert/FeedReader][jangernert/FeedReader: Modern desktop application designed to complement existing web-based RSS accounts.]] :vala:github:top:feed:rss:atom:gnome:reader: 
 <2016-12-15 Thu 10:32>

 FeedReader is a modern desktop application designed to complement existing web-based RSS accounts. It combines all the advantages of web based services like synchronisation across all your devices with everything you expect from a modern desktop application.
** [[https://github.com/holylobster/nuntius-linux][holylobster/nuntius-linux: Nuntius delivers notifications from your phone or tablet to your computer]] :vala:github:top:gnome:nautilus:phone:notifications: 
 <2016-12-15 Thu 10:33>

 Nuntius delivers notifications from your phone or tablet to your computer over Bluetooth.

 Nuntius is an Open Source project from HolyLobster.

 To use Nuntius you will need to install a companion tool on your phone or tablet and pair it via Bluetooth. You will also need to restart your session to auto-start nuntius.

 For more information on the project and the companion tools to install on the computer check https://github.com/holylobster
** [[https://github.com/Valama/valama][Valama/valama: Next generation Vala IDE]]              :vala:github:top:ide: 
 <2016-12-15 Thu 10:34>

  Next generation Vala IDE
** [[https://github.com/GNOME/geary][GNOME/geary: email client]]              :vala:github:top:mail:client:gnome: 
 <2016-12-15 Thu 10:34>

     Geary Email Client
     ------------------

   * Introduction

     Geary is an IMAP email client built for the GNOME desktop environment.  It
     allows you to read and send email with a simple, modern interface.

     Visit https://wiki.gnome.org/Apps/Geary to read about the current state of
     Geary's development and to make sure you're running the latest version.
** [[https://github.com/voldyman/MarkMyWords][voldyman/MarkMyWords: Markdown editor]] :vala:github:top:editor:markdown:gnome: 
 <2016-12-15 Thu 10:35>

 A minimal markdown editor
** [[https://github.com/valum-framework/valum][valum-framework/valum: Web micro-framework written in Vala]] :vala:github:top:web:micro:framework: 
 <2016-12-15 Thu 10:37>

 Valum is a Web micro-framework entirely written in the Vala programming language.
** [[https://github.com/vhf/free-programming-books][vhf/free-programming-books: Freely available programming books]] :markdown:github:top:books:free:programming: 
 <2016-12-15 Thu 10:45>

 This list initially was a clone of stackoverflow - List of Freely Available Programming Books by George Stocker. Now updated, with dead links gone and new content.
** [[https://github.com/karan/Projects][karan/Projects: A list of practical projects that anyone can solve in any programming language.]] :markdown:github:top:list:projects:solve: 
 <2016-12-15 Thu 10:47>

 A list of practical projects that anyone can solve in any programming language (See solutions). These projects are divided in multiple categories, and each category has its own folder.
** [[https://github.com/Developer-Y/cs-video-courses][Developer-Y/cs-video-courses: List of Computer Science courses with video lectures.]] :markdown:github:top:courses:video: 
 <2016-12-15 Thu 10:50>

  List of Computer Science courses with video lectures.
** [[https://github.com/JoshCheek/seeing_is_believing#editor-integration][JoshCheek/seeing_is_believing: Displays the results of every line of code in your file]] :ruby:github:top:evaluates:debug: 
 <2016-12-15 Thu 10:53>

 Evaluates Ruby code, recording the results of each line. Integrates with any extensible editor (I've integrated it with many already, see the list). If you like Swift Playgrounds, you'll like SiB.
** [[https://github.com/tldr-pages/tldr][tldr-pages/tldr: Simplified and community-driven man pages]] :tex:github:top:man: 
 <2016-12-15 Thu 10:55>

 A collection of simplified and community-driven man pages.
** [[https://github.com/AllenDowney/ThinkPython2][AllenDowney/ThinkPython2: LaTeX source and supporting code for Think Python, 2nd edition, by Allen Downey.]] :tex:github:top:python:book: 
 <2016-12-15 Thu 10:56>

 LaTeX source, code examples, and exercise solutions for Think Python, 2nd edition, by Allen Downey.
** [[https://github.com/dennis714/RE-for-beginners][dennis714/RE-for-beginners: "Reverse Engineering for Beginners" free book]] :tex:github:top:reverse:engineering:book: 
 <2016-12-15 Thu 10:57>

  "Reverse Engineering for Beginners" free book http://beginners.re
** [[https://github.com/cplusplus/draft][cplusplus/draft: C++ standards drafts]] :tex:cpp:github:top:book:drafts:standards: 
 <2016-12-15 Thu 10:57>

  C++ standards drafts http://www.open-std.org/jtc1/sc22/wg21/
** [[https://github.com/matze/mtheme][matze/mtheme: A modern LaTeX Beamer theme]]    :tex:beamer:theme:github:top: 
 <2016-12-15 Thu 10:58>

 Metropolis is a simple, modern Beamer theme suitable for anyone to use. It tries to minimize noise and maximize space for content; the only visual flourish it offers is an (optional) progress bar added to each slide. The core design principles of the theme were described in a blog post here.
** [[https://github.com/crypto101/book][crypto101/book: Crypto 101, the introductory book on cryptography.]] :tex:github:top:cryptography:book: 
 <2016-12-15 Thu 10:58>

  Crypto 101, the introductory book on cryptography. https://www.crypto101.io/
** [[https://github.com/soulmachine/machine-learning-cheat-sheet][soulmachine/machine-learning-cheat-sheet: Classical equations and diagrams in machine learning]] :tex:github:top:machine:learning:cheatsheets: 
 <2016-12-15 Thu 10:59>

  Classical equations and diagrams in machine learning http://soulmachine.me
** [[https://github.com/jbrownlee/CleverAlgorithms][jbrownlee/CleverAlgorithms: An open source book that describes a large number of algorithmic techniques from the the fields of Biologically Inspired Computation, Computational Intelligence and Metaheuristics in a complete, consistent, and centralized manner such that they are accessible, usable, and understandable.]] :tex:github:top:book:algorithmic: 
 <2016-12-15 Thu 10:59>

  An open source book that describes a large number of algorithmic techniques from the the fields of Biologically Inspired Computation, Computational Intelligence and Metaheuristics in a complete, consistent, and centralized manner such that they are accessible, usable, and understandable. http://CleverAlgorithms.com
** [[https://github.com/Microsoft/checkedc][Microsoft/checkedc: Checked C is an extension of C that adds bounds checking to C. This repo contains the specification for the extension, test code, and samples.]] :tex:c:github:book:checking:prevent:programming:errors: 
 <2016-12-15 Thu 11:01>

 Checked C is an extension to C that adds static and dynamic checking to detect or prevent common programming errors such as buffer overruns, out-of-bounds memory accesses, and incorrect type casts. This repo contains the specification for the extension, test code, and samples. For the latest version of the specification and the draft of the next version, see the Checked C releases page.

 We are creating a modified version of LLVM/clang that supports Checked C. The code for the modified version of LLVM/clang lives in the Checked C clang repo and the Checked C LLVM repo.
** [[https://github.com/karlseguin/the-little-mongodb-book][karlseguin/the-little-mongodb-book: The Little MongoDB Book]] :tex:github:top:MongoDB:book: 
 <2016-12-15 Thu 11:01>

  The Little MongoDB Book http://openmymind.net/2011/3/28/The-L…
** [[https://github.com/mavam/stat-cookbook][mavam/stat-cookbook: The probability and statistics cookbook]] :tex:github:top:probability:statistics:cookbook: 
 <2016-12-15 Thu 11:02>

 The probability and statistics cookbook contains a succinct representation of various topics in probability theory and statistics. It provides a comprehensive mathematical reference reduced to its essence, rather than aiming for elaborate explanations.

 Feel encouraged to extend the cookbook by forking it and submitting pull requests
** [[https://github.com/HoTT/book][HoTT/book: A textbook on informal homotopy type theory]] :tex:github:top:math:homotopy:book: 
 <2016-12-15 Thu 11:02>

 This is a textbook on informal homotopy type theory. It is part of the Univalent foundations of mathematics project that took place at the Institute for Advanced Study in 2012/13.
** [[https://github.com/karlseguin/the-little-redis-book][karlseguin/the-little-redis-book]]               :tex:github:top:book:redis: 
 <2016-12-15 Thu 11:03>

 The Little Redis Book is a free book introducing Redis.

 The book was written by Karl Seguin, with Perry Neal's assistance.

 If you liked this book, maybe you'll also like The Little MongoDB Book.
** [[https://github.com/soulmachine/acm-cheat-sheet][soulmachine/acm-cheat-sheet: Acm Cheat Sheet]] :tex:github:top:c:cpp:acm:cheatsheets: 
 <2016-12-15 Thu 11:03>

  Acm Cheat Sheet
** [[https://github.com/ieure/sicp][ieure/sicp: Structure and Interpretation of Computer Programs, Second Edition]] :tex:github:top:computer:programs:structure:book: 
 <2016-12-15 Thu 11:03>

  Structure and Interpretation of Computer Programs, Second Edition http://mitpress.mit.edu/sicp/
** [[https://github.com/manuels/texlive.js][manuels/texlive.js: Compiling LaTeX (TeX live) in your browser]] :tex:github:top:LaTeX:browser:compiling: 
 <2016-12-15 Thu 11:04>

  Compiling LaTeX (TeX live) in your browser http://manuels.github.com/texlive.js/
** [[https://github.com/airbnb/javascript][airbnb/javascript: JavaScript Style Guide]] :JavaScript:github:top:style:guide: 
 <2016-12-15 Thu 11:05>

  JavaScript Style Guide
** [[https://github.com/isocpp/CppCoreGuidelines][isocpp/CppCoreGuidelines: The C++ Core Guidelines are a set of tried-and-true guidelines, rules, and best practices about coding in C++]] :cpp:github:top:guidelines: 
 <2016-12-15 Thu 11:06>

 The C++ Core Guidelines are a collaborative effort led by Bjarne Stroustrup, much like the C++ language itself. They are the result of many person-years of discussion and design across a number of organizations. Their design encourages general applicability and broad adoption but they can be freely copied and modified to meet your organization's needs.
** [[https://github.com/raywenderlich/objective-c-style-guide][raywenderlich/objective-c-style-guide: A style guide that outlines the coding conventions for raywenderlich.com]] :c:github:top:style:guide: 
 <2016-12-15 Thu 11:06>

 This style guide outlines the coding conventions for raywenderlich.com.
** [[https://github.com/trending/jupyter-notebook][Trending Jupyter Notebook repositories on GitHub today]] :jupyter:github:top:trending: 
 <2016-12-15 Thu 11:07>
** [[https://github.com/rougier/numpy-100][rougier/numpy-100: 100 numpy exercises (100% complete)]] :jupyter:github:top:numpy:exercises: 
 <2016-12-15 Thu 11:08>

  100 numpy exercises (100% complete)
** [[https://github.com/gentoo/gentoo][gentoo/gentoo: The official mirror the Gentoo ebuild repository]] :gentoo:github:top:ebuild:repository:official: 
 <2016-12-15 Thu 11:09>

  The official mirror the Gentoo ebuild repository https://wiki.gentoo.org/wiki/Gentoo_G…
** [[https://github.com/gentoo/portage][gentoo/portage: Portage Package Manager - this is just a mirror, send patches to <gentoo-portage-dev@lists.gentoo.org>]] :python:gentoo:github:top:portage:source: 
 <2016-12-15 Thu 11:10>

  Portage Package Manager - this is just a mirror, send patches to <gentoo-portage-dev@lists.gentoo.org>

Portage is a package management system based on ports collections. The
Package Manager Specification Project (PMS) standardises and documents
the behaviour of Portage so that the Portage tree can be used by other
package managers.
** [[https://github.com/fabric/fabric][fabric/fabric: Simple, Pythonic remote execution and deployment.]] :python:github:top:ssh:multiple:remote:executing: 
 <2016-12-15 Thu 11:11>

 Fabric is a Python (2.5-2.7) library and command-line tool for streamlining the use of SSH for application deployment or systems administration tasks.

 It provides a basic suite of operations for executing local or remote shell commands (normally or via sudo) and uploading/downloading files, as well as auxiliary functionality such as prompting the running user for input, or aborting execution.

 Typical use involves creating a Python module containing one or more functions, then executing them via the fab command-line tool. Below is a small but complete "fabfile" containing a single task:
** [[https://github.com/joke2k/faker][joke2k/faker: Faker is a Python package that generates fake data for you.]] :python:github:top:fake:data:generates: 
 <2016-12-15 Thu 11:12>

 Faker is a Python package that generates fake data for you. Whether you need to bootstrap your database, create good-looking XML documents, fill-in your persistence to stress test it, or anonymize data taken from a production service, Faker is for you.
** [[https://github.com/ryanoasis/nerd-fonts][ryanoasis/nerd-fonts: Collection of 35+ patched fonts (over 74.5k possible variations) with a FontForge font patcher python script for Powerline, Font Awesome, Octicons, Devicons, and other icon fonts. Includes fonts: SourceCodePro, Hack, Droid Sans, Meslo, AnonymousPro, ProFont, Inconsolata, and more]] :python:github:top:fonts: 
 <2016-12-15 Thu 11:13>

  :abcd: Collection of 35+ patched fonts (over 74.5k possible variations) with a FontForge font patcher python script for Powerline, Font Awesome, Octicons, Devicons, and other icon fonts. Includes fonts: SourceCodePro, Hack, Droid Sans, Meslo, AnonymousPro, ProFont, Inconsolata, and more http://ryanlmcintyre.com/nerd-fonts/

Nerd Fonts is a project that patches developer targeted fonts with a high number of glyphs (icons). Specifically to add a high number of extra glyphs from popular 'iconic fonts' such as Font Awesome, Devicons, Octicons, and others.
** [[https://github.com/seatgeek/fuzzywuzzy][seatgeek/fuzzywuzzy: Fuzzy String Matching in Python]] :python:github:top:string:differences:matching: 
 <2016-12-15 Thu 11:14>

 Fuzzy string matching like a boss. It uses Levenshtein Distance to calculate the differences between sequences in a simple-to-use package.
 Requirements

     Python 2.4 or higher
     difflib
     python-Levenshtein (optional, provides a 4-10x speedup in String Matching, though may result in [differing results for certain cases](https://github.com/seatgeek/fuzzywuzzy/issues/128))
** [[https://github.com/ClusterHQ/flocker][ClusterHQ/flocker: Container data volume manager for your Dockerized application]] :python:github:top:docker:container:data:manage: 
 <2016-12-15 Thu 11:15>

 Flocker is an open-source Container Data Volume Manager for your Dockerized applications.

 By providing tools for data migrations, Flocker gives ops teams the tools they need to run containerized stateful services like databases in production.

 Unlike a Docker data volume which is tied to a single server, a Flocker data volume, called a dataset, is portable and can be used with any container, no matter where that container is running.

 Flocker manages Docker containers and data volumes together. When you use Flocker to manage your stateful microservice, your volumes will follow your containers when they move between different hosts in your cluster.

 You can also use Flocker to manage only your volumes, while continuing to manage your containers however you choose.
** [[https://github.com/ajalt/fuckitpy][ajalt/fuckitpy: The Python error steamroller.]] :python:github:top:error:fuck: 
 <2016-12-15 Thu 11:15>

 FuckIt.py uses state-of-the-art technology to make sure your Python code runs whether it has any right to or not. Some code has an error? Fuck it.
** [[https://github.com/lengstrom/fast-style-transfer][lengstrom/fast-style-transfer: Fast Style Transfer in TensorFlow ⚡🖥🎨🖼]] :python:github:top:image:video:styles: 
 <2016-12-15 Thu 11:17>

 Add styles from famous paintings to any photo in a fraction of a second! You can even style videos!

 It takes 100ms on a 2015 Titan X to style the MIT Stata Center (1024×680) like Udnie, by Francis Picabia.

 Our implementation is based off of a combination of Gatys' A Neural Algorithm of Artistic Style, Johnson's Perceptual Losses for Real-Time Style Transfer and Super-Resolution, and Ulyanov's Instance Normalization.
** [[https://github.com/emacs-mirror/emacs][emacs-mirror/emacs: Mirror of GNU Emacs]]   :emacs:github:top:source:mirror: 
 <2016-12-15 Thu 11:21>

  Mirror of GNU Emacs http://www.gnu.org/software/emacs/
** [[https://github.com/jorgenschaefer/elpy][jorgenschaefer/elpy: Emacs Python Development Environment]] :emacs:github:top:python:ide: 
 <2016-12-15 Thu 11:22>

 Elpy is an Emacs package to bring powerful Python editing to Emacs. It combines and configures a number of other packages, both written in Emacs Lisp as well as Python.
** [[https://github.com/gabrielelanaro/emacs-for-python][gabrielelanaro/emacs-for-python: Collection of emacs extensions specifically collected for python development, with workflow guidelines!]] :emacs:github:top:python:collection: 
 <2016-12-15 Thu 11:22>

  Collection of emacs extensions specifically collected for python development, with workflow guidelines! http://gabrielelanaro.github.com/emac…
** [[https://github.com/ch11ng/exwm][ch11ng/exwm: Emacs X Window Manager]] :emacs:github:top:window:manager:xorg: 
 <2016-12-15 Thu 11:23>

  Emacs X Window Manager
** [[https://github.com/pashky/restclient.el][pashky/restclient.el: HTTP REST client tool for emacs]] :emacs:github:top:http:rest:web:client: 
 <2016-12-15 Thu 11:24>

 This is a tool to manually explore and test HTTP REST webservices. Runs queries from a plain-text query sheet, displays results as a pretty-printed XML, JSON and even images.
** [[https://github.com/magnars/dash.el][magnars/dash.el: A modern list library for Emacs]] :emacs:github:top:library:list: 
 <2016-12-15 Thu 11:25>

  A modern list library for Emacs
** [[https://github.com/wking/rss2email][wking/rss2email: open-source tool for Windows, Mac OS and UNIX for getting news from RSS feeds in email]] :python:github:top:rss:email:atom:feed: 
 <2016-12-15 Thu 11:41>

  open-source tool for Windows, Mac OS and UNIX for getting news from RSS feeds in email http://pypi.python.org/pypi/rss2email/
** [[https://github.com/JakeWharton/pidcat][JakeWharton/pidcat: Colored logcat script which only shows log entries for a specific application package.]] :python:github:top:log:pid:process:color:logcat: 
 <2016-12-15 Thu 11:51>

 An update to Jeff Sharkey's excellent logcat color script which only shows log entries for processes from a specific application package.

 During application development you often want to only display log messages coming from your app. Unfortunately, because the process ID changes every time you deploy to the phone it becomes a challenge to grep for the right thing.

 This script solves that problem by filtering by application package. Supply the target package as the sole argument to the python script and enjoy a more convenient development process.
** [[https://github.com/etsy/logster][etsy/logster: Parse log files, generate metrics for Graphite and Ganglia]] :python:github:top:log:read:metrics:Graphite:Ganglia: 
 <2016-12-15 Thu 11:51>

 Logster is a utility for reading log files and generating metrics to configurable outputs. It is ideal for visualizing trends of events that are occurring in your application/system/error logs. For example, you might use logster to graph the number of occurrences of HTTP response code that appears in your web server logs.

 Logster maintains a cursor, via a tailer, on each log file that it reads so that each successive execution only inspects new log entries. In other words, a 1 minute crontab entry for logster would allow you to generate near real-time trends in the configured output for anything you want to measure from your logs.

 This tool is made up of a framework script, logster, and parsing classes that are written to accommodate your specific log format. Sample parsers are included in this distribution. The parser classes essentially read a log file line by line, apply a regular expression to extract useful data from the lines you are interested in, and then aggregate that data into metrics that will be submitted to the configured output. The sample parsers should give you some idea of how to get started writing your own. A list of available parsers can be found on the Parsers page.

 Graphite, Ganglia, Amazon CloudWatch, Nagios, StatsD and stdout outputs are provided, and Logster also supports the use of third-party output classes. A list of available output classes can be found on the Outputs page.
** [[https://github.com/karandesai-96/yolog][karandesai-96/yolog: Beautify your Git Logs ! { v0.3.0 pre release! Better features upcoming soon- "Watch" to keep a track }]] :python:github:top:git:log:beautify:color: 
 <2016-12-15 Thu 12:25>

  Beautify your Git Logs ! { v0.3.0 pre release! Better features upcoming soon- "Watch" to keep a track }
** [[https://pr0git.blogspot.ru/2015/02/git_4.html][Pro Git: Настройка русских шрифтов в Git]] :git:configuration:russian:files:encoding: 
 <2016-12-15 Thu 15:02>

 Вот как выводит консоль имена файлов на русском языке.

 Чтобы это подправить дадим команду

 $ git config --local core.quotepath false
** [[https://weblate.org/en/][Weblate - web-based translation]] :web:translation:tool:version:control:checks:linking: 
 <2016-12-16 Fri 02:43>

  Weblate is a free web-based translation tool with tight version control integration. It features simple and clean user interface, propagation of translations across components, quality checks and automatic linking to source files.
** [[https://weblate.org/en/hosting/][Hosting Weblate]]                                     :weblate:hosting:free: 
 <2016-12-16 Fri 02:48>

  We can host translations for your commercial or free software projects. You can see summary of hosting plans below. Should you have any questions or look for hosting of bigger projects, don't hesitate to get in touch with us.
** [[http://dirk.eddelbuettel.com/code/anytime.html][anytime: Convert Any Input to Parsed Date or Datetime]] :R:time:date:conversion: 
 <2016-12-16 Fri 02:49>

 anytime

 Convert Any Input to Parsed Date or Datetime
 Motivation

 R excels at computing with dates, and times. Using typed representation for your data is highly recommended not only because of the functionality offered but also because of the added safety stemming from proper representation.

 But there is a small nuisance cost in interactive work as well as in programming. Users must have told as.POSIXct() about a million times that the origin is (of course) the epoch. Do we really have to say it a million more times? Similarly, when parsing dates that are some recogniseable form of YYYYMMDD format, do we really have to manually convert from integer or numeric or factor or ordered to character first? Having one of several common separators and/or date / time month forms (YYYY-MM-DD, YYYY/MM/DD, YYYYMMDD, YYYY-mon-DD and so on, with or without times), do we really need a format string?

 Or could a smart converter function do this? anytime() aims to be that general purpose converter returning a proper POSIXct (or Date) object nomatter the input (provided it was somewhat parseable), relying on Boost date_time for the (efficient, performant) conversion.
** [[https://wammu.eu/][Wammu and Gammu]]    :python:phone:manage:system:contacts:calendar:messages: 
 <2016-12-16 Fri 02:52>



 Wammu is a program to manage data in your cell phone such as contacts, calendar or messages. Gammu SMSD is a service to mass send and receive SMS messages. Both these are built on top of Gammu library, which provides abstraction layer to work with different cell phones from different vendors (including Nokia, Sony-Ericsson, Motorola, Samsung, Siemens, Huawei and others).

** [[https://github.com/ecpolley/SuperLearner][ecpolley/SuperLearner: Current version of the SuperLearner R package]] :R:github:top:algorithms: 
 <2016-12-16 Fri 04:35>

 This is the current version of the SuperLearner R package (version 2.*).

 Features

     Automatic optimal predictor ensembling via cross-validation.
     Includes dozens of algorithms including Random Forest, GBM, XGBoost, BART, Elastic Net, and Neural Networks.
     Integrates with caret to support even more algorithms.
     Includes framework to quickly add custom algorithms to the ensemble
     Visualize the performance of each algorithm using built-in plotting.
     Easily incorporate multiple hyperparameter configurations for each algorithm into the ensemble.
     Add new algorithms or change the default parameters for existing ones.
     Screen variables (feature selection) based on univariate association, Random Forest, Elastic Net, et al. or a custom screening algorithms.
     Multi-core and multi-node parallelization for scalability.
     External cross-validation to estimate the performance of the ensembling predictor.
     Ensemble can optimize for any target metric: mean-squared error, AUC, log likelihood, etc.
     Includes framework to provide custom loss functions and stacking algorithms
** [[https://github.com/csgillespie/efficientR][csgillespie/efficientR: Efficient R programming: a book]] :tex:R:github:top:book:programming: 
 <2016-12-16 Fri 04:36>

  Efficient R programming: a book https://csgillespie.github.io/efficie…
** [[https://github.com/johnmyleswhite/ML_for_Hackers][johnmyleswhite/ML_for_Hackers: Code accompanying the book "Machine Learning for Hackers"]] :R:github:top:book:addon: 
 <2016-12-16 Fri 04:37>

  Code accompanying the book "Machine Learning for Hackers" http://shop.oreilly.com/product/06369…
** [[https://github.com/hadley/devtools][hadley/devtools: Tools to make an R developer's life easier]] :R:github:top:begin:easy: 
 <2016-12-16 Fri 04:38>

 The aim of devtools is to make package development easier by providing R functions that simplify common tasks.

 An R package is actually quite simple. A package is a template or set of conventions that structures your code. This not only makes sharing code easy, it reduces the time and effort required to complete you project: following a template removes the need to have to think about how to organize things and paves the way for the creation of standardised tools that can further accelerate your progress.

 While package development in R can feel intimidating, devtools does every thing it can to make it less so. In fact, devtools comes with a small guarantee: if you get an angry e-mail from an R-core member because of a bug in devtools, forward me the email and your address and I'll mail you a card with a handwritten apology.

 devtools is opinionated about package development. It requires that you use roxygen2 for documentation and testthat for testing. Not everyone would agree with this approach, and they are by no means perfect. But they have evolved out of the experience of writing over 30 R packages.

 I'm always happy to hear about what doesn't work for you and where devtools gets in your way. Either send an email to the rdevtools mailing list or file an issue at the GitHub repository.
** [[https://github.com/gnunn1/terminix][gnunn1/terminix: A tiling terminal emulator for Linux using GTK+ 3]] :D:github:top:gnome:terminal:alternative: 
 <2016-12-16 Fri 04:39>

 Terminix is a tiling terminal emulator which uses the VTE GTK+ 3 widget with the following features:

     Layout terminals in any fashion by splitting them horizontally or vertically
     Terminals can be re-arranged using drag and drop both within and between windows
     Terminals can be detached into a new window via drag and drop
     Input can be synchronized between terminals so commands typed in one terminal are replicated to the others
     The grouping of terminals can be saved and loaded from disk
     Terminals support custom titles
     Color schemes are stored in files and custom color schemes can be created by simply creating a new file
     Transparent background
     Background images
     Quake mode support (i.e. drop-down terminal)
     Custom hyperlinks
     Automatic (triggered) profile switches based on hostname and directory
     Supports notifications when processes are completed out of view. Requires the Fedora notification patches for VTE
     Experimental trigger support (Requires patched VTE, see wiki )
     Experimental badge support (Requires patched VTE, see wiki
** [[https://github.com/revolunet/PythonBooks][revolunet/PythonBooks: Directory of free Python ebooks]] :python:github:top:book: 
 <2016-12-16 Fri 04:40>

 PythonBooks is a showcase of the best free ebooks about Python.

 Learn Python, discover new fields, and muscle your brain for free !

 check it out : http://pythonbooks.revolunet.com

 We also have a javascript version : http://jsbooks.revolunet.com
** [[https://github.com/AndreyAkinshin/Russian-Phd-LaTeX-Dissertation-Template][AndreyAkinshin/Russian-Phd-LaTeX-Dissertation-Template: LaTeX-template for russian Phd thesis]] :tex:github:top:template:russian: 
 <2016-12-16 Fri 04:44>

  LaTeX-template for russian Phd thesis
** [[https://github.com/jdavis/latex-homework-template][jdavis/latex-homework-template: The LaTeX file that I use as the base for all my homeworks in university.]] :tex:github:top:homeworks:university: 
 <2016-12-16 Fri 04:45>

 The LaTeX file that I use as the base for all my homeworks in university.
 Features

 Here are just a few features of this homework template.

     Title page.
     Problem markers.
     Configurable problem numbers (see the last 3 problems for an example).
     Some commonly used math macros.
** [[http://www.latextemplates.com/][LaTeX Templates]]                                        :tex:templates:com: 
 <2016-12-16 Fri 04:47>

 The best source of free quality LaTeX templates
** [[https://github.com/alexjc/neural-enhance][alexjc/neural-enhance: Super Resolution for images using deep learning.]] :python:github:top:resolution:increase: 
 <2016-12-16 Fri 06:02>

  Super Resolution for images using deep learning.
** [[https://github.com/phusion/baseimage-docker][phusion/baseimage-docker: A minimal Ubuntu base image modified for Docker-friendliness]] :python:github:top:ubuntu:minimal:docker:image: 
 <2016-12-16 Fri 06:02>

  A minimal Ubuntu base image modified for Docker-friendliness http://phusion.github.io/baseimage-do…
** [[https://github.com/david-gpu/srez][david-gpu/srez: Image super-resolution through deep learning]] :python:github:top:image:resolution:increase: 
 <2016-12-16 Fri 06:04>

 Image super-resolution through deep learning. This project uses deep learning to upscale 16x16 images by a 4x factor. The resulting 64x64 images display sharp features that are plausible based on the dataset that was used to train the neural net.

 Here's an random, non cherry-picked, example of what this network can do. From left to right, the first column is the 16x16 input image, the second one is what you would get from a standard bicubic interpolation, the third is the output generated by the neural net, and on the right is the ground truth.
** [[https://github.com/saiprashanths/dl-docker][saiprashanths/dl-docker: An all-in-one Docker image for deep learning. Contains all the popular DL frameworks (TensorFlow, Theano, Torch, Caffe, etc.)]] :docker:github:top:neural:learning: 
 <2016-12-16 Fri 06:05>

 Here are Dockerfiles to get you up and running with a fully functional deep learning machine. It contains all the popular deep learning frameworks with CPU and GPU support (CUDA and cuDNN included). The CPU version should work on Linux, Windows and OS X. The GPU version will, however, only work on Linux machines. See OS support for details

 If you are not familiar with Docker, but would still like an all-in-one solution, start here: What is Docker?. If you know what Docker is, but are wondering why we need one for deep learning, see this
** [[https://github.com/ascribe/image-match][ascribe/image-match: Quickly search over billions of images]] :python:github:top:image:search: 
 <2016-12-16 Fri 06:07>

 image-match is a simple (now Python 3!) package for finding approximate image matches from a corpus. It is similar, for instance, to pHash, but includes a database backend that easily scales to billions of images and supports sustained high rates of image insertion: up to 10,000 images/s on our cluster!

 Based on the paper An image signature for any kind of image, Wong et al. There is an existing reference implementation which may be more suited to your needs.

 The folks over at Pavlov have released an excellent containerized version of image-match for easy scaling and deployment.
** [[https://github.com/paarthneekhara/text-to-image][paarthneekhara/text-to-image: Text to image synthesis using thought vectors]] :python:github:top:text:to:image: 
 <2016-12-16 Fri 06:08>

 This is an experimental tensorflow implementation of synthesizing images from captions using Skip Thought Vectors. The images are synthesized using the GAN-CLS Algorithm from the paper Generative Adversarial Text-to-Image Synthesis. This implementation is built on top of the excellent DCGAN in Tensorflow. The following is the model architecture. The blue bars represent the Skip Thought Vectors for the captions.
** [[https://github.com/ParhamP/altify][ParhamP/altify: Uses deep learning to caption images in an HTML file and fills out its alternative text attributes with the related caption]] :python:github:top:image:auto:search:alt:text: 
 <2016-12-16 Fri 06:09>

 Altify automizes the task of inserting alternative text attributes for image tags. Altify uses Microsoft Computer Vision API's deep learning algorithms to caption images in an HTML file and returns a new HTML file in which alt attributes are filled out with their corresponding captions.

 Notice: Altify will now ignore any image tag whose alt attribute has content or is just an empty string. (In compliance with standard web practices)
** [[https://github.com/Pythonity/icon-font-to-png][Pythonity/icon-font-to-png: Python script (and library) for exporting icons from icon fonts (e.g. Font Awesome, Octicons) as PNG images.]] :python:github:top:fonts:to:images:extracts: 
 <2016-12-16 Fri 06:10>

 Python script (and library) for easy and simple export of icons from web icon fonts (e.g. Font Awesome, Octicons) as PNG images. The best part is the provided shell script, but you can also use it's functionality directly in your (probably awesome) Python project.

 There's also font-awesome-to-png script for backwards compatibility with the first iteration of the concept.
** [[https://github.com/agschwender/pilbox][agschwender/pilbox: An image procesing application server]] :python:github:top:image:thumbnailer:service: 
 <2016-12-16 Fri 06:11>

 Pilbox is an image processing application server built on Python's Tornado web framework using the Python Imaging Library (Pillow). It is not intended to be the primary source of images, but instead acts as a proxy which requests images and resizes them as desired.
** [[https://github.com/jrosebr1/imutils][jrosebr1/imutils: A series of convenience functions to make basic image processing operations such as translation, rotation, resizing, skeletonization, and displaying Matplotlib images easier with OpenCV and Python.]] :python:github:top:image:manipulation:library: 
 <2016-12-16 Fri 06:12>

  A series of convenience functions to make basic image processing operations such as translation, rotation, resizing, skeletonization, and displaying Matplotlib images easier with OpenCV and Python.
** [[https://github.com/atizo/PyTagCloud][atizo/PyTagCloud: Create beautiful tag clouds as images or HTML]] :python:github:top:cloud:of:text:image:html: 
 <2016-12-16 Fri 06:13>

 PyTagCloud let you create simple tag clouds inspired by http://www.wordle.net/

 Currently, the following output formats have been written and are working:

     PNG images
     HTML/CSS code

 If you have ideas for other formats please let us know.
** [[https://github.com/fengsp/color-thief-py][fengsp/color-thief-py: Grabs the dominant color or a representative color palette from an image. Uses Python and Pillow.]] :python:github:top:image:dominant:color: 
 <2016-12-16 Fri 06:14>

  Grabs the dominant color or a representative color palette from an image. Uses Python and Pillow. http://lokeshdhakar.com/projects/colo…
** [[https://github.com/blang/latex-docker][blang/latex-docker: Docker-based latex compilation]] :docker:github:top:latex:image: 
 <2016-12-16 Fri 06:26>

 This container helps compiling latex sources without the need to install all latex packages on your system.

 Check out my blog post.
** Свободная литература по программированию    :rosa:journal:missing:article: 
 <2016-12-16 Fri 07:51>

 Свободная литература по программированию
** Приказать нельзя искать кнопочки            :rosa:journal:missing:article:
 <2016-12-16 Fri 07:52>

 Приказать нельзя
 искать кнопочки
** Рабочее окружение — фундамент комфортной работы :rosa:journal:missing:article:
 <2016-12-16 Fri 07:54>

 Рабочее окружение —
 фундамент комфортной работы
** [[https://github.com/laurent22/massren][laurent22/massren: massren - easily rename multiple files using your text editor]] :go:github:top:mass:rename:files:text:editor: 
 <2016-12-16 Fri 07:59>

  massren - easily rename multiple files using your text editor
** [[https://github.com/jlevy/repren][jlevy/repren: Rename anything]] :python:github:top:rename:files:regular:expression: 
 <2016-12-16 Fri 08:00>



 Repren is a simple but flexible, command-line tool for rewriting file contents according to a set of regular expression patterns, and renaming or moving files. Essentially, it is a general-purpose, brute-force text file refactoring tool.

 For example, repren can perform a Java refactor that involves renaming the Java class filename, as well as every occurrence of that class name in code or documentation. Or it can change the naming scheme for files, so every path like foo.1.jpg is renamed foo-1.jpg. Or it can move files by rewriting parent directories.

 It's strives to be more powerful and thoughtful than usual options like perl -pie, rpl, sed, or rename:

     It can do search-and-replace, file renaming, or both.
     It allows file renaming on full paths, including moving files, creating directories, or rewriting directory hierarchies.
     It supports fully expressive regular expressions, with capturing groups and back substitutions.
     It performs simultaneous group renamings, i.e. rename "foo" as "bar", and "bar" as "foo" at once, without requiring a temporary intermediate rename.
     It is careful. It has a nondestructive mode, and prints clear stats on its changes. It leaves backups. File operations are done atomically, so interruptions never leave a previously existing file truncated or partly edited.
     It supports helpful variations like an option to replace on word breaks, so you avoid splitting a word, and "case-preserving" renames that let you find and rename identifiers with case variants (lowerCamel, UpperCamel, lower_underscore, and UPPER_UNDERSCORE) consistently.
     It has this nice documentaion!
** What is asrm                                       :reading:trending:asrm: 
 <2016-12-16 Fri 15:34>

 |image0|\
** [[https://www.youtube.com/watch?v=3T00X_sNg4Q][Learn You Some Lisp for Great Good - YouTube]] :emacs:video:youtube:lisp:programming:tutorial: 
 <2016-12-16 Fri 15:42>

 Slides and audio from a presentation given by Howard Abrams at the Open Source Bridge (@osbridge) on 24 Jun 2014 in Portland, Oregon.

 The thesis for the presentation encouraged programmers to learn Lisp in order to be a better programmer.
** [[https://github.com/google/lisp-koans][google/lisp-koans: Common Lisp Koans is a language learning exercise in the same vein as the ruby koans, python koans and others. It is a port of the prior koans with some modifications to highlight lisp-specific features. Structured as ordered groups of broken unit tests, the project guides the learner progressively through many Common Lisp language features.]] :clisp:github:top:tutorial: 
 <2016-12-16 Fri 15:58>

  Common Lisp Koans is a language learning exercise in the same vein as the ruby koans, python koans and others. It is a port of the prior koans with some modifications to highlight lisp-specific features. Structured as ordered groups of broken unit tests, the project guides the learner progressively through many Common Lisp language features.
** [[https://github.com/rlister/org-present][rlister/org-present: Ultra-minimalist presentation minor-mode for Emacs org-mode.]] :emacs:github:top:org:mode:presentation:mode: 
 <2016-12-16 Fri 16:29>

 This is meant to be an extremely minimalist presentation tool for Emacs org-mode. Simply layout your presentation with each slide under a top-level header, start the minor mode with 'org-present', and page through each slide with left/right keys.
** [[https://www.gnu.org/software/emacs/manual/html_mono/eintr.html][Programming in Emacs Lisp]]         :emacs:github:top:lisp:introduction:gnu: 
 <2016-12-16 Fri 16:44>

 The homepage for GNU Emacs is at http://www.gnu.org/software/emacs/.
 To view this manual in other formats, click here.

 This is an Introduction to Programming in Emacs Lisp, for people who are not programmers.
** Emacs Lisp features                                  :emacs:lisp:features: 
 <2016-12-16 Fri 16:50>

    Because Emacs Lisp is designed for use in an editor, it has special
 features for scanning and parsing text as well as features for handling
 files, buffers, displays, subprocesses, and so on.  Emacs Lisp is
 closely integrated with the editing facilities; thus, editing commands
 are functions that can also conveniently be called from Lisp programs,
 and parameters for customization are ordinary Lisp variables.
** An Introduction to Emacs Lisp Programming :emacs:lisp:introduction:beginner: 
 <2016-12-16 Fri 16:52>
** [[https://github.com/seanirby/evalator][seanirby/evalator: Emacs package for interactive evaluation and transformation of data.]] :emacs:github:top:debugging:keybindings:functions: 
 <2016-12-17 Sat 02:00>

 Evalator is a new kind of REPL for Emacs.

 What makes it different from a normal REPL? With evalator you can:

     Evaluate expressions using any language*
     See the results of an expression as it is typed
     Transform data in a stepwise fashion
     Generate code
     Interact with Emacs using a language other than Elisp

** Provided you've installed the appropriate extension package.
 Language Support

 By default, evalator uses Elisp as its evaluation language, but it supports other languages through extension packages. These packages define an evaluation context that can be passed to the evalator command in order to set the evaluation language for that particular session.
 Currently available evaluation contexts

     Clojure - via evalator-clojure

 Don't see a context package for your favorite language? Write one! See evalator-elisp.el and evalator-clojure.el for examples. Open an issue in this repo with any questions and I'll be happy to help.

 Here's a practical example to demonstrate what evalator's capable of:
** M-x view-lossage                       :emacs:keybind:debugging:functions: 
 <2016-12-17 Sat 03:48>

 то есть chroot
** [[https://github.com/fniessen/emacs-leuven-theme][fniessen/emacs-leuven-theme: Awesome Emacs color theme for white backgrounds --- Added in Emacs 24.4]] :emacs:org:mode:color:theme:amazing: 
 <2016-12-17 Sat 04:05>

 Looking for an awesome Emacs color theme? Looking for one of the best light themes for Org mode, and for other modes too? Here’s the place to find one!

 Welcome to the custom Leuven theme, an elegant and popular color theme for light backgrounds, with built-in style for many components such as Org mode, Gnus, Dired+ and EDiff. Make it yours!
** [[https://www.youtube.com/watch?v=-wPfxuxIfeU&t=1s][Using Emacs 23 - capture - YouTube]]     :emacs:org:mode:howto:encrypt:file: 
 <2016-12-17 Sat 04:19>

 emacs also works great with gpg, filename.org.gpg will encrypt/dencrypt first then load org-mode, i use this to encrypt my journal.﻿
** [[https://www.youtube.com/watch?v=-wPfxuxIfeU&t=1s][Using Emacs 23 - capture - YouTube]]           :emacs:howto:livecoding:mode: 
 <2016-12-17 Sat 05:02>

 Neat! didn't know most of this, so great video! Remember when I told you about my live-coding setup? I will help with the small font in the mode-line :) (defun live-coding () (interactive) (set-face-attribute 'default nil :font "Hack-16") (add-hook 'prog-mode-hook 'command-log-mode))﻿
** [[https://github.com/abo-abo/avy][abo-abo/avy: Jump to things in Emacs tree-style]] :emacs:github:top:avy:jump:visible:text:char:based:desision:tree: 
 <2016-12-17 Sat 05:14>

 avy is a GNU Emacs package for jumping to visible text using a char-based decision tree. See also ace-jump-mode and vim-easymotion - avy uses the same idea.
** [[https://www.youtube.com/watch?v=8RwQNXOjSis][Using Emacs 19 - moving to a live config - YouTube]] :emacs:youtube:video:howto:load:file: 
 <2016-12-17 Sat 05:23>


 Using Emacs 19 - moving to a live config
** [[https://www.youtube.com/watch?v=MfhjkfocRR0][What is a HashTable Data Structure - Introduction to Hash Tables , Part 0 - YouTube]] :video:youtube:tutorial:programming:hash:table: 
 <2016-12-17 Sat 05:42>

 This tutorial is an introduction to hash tables. A hash table is a data structure that is used to implement an associative array. This video explains some of the basic concepts regarding hash tables, and also discusses one method (chaining) that can be used to avoid collisions.

 Wan't to learn C++? I highly recommend this book http://amzn.to/1PftaSt
** [[https://www.youtube.com/watch?v=pSjrwSI4OHk][Emacs and Remote Shell - YouTube]] :emacs:youtube:video:tutorial:function:wrapping:tramp: 
 <2016-12-17 Sat 06:44>

 Quick demonstration of some wrapper functions around Tramp and Shell commands that allow me to kick off commands on multiple remote hosts.

 To grab the source code, hop over to https://github.com/howardabrams/dot-f...

 I promised that I would give the source to the function that populates the map of hosts and their IP address. Keep in mind, you could just hard-code those values if you wish (as it is just a hash-table). However, this is what I wrote to call to an OpenStack system to populate that hashmap, so to see that, check out this gist: https://gist.github.com/howardabrams/...
** [[https://www.youtube.com/watch?v=dljNabciEGg][Literate Devops with Emacs - YouTube]] :emacs:video:youtube:literate:programming:tutorial: 
 <2016-12-17 Sat 06:46>

 A demonstration originally given at EmacsConf 2015 that describes how I use org-mode's Babel project and Tramp to configure and work with remote servers in my data center, prior to copying code off into Chef cookbooks and whatnot.

** My initial essay that started this presentation: http://howardism.org/Technical/Emacs/...
** Github that contains the demonstration code and results Sprint Page: https://github.com/howardabrams/liter...
** Emacs code used to make this demonstration: http://github.com/howardabrams/demo-it
** My Emacs configuration files: http://github.com/howardabrams/dot-files
** [[https://github.com/howardabrams/demo-it][howardabrams/demo-it: An Emacs package for running demonstrations and presentations from within Emacs.]] :emacs:github:top:presentations: 
 <2016-12-17 Sat 07:01>

 At the end of each sprint, each of us demonstrate accomplishments. These reviews often incorporate the following trifecta:

     Presentations explaining the technology and other frobnications
     Source code, correctly highlighted and perhaps interactive
     Executing the code, preferably in a shell to maintain nerd cred

 During my sprint reviews, I noticed I used my org-mode-formatted files, eshell and source code buffers… always in Emacs. However, fat-fingering or mentally burping delayed the gratification for my audience while I laboriously typed. I solved this problem by predefining each “step” as an Emacs Lisp function, and had another function execute each step function when I hit an advance key (F12).

 After I had amassed a small army of helper functions, I packaged it as demo-it, because I lack the imagination to come up with anything more clever.

 See the following videos as examples of what can be done:

     Emacs: An Introduction for the Curious
     Literate DevOps Programming
     Learn You Some Lisp for Great Good

 Click the following image for a quicker example:
** [[https://addons.mozilla.org/en-US/firefox/addon/imtranslator/?src=search][Google Translate, ImTranslator, Dictionary, TTS :: Add-ons for Firefox]] :firefox:github:addons:google:translator: 
 <2016-12-17 Sat 07:21>

 COMPLETELY REDESIGNED TRANSLATOR FOR FIREFOX
 ImTranslator translates text, words, webpages between more than 90 languages.
 NEW: Inline Translator, Dictionary, access to Google Translate, Microsoft Translator. Unique on the fly localization.
** [[https://github.com/benbasson/contextsearch/][benbasson/contextsearch: Firefox Extension - Context Search transforms the "Web Search for..." context item into a menu containing your Firefox Search Providers. This is very convenient, since it allows you to decide which search engine you use. Firefox's default is to use the currently selected search provider only.]] :firefox:addon:search:context:menu:right:click: 
 <2016-12-17 Sat 07:23>

  Firefox Extension - Context Search transforms the "Web Search for..." context item into a menu containing your Firefox Search Providers. This is very convenient, since it allows you to decide which search engine you use. Firefox's default is to use the currently selected search provider only. http://www.basson.at/firefox-addons/c…
** [[https://www.youtube.com/watch?v=Y66j_BUCBMY&list=PL47oRh0-pTouthHPv6AbALWPvPJHlKiF7&index=2][American Authors - Best Day Of My Life - YouTube]] :youtube:top:tracks:alternative:rock: 
 <2016-12-17 Sat 07:27>

 Top Tracks - Alternative Rock
** Author of Emacs Elisp Introduction info page :emacs:author:elisp:introduction: 
 <2016-12-17 Sat 07:40>

 Thank You
 =========

 My thanks to all who helped me with this book.  My especial thanks to
 Jim Blandy, Noah Friedman, Jim Kingdon, Roland McGrath, Frank Ritter,
 Randy Smith, Richard M. Stallman, and Melissa Weisshaus.  My thanks also
 go to both Philip Johnson and David Stampe for their patient
 encouragement.  My mistakes are my own.

                                                      Robert J. Chassell
                                                           <bob@gnu.org>
** [[http://www.oed.com/][Home : Oxford English Dictionary]]        :english:dictionary:oxford:online: 
 <2016-12-17 Sat 09:26>

 Welcome to OED Online. If you or your library subscribes, dive straight in to the riches of the English language. If not, click on the images below to learn more about the OED, see What's new, or take a look at Aspects of English, our language feature section.
** What is side effect in Emacs Lisp                  :emacs:whatis:question: 
 <2016-12-17 Sat 09:58>

 side effect
** Emacs evaluate in scratch buffer         :emacs:scratch:buffer:evaluation: 
 <2016-12-17 Sat 10:32>

    Incidentally, if you are in the ‘*scratch*’ buffer and want the value
 returned by an expression to appear in the ‘*scratch*’ buffer itself
 rather than in the echo area, type ‘C-u C-x C-e’ instead of ‘C-x C-e’.
 This causes the value returned to appear after the expression.  The
 buffer will look like this:
** [[https://www.masteringemacs.org/article/complete-guide-mastering-eshell][Mastering Eshell - Mastering Emacs]]                :emacs:mastering:eshell: 
 <2016-12-17 Sat 11:32>

 notebooks
** [[https://www.youtube.com/watch?v=kt-wLpz-9PA][Emacs transpose-words and defadvice - YouTube]] :video:youtube:tutorial:transpose:words:function:advice: 
 <2016-12-17 Sat 13:06>

 Hacking Emacs to change the behavior of existing functions. Essentially, I show a little trick, but then show how to use defadvice to change the behavior of transpose-words.
** [[https://www.youtube.com/watch?v=OjbkCEkboA8][C/C++ in Spacemacs - YouTube]] :emacs:video:tutorial:youtube:c:cpp:setup:configure:first:initial: 
 <2016-12-17 Sat 16:34>

 How to get a decent environment for C/C++ development in Spacemacs.
** GNU Licence short description from Emacs Lisp Introduction :emacs:licence:gnu:short:description: 
 <2016-12-17 Sat 16:58>

    Finally, if you have code that everyone who uses Emacs may want, you
 can post it on a computer network or send a copy to the Free Software
 Foundation.  (When you do this, please license the code and its
 documentation under a license that permits other people to run, copy,
 study, modify, and redistribute the code and which protects you from
 having your work taken from you.)  If you send a copy of your code to
 the Free Software Foundation, and properly protect yourself and others,
 it may be included in the next release of Emacs.  In large part, this is
 how Emacs has grown over the past years, by donations.
** [[https://stackoverflow.com/questions/8271022/using-elisp-how-to-start-send-keys-to-and-stop-a-command-in-emacs-terminal-em][linux - Using elisp, how to start, send-keys-to, and stop a command in emacs terminal emulator? - Stack Overflow]] :emacs:write:to:terminal:buffer: 
 <2016-12-17 Sat 18:10>

 (progn
   (set-buffer "*terminal*")
   (term-send-raw-string "ls -l\n"))
** [[https://github.com/kgshank/gse-sound-output-device-chooser][kgshank/gse-sound-output-device-chooser: Gnome Shell Extension to show a simple chooser to select Input & Output device based on gnome control center]] :emacs:github:top:extensions:audio:switching: 
 <2016-12-18 Sun 06:08>

 A simple selector to enabled selection of sound source and sink based on Gnome Control Center
 Install URL: extensions.gnome.org
 Gnome shell versions compatible

     3.18
     3.20
     3.22

 Notes:

     May conflict with extensions which modify volume menu.
     Extension works with Volume Mixer extension. Restart shell, if errors encountered.
** [[https://mkvtoolnix.download/][MKVToolNix news – Matroska tools for Linux/Unix and Windows]] :mkv:matroska:tool:unix: 
 <2016-12-18 Sun 06:44>

 MKVToolNix is a set of tools to create, alter and inspect Matroska files under Linux, other Unices and Windows.

 Since May 1st 2003, the Matroska libraries themselves and my Matroska tools are officially available. I urge you to download the software, use it and report any errors you encounter to me. I'm always grateful for good bug reports because I make mistakes and you guys normally find them. Your feedback is important to me :)
** [[https://github.com/koreader/koreader][koreader/koreader: An ebook reader application supporting PDF, DjVu, EPUB, FB2 and many more formats, running on Kindle, Kobo, PocketBook, Ubuntu Touch and Android devices]] :lua:github:top:pdf:DjVu:epub:fb2:reader:book: 
 <2016-12-18 Sun 11:09>

 KOReader is a document viewer application, originally created for Kindle e-ink readers. It currently runs on Kindle, Kobo, PocketBook, Ubuntu Touch and Android (2.3+) devices. Developers can also run KOReader emulator for development purpose on desktop PC with Linux and Windows and Mac OSX (experimental for now).
 Main features for users

     supports multi-format documents including:
         paged fixed-layout formats: PDF, DjVu and CBZ
         reflowable e-book formats: ePub, fb2, mobi, doc, chm and plain text
         scanned PDF/DjVu documents can also be reflowed with built-in K2pdfopt
     use StarDict dictionaries / Wikipedia to lookup words
     highlights can be exported to Evernote cloud account
     highly customizable reader view and typeset
         setting arbitrary page margins / line space
         choosing external fonts and styles
         built-in multi-lingual hyphenation dictionaries
     supports adding custom online OPDS catalogs
     calibre integration
         search calibre metadata on your koreader device
         send ebooks from calibre library to your koreader device wirelessly
         browser calibre library and download ebooks via calibre OPDS server
     can share ebooks with other koreader devices wirelessly
     various optimizations for e-ink devices
         paginated menus without animation
         adjustable text contrast
     multi-lingual user interface
     online Over-The-Air software update
** [[https://www.emacswiki.org/emacs/MakingPackages][EmacsWiki: Making Packages]]                    :emacs:wiki:howto:packaging: 
 <2016-12-18 Sun 11:19>

 ELPA packages come in two forms. The first is a relatively simple single file package, the second is a more complicated multi-file format. Most of this page discusses the multi-file format because it causes the most problems.
** [[https://www.emacswiki.org/emacs/ELPA][EmacsWiki: ELPA]]                                    :emacs:wiki:howto:elpa: 
 <2016-12-18 Sun 11:20>

     Whenever Emacs starts up, it automatically calls the function ‘package-initialize’ to load installed packages. This is done after loading the init file and abbrev file (if any) and before running ‘after-init-hook’ (see Startup Summary). Automatic package loading is disabled if the user option package-enable-at-startup is nil.
** [[https://github.com/nagadomi/waifu2x][nagadomi/waifu2x: Image Super-Resolution for Anime-Style Art]] :lua:github:top:anime:deep:learning:image:size: 
 <2016-12-18 Sun 11:30>

 Image Super-Resolution for Anime-style art using Deep Convolutional Neural Networks. And it supports photo.

 The demo application can be found at http://waifu2x.udp.jp/ .
** [[https://www.youtube.com/watch?v=LMNTBeVh_ZQ][{C++} Алгоритмы - Пузырьковая сортировка (Bubble sort) - YouTube]] :cpp:youtube:video:tutorial:howto:sorting: 
 <2016-12-18 Sun 12:29>

 В этом видео вы узнаете, что такое пузырьковая сортировка, как она работает, где и когда используется. Познакомитесь с основными принципами сортировки массива.
** [[https://www.youtube.com/watch?v=_VYWoIaJZpU][ЗОРмания - ТОП 10 лучших АНИМЕ осени 2016! (Metalrus) - YouTube]] :anime:top:anidub:autumn: 
 <2016-12-18 Sun 13:45>

 Аниме из ТОПа:
 10) Keijo!!!!!!!!
 09) Shuumatsu no Izetta
 08) Occultic;Nine
 07) Watashi ga Motete Dousunda / Я требую яоя!
 06) Mahou Shoujo Ikusei Keikaku
 05) Udon no Kuni no Kiniro Kemari
 04) Flip Flappers
 03) Yuri!!! on Ice
 02) 3-gatsu no Lion
 01) Drifters
** [[http://indexp.ru/][Почтовые индексы России: почтовые индексы Москвы, почтовые индексы Петербурга, почтовые индексы других городов, областей, поиск почтового индекса по адресу]] :russia:mail:index:zip: 
 <2016-12-18 Sun 14:02>



 Здесь представлена самая полная и точная база почтовых индексов России, в том числе индексы Москвы. Информация о почтовых индексах России представлена на основе последних версий базы почтовых индексов Почты России и Классификатора адресов России ФНС России. Вы можете воспользоваться как поиском индекса по адресу или адреса по индексу, так и иерархическим рубрикатором адресов России, чтобы найти необходимый индекс почтового адреса.

 Почтовые индексы Москвы, почтовые индексы Санкт-Петербурга и почтовые индексы большинства других городов России можно найти прямо для конкретного дома. То есть у нас представлены почтовые индексы областей, почтовые индексы районов, почтовые индексы городов, почтовые индексы улиц, почтовые индексы домов.

 Изменения почтовых индексов происходят регулярно. Хотим заметить, что в отличие от других сайтов с базами почтовых индексов у нас представлены только реально действующие индексы, нет устаревшей информации, и вы можете быть абсолютно точно уверены, что найденный на нашем сайте индекс будет точно действующим и соответствовать выбранному адресу.

 Последнее обновление базы почтовых индексов Почты России: 18.11.2016. Последнее обновление Классификатора адресов России ФНС России: 01.12.2016.
** [[https://github.com/roman-mazhut/emacs-vkontakte][roman-mazhut/emacs-vkontakte: Simple implementation of vk messaging for emacs]] :emacs:vk:client:elisp: 
 <2016-12-18 Sun 14:42>

 Simple implementation of vk messaging for emacs
** [[https://github.com/spegoraro/org-alert][spegoraro/org-alert: System notifications of org agenda items]] :emacs:github:top:org:mode:org:alert:notifications:desktop:clock: 
 <2016-12-18 Sun 15:49>

 Provides notifications for scheduled or deadlined agenda entries.

 Screenshot
** [[https://github.com/syl20bnr/spacemacs/issues/7038][UI freezes when you type in Emacs 25 · Issue #7038 · syl20bnr/spacemacs]] :emacs:bug:spacemacs:company:mode:freeze:elisp:comment:string: 
 <2016-12-18 Sun 15:58>

 Emacs-lisp mode in Emacs 25 freezes. I suspect it has something to do with company-mode.
 I do not see this in Emacs 24.
 I am not sure yet, but I think disabling company-mode "fixes" this. It might be an upstream issue with company.el

#+BEGIN_SRC emacs-lisp
(eval-after-load 'semantic
    (add-hook 'semantic-mode-hook
              (lambda ()
                (dolist (x (default-value 'completion-at-point-functions))
                  (when (string-prefix-p "semantic-" (symbol-name x))
                    (remove-hook 'completion-at-point-functions x))))))
#+END_SRC
** Debian IRC bot                                       :debian:irc:bot:dpkg: 
 <2016-12-18 Sun 16:08>

 <dpkg> Please visit http://wiki.debian.org/IRC/DpkgBot to learn how to
        effectively search the factoids database for FAQ, and not flood in the
        channel with !tell <who> about <what>.  Also ask me about <msg the
        bot>.  We ask that you learn to search for yourself first, unless it is
        a specific problem.  Many questions are asked repeatedly, and the
        factoid database can be of great help to you.  Ask me about <search
        dpkg>.
** How to ask questions properly in IRC    :irc:howto:ask:questions:properly: 
 <2016-12-18 Sun 16:52>

 <dpkg> If you have a question, just ask! For example: "I have a problem with
        ___; I'm running Debian version ___. When I try to do ___ I get the
        following output ___. I expected it to do ___." Don't ask if you can
        ask, if anyone uses it, or pick one person to ask. We're all
        volunteers; make it easy for us to help you. If you don't get an answer
        try a few hours later or on debian-user@lists.debian.org. See <smart
        questions><errors>.
** How to effectively use helm        :emacs:spacemacs:helm:howto:files:grep: 
 <2016-12-19 Mon 07:55>

 <quicknir> There's also a few special things you can use in SPC b b hthat
            don't work in most helm contets  [07:46]
 <quicknir> you can do * to match major mode
 <jamieaus88_twitter> yeah. I like how there's a recent list in there as well.
                  I barely have to use SPC f f 
 <quicknir> *Python will show you only python files
 <jamieaus88_twitter> neat
 <quicknir> and @ will show you things that contain that text  [07:49]
 <quicknir> `@hello` will filter down to buffers that contain hello somewhere
 <quicknir> ! is negation, works basically everywhere
 <jamieaus88_twitter> I can't get *Python to work
 <jamieaus88_twitter> do you literally type *Python?
 <quicknir> yah  [07:52]
 <quicknir> SPC b b
 <quicknir> *Python
 <quicknir> Should only show you your python buffers  [07:53]
 <quicknir> If you have any open
 <quicknir> it won't work in SPC f f etc
 <lijingjiang> Hey guys, I would love to know is there some way to always hide
               some specific buffer like `Async Shell Command buffer`  [07:54]
 <jamieaus88_twitter> yeah got it!
 <quicknir> @lijingjiang why do you want to hide it? Hide it from where, SPC b
            b?
 <gitter> [Github] angry-bird commented in syl20bnr/spacemacs on issue: Org
          mode hangs very sporadically when using mini-buffers
          https://github.com/syl20bnr/spacemacs/issues/5778#issuecomment-267881946
                                                                         [07:55]
 <quicknir> @jamieaus88_twitter yeah it's pretty cool. @as well. And !. ! works
            everywhere use it a lot when searching for files
** [[https://github.com/euske/pdfminer][euske/pdfminer: Python PDF Parser]]           :python:github:top:pdf:parser: 
 <2016-12-19 Mon 10:49>

 PDFMiner is a tool for extracting information from PDF documents. Unlike other PDF-related tools, it focuses entirely on getting and analyzing text data. PDFMiner allows one to obtain the exact location of text in a page, as well as other information such as fonts or lines. It includes a PDF converter that can transform PDF files into other text formats (such as HTML). It has an extensible PDF parser that can be used for other purposes than text analysis.

     Webpage: https://euske.github.io/pdfminer/
     Download (PyPI): https://pypi.python.org/pypi/pdfminer/
     Demo WebApp: http://pdf2html.tabesugi.net:8080/

 Features

     Written entirely in Python.
     Parse, analyze, and convert PDF documents.
     PDF-1.7 specification support. (well, almost)
     CJK languages and vertical writing scripts support.
     Various font types (Type1, TrueType, Type3, and CID) support.
     Basic encryption (RC4) support.
     Outline (TOC) extraction.
     Tagged contents extraction.
     Automatic layout analysis.
** [[http://alexarmstrong.net/2015/01/pushing-to-multiple-git-repos/][Pushing to multiple git repos - Alex Armstrong]] :git:multiple:remote:repositories: 
 <2016-12-19 Mon 11:19>

 How to push a git repo to multiple remote repositories, such as GitLab & BitBucket, with a single command.
 Background

 I’ve been using BitBucket, which offers unlimited private repositories for free, to backup my git repos in the cloud.

 Recently I switched to GitLab. They offer a similar service, also for free, but with a nicer UI. In particular, GitLab can search inside files, not just the filenames. This feature is curiously missing from BitBucket, although it was logged back in 2011.

 Unfortunately, GitLab’s shiny UI baulks when confronted with my notes repository: a single folder containing several hundred markdown files. BitBucket, meanwhile, handles it without a hitch.

 I wanted to keep both repos updated so that I can use whichever service is more useful for a given task. Having redundant copies of my files also offers some peace of mind.
** [[http://www.alexa.com/topsites/category/Computers/Internet/E-mail/Mailing_Lists][Alexa - Top Sites by Category: Computers/Internet/E-mail/Mailing Lists]] :alexa:top:mailing:lists: 
 <2016-12-19 Mon 11:25>

  This particular provider is free of cost and is available in three different languages.
** [[https://www.reddit.com/r/usenet/wiki/providers][providers - usenet]]          :usenet:mail:lists:archives:gmane:alternative: 
 <2016-12-19 Mon 11:32>

 Below is a list of usenet service providers. This list makes it easy to see which backbones are located in which geographic locations. The list also provides you with information on who runs the backbone, if the backbone provider sells direct to individuals through its own subsidiary providers and if they resell services through a third party. This allows you to see if your primary usenet account is in on the same backbone as your secondary account (see block accounts wiki for additional details). For more information, please see the FAQ
** [[https://www.reddit.com/r/emacs/comments/5f83cj/how_can_we_add_nongmane_newsgroups_to_gnus/][How can we add non-Gmane newsgroups to Gnus? : emacs]] :usenet:recommended:server: 
 <2016-12-19 Mon 11:33>

 There are many NNTP servers, a lot of them are listed in the Usenet Providers Wiki of /r/usenet!

 For a free one that seems to fit your requirements, check out Aioe.org:

     free
     supports SSL
     reasonable limits
     most importantly: supports comp.lang.prolog.
** How to sort org table                         :emacs:org:mode:sort:tables: 
 <2016-12-19 Mon 12:32>

 You can quickly sort tables in org-mode by using C-c ^ with the point inside a table. You’ll be prompted for a sorting type, where you can choose e.g. a for alphabetic or n for numeric. You can use capital letter
 versions of these options to reverse the sort. 

 The table is sorted based on the column that the point is in, and from the documentation: 

  The range of lines is the range between the nearest horizontal separator lines, or the entire table of no such lines exist.
** [[https://github.com/sabnzbd/sabnzbd][sabnzbd/sabnzbd: SABnzbd - The automated Usenet download tool]] :python:github:top:usenet:downloader:grabber: 
 <2016-12-19 Mon 14:18>

 SABnzbd - The automated Usenet download tool

 This Unicode release is not compatible with 0.7.x queues!

 There is also an issue with upgrading of the "sabnzbd.ini" file. Make sure that you have a backup!

 Saved queues may not be compatible after updates.

 SABnzbd is an Open Source Binary Newsreader written in Python.

 It's totally free, incredibly easy to use, and works practically everywhere.

 SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.

 If you want to know more you can head over to our website: http://sabnzbd.org.
** [[https://github.com/jarun/googler][jarun/googler: Google Search, Google Site Search, Google News from the terminal.]] :python:github:top:google:search:cli: 
 <2016-12-19 Mon 14:32>

 googler is a power tool to Google (Web & News) and Google Site Search from the command-line. It shows the title, URL and abstract for each result, which can be directly opened in a browser from the terminal. Results are fetched in pages (with page navigation). Supports sequential searches in a single googler instance.

 googler was initially written to cater to headless servers without X. You can integrate it with a text-based browser. However, it has grown into a very handy and flexible utility that delivers much more. For example, fetch any number of results or start anywhere, limit search by any duration, define aliases to google search any number of websites, switch domains easily... all of this in a very clean interface without ads or stray URLs. The shell completion scripts make sure you don't need to remember any options.

 googler isn't affiliated to Google in any way.
** [[https://github.com/xiaoxu193/PyTeaser][xiaoxu193/PyTeaser: Summarizes news articles]] :python:github:top:news:summary: 
 <2016-12-19 Mon 14:32>

 PyTeaser takes any news article and extract a brief summary from it. It's based on the original Scala project.

 Summaries are created by ranking sentences in a news article according to how relevant they are to the entire text. The top 5 sentences are used to form a "summary". Each sentence is ranked by using four criteria:

     Relevance to the title
     Relevance to keywords in the article
     Position of the sentence
     Length of the sentence
** [[http://tools.kali.org/information-gathering/dmitry][DMitry | Penetration Testing Tools]] :kali:DMitry:dns:scan:discovery:lookup: 
 <2016-12-19 Mon 15:14>

 DMitry (Deepmagic Information Gathering Tool) is a UNIX/(GNU)Linux Command Line Application coded in C. DMitry has the ability to gather as much information as possible about a host. Base functionality is able to gather possible subdomains, email addresses, uptime information, tcp port scan, whois lookups, and more.

 The following is a list of the current features:

     An Open Source Project.
     Perform an Internet Number whois lookup.
     Retrieve possible uptime data, system and server data.
     Perform a SubDomain search on a target host.
     Perform an E-Mail address search on a target host.
     Perform a TCP Portscan on the host target.
     A Modular program allowing user specified modules

 Source: http://mor-pah.net/software/dmitry-deepmagic-information-gathering-tool/
 DMitry Homepage | Kali DMitry Repo
** [[https://github.com/darkoperator/dnsrecon][darkoperator/dnsrecon: DNS Enumeration Script]] :python:github:top:dns:lookup: 
 <2016-12-19 Mon 15:22>

  DNS Enumeration Script
** [[https://github.com/TheRook/subbrute][TheRook/subbrute: A DNS meta-query spider that enumerates DNS records, and subdomains.]] :python:github:top:subdomain:brute:force: 
 <2016-12-19 Mon 15:25>

 SubBrute is a community driven project with the goal of creating the fastest, and most accurate subdomain enumeration tool. Some of the magic behind SubBrute is that it uses open resolvers as a kind of proxy to circumvent DNS rate-limiting (https://www.us-cert.gov/ncas/alerts/TA13-088A). This design also provides a layer of anonymity, as SubBrute does not send traffic directly to the target's name servers.
** [[https://github.com/m57/dnsteal][m57/dnsteal: DNS Exfiltration tool for stealthily sending files over DNS requests.]] :python:github:top:dns:security:sendfiles: 
 <2016-12-19 Mon 15:26>

 This is a fake DNS server that allows you to stealthily extract files from a victim machine through DNS requests.

 Below are a couple of different images showing examples of multiple file transfer and single verbose file transfer:
** [[https://github.com/h5bp/Front-end-Developer-Interview-Questions][h5bp/Front-end-Developer-Interview-Questions: A list of helpful front-end related questions you can use to interview potential candidates, test yourself or completely ignore.]]                                        :front:end:github:top:questions: 
 <2016-12-19 Mon 18:55>

 This file contains a number of front-end interview questions that can be used when vetting potential candidates. It is by no means recommended to use every single question here on the same candidate (that would take hours). Choosing a few items from this list should help you vet the intended skills you require.

 Note: Keep in mind that many of these questions are open-ended and could lead to interesting discussions that tell you more about the person's capabilities than a straight answer would.
** [[https://github.com/vermiculus/sx.el][vermiculus/sx.el: Stack Exchange for Emacs]]                                        :emacs:github:top:stackexchange: 
 <2016-12-19 Mon 19:19>

 SX is a full-featured Stack Exchange mode for GNU Emacs 24+. Using the official API, it provides a versatile experience for the Stack Exchange network within Emacs itself.
** [[https://github.com/emacs-helm/helm-mu][emacs-helm/helm-mu: Helm sources for searching emails and contacts using mu]]                                     :emacs:github:top:mu4e:helm:search: 
 <2016-12-20 Tue 06:31>

 Mu is an indexer for maildirs and mu4e is a mutt-like MUA for Emacs build on top of mu. Mu is highly efficient, which makes it possible to get instant search results even for huge maildirs. It also provides search operators similar to Google mail, e.g:

 from:Titus to:Anne flag:attach vacation photos
** Check redhat testing program                              :redhat:testing: 
 <2016-12-20 Tue 06:42>

Приглашаем Вам пройти БЕСПЛАТНОЕ online тестирование по продуктам Red Hat,
котороепозволит более точно оценить уровень Вашего мастерства.

Online тестирование для специалистов, заинтересованных в повышении навыков и
сертификации по продуктам Red Hat, займет около 20 минут.

Мы предлагаем online тестирование по следующим продуктам:
- Red Hat Satellite
- Ansible by Red Hat
- Red Hat JBoss AEP
- Red Hat Gluster Storage
- Red Hat OpenShift    
- Red Hat OpenStack Platform
- Red Hat Enterprise Linux 7  

Это поможет вам:
- Проверить свои навыки и получить персональные рекомендации
- Определить свои сильные стороны и направления для развития
- Открыть новые возможности в своей карьере

Проверьте себя: [[http://app.engage.redhat.com/e/er?s=1795&lid=49975&elqTrackId=699e62c2aece4d85bcc33eda3a55e83d&elq=fd1825aaca8447ec82dbadb9491f6781&elqaid=33770&elqat=1][www.redhat.com/rhtapps/assessment/]]
** [[https://www.mail-archive.com/debian-bugs-dist%40lists.debian.org/][debian-bugs-dist]]                                              :mailing:list:debian:bugs: 
 <2016-12-20 Tue 06:49>
** mu4e bug report conventions                              :mu4e:bug:report: 
 <2016-12-20 Tue 06:58>

    Sometimes, you might encounter some unexpected behavior while using
 mu4e.  It could be a bug in mu4e, it could be an issue in other
 software.  Or it could just be a misunderstanding.  In any case, if you
 want to report this (either to the mailing list or to
 <https://github.com/djcb/mu/issues>, the latter is preferred), please
 always include the following information:

    • what did you expect that should happen?  what actually happened?
    • can you provide some exact steps to reproduce?
    • what version of mu4e and emacs were you using?  What operating
      system?
    • can you reproduce it with emacs -q and only loading mu4e?
    • if the problem is related to some specific message, please include
      the raw message file (appropriately anonimized, of course)

    (1) <http://groups.google.com/group/mu-discuss>
** How to search email with mu or mu4e            :emacs:mu4e:mu:mail:search: 
 <2016-12-20 Tue 07:04>

    which lists all messages that match hello.  For more examples of
 searches, see *note Queries::, or check the mu-find and mu-easy man
 pages.  If all of this worked well, we are well on our way setting
 things up; the next step is to do some basic configuration for mu4e.
** [[https://github.com/Alir3z4/html2text][Alir3z4/html2text: Convert HTML to Markdown-formatted text.]]                          :python:github:top:html:to:markdown:converter: 
 <2016-12-20 Tue 08:32>

 html2text is a Python script that converts a page of HTML into clean, easy-to-read plain ASCII text. Better yet, that ASCII also happens to be valid Markdown (a text-to-HTML format).
** [[https://github.com/theSage21/handwritten][theSage21/handwritten: Plain text to handwriting generator.]]                    :python:github:plain:text:to:handwriting:generation: 
 <2016-12-20 Tue 09:13>

 Homework could have been so much easier if only it could be submitted as a typed copy.
 Using Alex Graves' paper on handwriting generation is a step I liked. This script uses his amazing paper (actually the free service he has set up online) to generate handwritten homework for given text.
** [[http://etest.lspace.etu.ru/][Questionmark Perception -]]                                                 :leti:test:information: 
 <2016-12-20 Tue 11:11>

  Questionmark Perception licensed to St.-Petersburg Electrotechnical University
** [[https://github.com/jasonlong/cayman-theme][jasonlong/cayman-theme: A responsive theme for GitHub Pages]]                                                :pages:github:top:theme: 
 <2016-12-20 Tue 11:53>

 Cayman is a clean, responsive theme for GitHub Pages. This theme is available as an option if you use the Automatic Page Generator or you can copy the template and styles to use on your own.

 You can preview the theme at http://jasonlong.github.io/cayman-theme or with real content at http://jasonlong.github.io/geo_pattern.
** [[https://github.com/ArcticaProject/nx-libs][ArcticaProject/nx-libs: nx-libs]]                                 :c:cpp:github:top:remote:xorg:terminal: 
 <2016-12-20 Tue 13:58>

 This source tree started as a re-distribution of those NX packages needed to setup FreeNX and/or X2Go on a Linux server.

 In the past, the NX re-distribution (3.5.0.x) had been maintained by the X2Go Project: http://wiki.x2go.org

 In 2014, the QVD project run by the company Qindel joined the group of people being interested in NX maintenance and improvement.

 Since 2015, the Arctica Project has joined in the NX development. The core devs of X2Go, Arctica and TheQVD have agreed on stopping to redistribute NX and to continue the development of NX 3.x as the new upstream instead. The package will see a slight name change to nx-libs starting with version 3.5.99.0.

 Our intentions for nx-libs are:

     provide one tarball that builds NX projects via a common Makefile
     provide one tarball for distribution packagers
     provide support for security issues
     provide support for latest X11 extensions
     improve NX where possible

 This source tree is maintained on Github:

 https://github.com/ArcticaProject/nx-libs (3.6.x branch)

 For the the post-NoMachine era of nx-libs, we will focus on two release phases for the upcoming two years (06/2015 - 06/2017).
** [[http://ftp.acc.umu.se/pub/debian-meetings/][Index of /pub/debian-meetings]]                               :debian:meetings:archive:video:cambridge: 
 <2016-12-20 Tue 14:18>
** [[http://sachachua.com/blog/2016/12/using-categories-organize-org-agenda/][Using categories to organize your Org agenda - sacha chua :: living an awesome life]]                                        :emacs:org:mode:agenda:category: 
 <2016-12-20 Tue 15:08>

 I've just discovered that it helps to add a :CATEGORY: property to the top-level, non-TODO heading that identifies the project.  Using your example:
** [[https://github.com/haecker-felix/gradio][haecker-felix/gradio: A GTK3 app for finding and listening to internet radio stations]]                                           :gnome:vala:github:top:radio: 
 <2016-12-20 Tue 16:49>

 A GTK3 app for finding and listening to internet radio stations.
** [[http://wiki.calculate-linux.org/ru/nastroika_firefox][Настройка Firefox]]                           :ru:wiki:calculate:firefox:performance:boost: 
 <2016-12-20 Tue 17:10>

 Настройка Firefox
** [[https://github.com/abo-abo/define-word][abo-abo/define-word: Display the definition of word at point in Emacs]]                                          :emacs:github:word:definition: 
 <2016-12-20 Tue 17:17>

 define-word is a GNU Emacs package that lets you see the definition of a word or a phrase at point, without having to switch to a browser:
** [[http://ergoemacs.org/emacs/elisp_hash_table.html][Emacs Lisp: Hash Table]]                                            :emacs:tutorial:hash:tables: 
 <2016-12-20 Tue 19:12>

 This page is a tutorial on emacs lisp hash table.

 Emacs lisp has 2 types of list of key/value pairs.

     Association List (aka alist).
     Hash Table.

 What's the Difference Between Alist and Hash Table?

     Alist items are ordered, and can have duplicate keys.
     Hash Table entries are unique. Hash Table items are not ordered. Hash Table is usually faster for random access when there are huge number of items (tens of thousands).

 Alist is actually a list, with each element being a cons pair (cons key val). The element may repeat. The list is ordered. Emacs provides high level functions to let you use it as a key value pairs. See (info "(elisp) Association Lists")
** [[https://github.com/jordonbiondo/quake-mode][jordonbiondo/quake-mode: Quake/Unreal style text killing sprees for Emacs.]]                         :emacs:github:lol:unreal:quake:multikill:sound: 
 <2016-12-20 Tue 23:27>

 Minor mode providing Quake/Unreal-style killing sprees in Emacs.
** [[https://www.youtube.com/watch?v=97NcG8hj9WE][The History of Online Communication - YouTube]]                            :youtube:video:history:online:communication: 
 <2016-12-21 Wed 10:06>

 Before Google Hangouts and Snapchat were the norm, how did people communicate using computers and the Internet?

 TunnelBear message: TunnelBear is the easy-to-use VPN app for mobile and desktop. Visit http://tunnelbear.com/linus to try it free and save 10% when you sign up for unlimited TunnelBear data.

 Follow: http://twitter.com/linustech

 Join the community: http://linustech.com
** [[https://github.com/darktrojan/openwith][darktrojan/openwith: Open With add-on for Firefox]]                                          :firefox:githup:top:open:with: 
 <2016-12-21 Wed 10:15>

 Released versions can be downloaded from https://addons.mozilla.org/firefox/addon/open-with/

 See https://darktrojan.github.io/openwith/ for information about contributing code/translations/money.
** [[https://github.com/OctoLinker/browser-extension][OctoLinker/browser-extension: OctoLinker – Available on Chrome, Firefox and Opera]]                                     :firefox:github:top:git:OctoLinker: 
 <2016-12-21 Wed 10:21>

 First of all, it's a browser extension. Once installed, it allows you to navigate through projects on GitHub.com efficiently.

 Most projects consist of many files and third party dependencies. Files are referencing other files and / or dependencies by language specific statements like include or require. Dependencies are most likely declared in a file called manifest e.g. package.json or Gemfile. The OctoLinker browser extensions makes these references clickable. No more copy and search.
** [[https://github.com/stripe/gaps][stripe/gaps: Easy management of your Google Groups subscriptions.]]                              :ruby:github:top:google:groups:management: 
 <2016-12-21 Wed 10:46>

 At Stripe, we've long had many more Google Group mailing lists than employees. As the number of lists grew, so too did the complexity of managing your email setup: which lists were you on? Why are you receiving email for this list you're not subscribed to? How do you set up your filters to usually archive email to a list, but only if you're not present on the CC?

 Gaps is the main tool we've used to help make these questions manageable. The core functionality is surprisingly simple: a single list of all your Google Groups in one place, which lets you view your subscriptions (including whether you're receiving mail from a list being subscribed to another list), and subscribe or unsubscribe by the click of a button.

 More recently, we've also added filter generation and maintenance. Unfortunately Google's email settings API only allows you to create new filters, so it's up to the user to delete their old ones.
** [[https://github.com/benma/visual-regexp-steroids.el][benma/visual-regexp-steroids.el: Extends visual-regexp to support other regexp engines]]                                        :emacs:github:top:regexp:visual: 
 <2016-12-21 Wed 13:47>

 visual-regexp-steroids is an extension to visual-regexp which enables the use of modern regexp engines (no more escaped group parentheses, and other goodies!). In addition to that, you can optionally use the better regexp syntax to power isearch-forward-regexp and isearch-backward-regexp.

 For now, Python and pcre2el is supported out of the box (tested on Linux and Windows). If you want to add custom scripts to enable your favorite language, please get in touch.
** [[https://github.com/RaymiiOrg/NoPriv][RaymiiOrg/NoPriv: NoPriv.py is a python script to backup any IMAP capable email account to a HTML archive, nicely browsable, instead of weird folders (Maildir), one huge file (mbox), only needing a web browser to view (thunderbird) and no propritary code, so you can make sure I don't steal your password.]]                                        :python:github:top:mbox:to:html: 
 <2016-12-21 Wed 22:32>

  NoPriv.py is a python script to backup any IMAP capable email account to a HTML archive, nicely browsable, instead of weird folders (Maildir), one huge file (mbox), only needing a web browser to view (thunderbird) and no propritary code, so you can make sure I don't steal your password.
** [[https://github.com/python/mypy][python/mypy: Optional static typing for Python 2 and 3 (PEP484)]]                                       :python:github:top:type:checking: 
 <2016-12-22 Thu 00:41>

 We don't have a mailing list; but we are always happy to answer questions on gitter chat or filed as issues in our trackers:

     mypy tracker for mypy isues
     typeshed tracker for issues with specific modules
     typing tracker for discussion of new type system features (PEP 484 changes) and runtime bugs in the typing module

 What is mypy?

 Mypy is an optional static type checker for Python. You can add type hints to your Python programs using the standard for type annotations introduced in Python 3.5 (PEP 484), and use mypy to type check them statically. Find bugs in your programs without even running them!

 The type annotation standard has also been backported to earlier Python 3.x versions. Mypy supports Python 3.3 and later.

 For Python 2.7, you can add annotations as comments (this is also specified in PEP 484).

 You can mix dynamic and static typing in your programs. You can always fall back to dynamic typing when static typing is not convenient, such as for legacy code.

 Here is a small example to whet your appetite:
** [[https://github.com/YoSmudge/dnsyo][YoSmudge/dnsyo: Check your DNS against over 1000 global DNS servers]]                                      :python:github:top:dns:check:1000: 
 <2016-12-22 Thu 00:43>

 DNSYO is a little tool I built to help me keep track of DNS propagation.

 In short, it's dig, if dig queried over 1000 servers and collated their results.

 Here's what it does
** [[https://github.com/ValdikSS/blockcheck][ValdikSS/blockcheck: Checks Russian ISP blocking type]]                            :python:github:top:russia:blocking:internet: 
 <2016-12-22 Thu 00:44>

 Утилита для определения типа блокировок сайтов из единого реестра запрещенной информации на стороне провайдера.

 Данная утилита позволяет определить:

     Подмену DNS-ответов
     Перенаправление DNS-серверов
     Блокировку DNS-серверов
     Блокировку всей зоны (поддоменов) заблокированного домена
     "Обычный" DPI (фильтрация URL на определенных IP-адресах и портах)
     "Полный" DPI (фильтрация URL на всех IP-адресах и/или портах)
     Подмену SSL (HTTPS)-сертификата (прослушивание HTTPS-трафика)
     Блокировку по IP-адресу

 Также приложение выполняет тесты для обхода DPI, если он обнаружен на стороне провайдера. На данный момент реализованы следующие техники:

     Дополнительный пробел после GET
     Фрагментирование заголовка
     Точка в конце домена
     Заголовок host вместо Host
     Перенос строки в заголовках в UNIX-стиле

 Более подробно о видах DPI и типах подключения читайте в Wiki проекта: Типы DPI

 Приложение автоматически отправляет статистику об используемом типе блокировки на сервер.

 http://habrahabr.ru/post/229377/ — статистика по провайдерам
** [[https://github.com/amperser/proselint][amperser/proselint: A linter for prose.]]                                :python:github:top:prose:writing:linter: 
 <2016-12-22 Thu 00:46>

 Writing is notoriously hard, even for the best writers, and it's not for lack of good advice — a tremendous amount of knowledge about the craft is strewn across usage guides, dictionaries, technical manuals, essays, pamphlets, websites, and the hearts and minds of great authors and editors. But poring over Strunk & White hardly makes one a better writer — it turns you into neither Strunk nor White. And nobody has the capacity to apply all the advice from Garner’s Modern American Usage, a 975-page usage guide, to everything they write. In fact, the whole notion that one becomes a better writer by reading advice on writing rests on untenable assumptions about learning and memory. The traditional formats of knowledge about writing are thus essentially inert, waiting to be transformed.

 We devised a simple solution: proselint, a linter for prose. (A linter is a computer program that, like a spell checker, scans through a document and analyzes it.)

 proselint places the world’s greatest writers and editors by your side, where they whisper suggestions on how to improve your prose. You’ll be guided by advice inspired by Bryan Garner, David Foster Wallace, Chuck Palahniuk, Steve Pinker, Mary Norris, Mark Twain, Elmore Leonard, George Orwell, Matthew Butterick, William Strunk, E.B. White, Philip Corbett, Ernest Gowers, and the editorial staff of the world’s finest literary magazines and newspapers, among others. Our goal is to aggregate knowledge about best practices in writing and to make that knowledge immediately accessible to all authors in the form of a linter for prose.

 proselint is a command-line utility that can be integrated into existing tools.
** [[https://github.com/willthames/ansible-lint][willthames/ansible-lint: Best practices checker for Ansible]]                                      :python:github:top:ansible:linter: 
 <2016-12-22 Thu 01:02>

 ansible-lint checks playbooks for practices and behaviour that could potentially be improved
** [[https://github.com/twolfson/restructuredtext-lint][twolfson/restructuredtext-lint: reStructuredText linter]]                                         :python:github:top:rest:linter: 
 <2016-12-22 Thu 01:04>

 This was created out of frustration with PyPI; it sucks finding out your reST is invalid after uploading it. It is being developed in junction with a Sublime Text linter.
** [[https://github.com/pixelb/fslint][pixelb/fslint: Linux file system lint checker/cleaner]]                             :python:github:top:filesystem:linux:linter: 
 <2016-12-22 Thu 01:04>
** [[https://github.com/jorisroovers/gitlint][jorisroovers/gitlint: Linting for your git commit messages]]                                          :python:github:top:git:linter: 
 <2016-12-22 Thu 01:05>

 Git commit message linter written in python, checks your commit messages for style.
** [[https://github.com/sk-/git-lint][sk-/git-lint: improving source code one step at a time]]                                          :python:github:top:git:linter: 
 <2016-12-22 Thu 01:06>

 Git-lint is a tool for improving source code one step at a time.
 Motivation

 Often times enforcing coding styles to an existing project can be a nightmare. Some reasons may include:

     the codebase is already a mess and the output of the tools is overwhelming.
     developers don't feel confident changing lines they do not own.
     or they just don't know what tool to use.

 Features

 This tool tackles all the 3 problems mentioned above by providing just a single tool that lints all the modified files. For each filetype it may use even more than one linter or tool. Furthermore by default it only report problems of lines that were added or modified.
** [[https://github.com/btford/write-good][btford/write-good: Naive linter for English prose]]                                  :javascript:github:top:linter:english: 
 <2016-12-22 Thu 01:08>

 Naive linter for English prose for developers who can't write good and wanna learn to do other stuff good too.
** [[https://www.youtube.com/playlist?list=PLYx7XA2nY5Gf37zYZMw6OqGFRPjB1jCy6][SciPy 2016: Scientific Computing with Python Conference - YouTube]]                                                 :python:meetings:conference:scipy: 
 <2016-12-22 Thu 01:12>

  SciPy 2016, the fifteenth annual Scientific Computing with Python conference, was held July 11-17, 2016 in Austin, Texas. SciPy is a community dedicated to the advancement of scientific computing through open source Python software for mathematics...
** [[https://github.com/wummel/linkchecker][wummel/linkchecker: check links in web documents or full websites]]                                          :python:github:top:link:check: 
 <2016-12-22 Thu 01:13>

 Check for broken links in web sites.
 Features

     recursive and multithreaded checking and site crawling
     output in colored or normal text, HTML, SQL, CSV, XML or a sitemap graph in different formats
     HTTP/1.1, HTTPS, FTP, mailto:, news:, nntp:, Telnet and local file links support
     restrict link checking with regular expression filters for URLs
     proxy support
     username/password authorization for HTTP, FTP and Telnet
     honors robots.txt exclusion protocol
     Cookie support
     HTML5 support
     a command line and web interface
     various check plugins available, eg. HTML syntax and antivirus checks.
** [[https://github.com/mattalcock/blog/blob/master/2012/12/5/python-spell-checker.rst][blog/python-spell-checker.rst at master · mattalcock/blog]]                           :python:github:top:development:spell:checker: 
 <2016-12-22 Thu 01:15>

 Have you ever been really impressed with Googles 'Did you mean....' spell checker? Have you ever just typed something into google to help you with your spelling?

 My answer to the above questions above would be Yes, all the time!

 In a fantastic post I read some years ago Peter Norvig outlined how Google’s ‘did you mean’ spelling corrector uses probability theory, large training sets and some elegant statistical language processing to be so effective. Type in a search like 'speling' and Google comes back in 0.1 seconds or so with Did you mean: 'spelling'. Below is a toy spelling corrector in python that achieves 80 to 90% accuracy and is very fast. It's written in a fanstically impressive 21 lines of code. It uses list comprehensions, and some of my favorite data structures (sets and default dictionaries).

 The code and supporting data files can be found in my hacks public repo under the spellcheck folder.

 The data seed comes from a big.txt file that consists of about a million words. The file is a concatenation of several public domain books from Project Gutenberg and lists of most frequent words from Wiktionary and the British National Corpus. It uses a simple training method of just counting the occurrences of each word in the big text file. Obviously Google has a lot more data to seed this spelling checker with but I was suprised at how effective this relatively small seed was.
** [[https://github.com/flycheck/flycheck][flycheck/flycheck: On the fly syntax checking for GNU Emacs]]                                               :emacs:github:top:linter: 
 <2016-12-22 Thu 11:28>

 Modern on-the-fly syntax checking extension for GNU Emacs. Try it!
** [[https://github.com/showcases/clean-code-linters][Clean code linters]]                                           :github:top:category:linters: 
 <2016-12-22 Thu 11:31>



 Make sure your code is style guide compliant with these essential code linters, many of which are already supported in your editor.
** [[https://github.com/pre-commit/pre-commit][pre-commit/pre-commit: A framework for managing and maintaining multi-language pre-commit hooks.]]                                   :python:github:top:git:commit:linter: 
 <2016-12-22 Thu 11:33>

  A framework for managing and maintaining multi-language pre-commit hooks.
** [[https://github.com/madisonmay/CommonRegex][madisonmay/CommonRegex: A collection of common regular expressions bundled with an easy to use interface.]]                                           :python:github:top:regex:lib: 
 <2016-12-22 Thu 11:37>

  A collection of common regular expressions bundled with an easy to use interface.
** [[https://github.com/StefanSchroeder/Golang-Regex-Tutorial][StefanSchroeder/Golang-Regex-Tutorial: Golang - Regular Expression Tutorial]]                                          :go:github:top:regex:tutorial: 
 <2016-12-22 Thu 11:38>

 Golang - Regular Expression Tutorial

 This is a regular expression tutorial for Go, the language.

     Introduction
     Part 1: The basics
     Part 2: Advanced
     Part 3: Cookbook
     Part 4: Alternatives

 Go to http://www.golang.org for more information about Go.

 This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.

 I am planning to setup gh-pages: http://stefanschroeder.github.io/Golang-Regex-Tutorial/

 A Chinese version translated by B1nj0y.
** [[https://github.com/joaoricardo000/whatsapp-bot-seed][joaoricardo000/whatsapp-bot-seed: A small python framework to create a whatsapp bot, with regex-callback message routing.]]                                        :python:github:top:whatsapp:bot: 
 <2016-12-22 Thu 11:39>

 A small python seed to create a Whatsapp Bot, with regex-callback routes (just like a web framework).
 (practical extension of the examples on https://github.com/tgalal/yowsup)
 ⚠️ Warning ⚠️

 Unfortunately, after some updates in the whatsapp servers, bots are beeing banned real quickly. Some just last a couple hours.
 Whatsapp does not have an open protocol, so yowsup -- the core implementation behind this seed -- relies on reverse engineering to understand the messages exchange. Right now there is a lot of issues with this implementation.
 This project had a good run, was really useful and bots prior to the server update could run for months without any trouble. Right now is very unstable and unreliable due the ban problem.
 If a new library/protocol update solves this issue, the work will return. Until then, sadly, the project will be on hold.
** [[https://github.com/openresty/sregex][openresty/sregex: A non-backtracking NFA/DFA-based Perl-compatible regex engine matching on large data streams]]                                                :c:github:top:regex:lib: 
 <2016-12-22 Thu 11:39>

 This library is already quite usable and some people are already using it in production.

 Nevertheless this library is still under heavy development. The API is still in flux and may be changed quickly without notice.

 This is a pure C library that is designed to have zero dependencies.

 No pathological regexes exist for this regex engine because it does not use a backtracking algorithm at all.

 Already rewrote the code base of Russ Cox's re1 library using the nginx coding style (yes, I love it!), also incorporated a clone of the nginx memory pool into it for memory management.

 Already ported the Thompson and Pike VM backends to sregex. The former is just for yes-or-no matching, and the latter also supports sub-match capturing.

 Implemented the case-insensitive matching mode via the SRE_REGEX_CASELESS flag.

 The full streaming matching API for the sregex engine has already been implemented, for both the Pike and Thompson regex VMs. The sub-match capturing also supports streaming processing. When the state machine is yielded (that is, returning SRE_AGAIN on the current input data chunk), sregex will always output the current value range for the $& sub-match capture in the user-supplied ovector array.

 Almost all the relevant test cases for PCRE 8.32 and Perl 5.16.2 have been imported into sregex's test suite and all tests are passing right now.

 Already implemented an API for assembling multiple user regexes and returning an ID indicating exactly which regex is matched (first), as well as the corresponding sub-match captures.

 There is also a Just-in-Time (JIT) compiler targeting x86_64 for the Thompson VM.
** [[https://github.com/tartley/python-regex-cheatsheet][tartley/python-regex-cheatsheet: Python 2.7 Regular Expression cheatsheet, as a restructured text document and Makefile to convert it to PDF]]                                    :python:github:top:regex:cheatsheat: 
 <2016-12-22 Thu 11:39>

  Python 2.7 Regular Expression cheatsheet, as a restructured text document and Makefile to convert it to PDF
** [[https://github.com/laurikari/tre][laurikari/tre: The approximate regex matching library and agrep command line tool.]]                                                :c:github:top:regex:lib: 
 <2016-12-22 Thu 11:40>

 TRE is a lightweight, robust, and efficient POSIX compliant regexp matching library with some exciting features such as approximate (fuzzy) matching.

 The matching algorithm used in TRE uses linear worst-case time in the length of the text being searched, and quadratic worst-case time in the length of the used regular expression.

 In other words, the time complexity of the algorithm is O(M^2N), where M is the length of the regular expression and N is the length of the text. The used space is also quadratic on the length of the regex, but does not depend on the searched string. This quadratic behaviour occurs only on pathological cases which are probably very rare in practice.
** [[http://www.eltech.ru/ru/fakultety/otkrytyy-fakultet/obyavleniya1/obyavleniya3][http://www.eltech.ru/ru/fakultety/otkrytyy-fakultet/obyavleniya1/obyavleniya3]]                                                             :leti:duty: 
 <2016-12-22 Thu 11:57>

 in background bash
** [[https://www.emacswiki.org/emacs/CategoryWriting][EmacsWiki: Category Writing]]                                                :emacs:wiki:for:writers: 
 <2016-12-22 Thu 12:28>

 Clicking the title heading to search for pages about writing in natural languages with Emacs.
** [[https://www.reddit.com/r/emacs/comments/5jpyeu/fastest_way_to_jump_to_bookmarks/][Fastest way to jump to bookmarks : emacs]]                                  :emacs:reddit:fastest:bookmarks:jumps: 
 <2016-12-22 Thu 14:07>

 Fastest way to jump to bookmarks (
** [[https://github.com/tsgates/pylookup][tsgates/pylookup: Emacs mode for searching python documents with convenience]]                                  :emacs:python:github:top:documentation: 
 <2016-12-22 Thu 15:07>

 Pylookup stole idea from 'http://furius.ca/haddoc', one of my favorite emacs mode for python documentation lookup. I reimplemented python code and elisp code not just to support new version of python 2.7 but also to extend it for other documentation lookup interfaces with easy. Importantly, pylookup mode is much faster and supports fancy highlighting.

 Please check, Web : http://taesoo.org/proj/pylookup.html Repo : http://github.com/tsgates/pylookup
** [[https://github.com/gabrielelanaro/emacs-for-python][gabrielelanaro/emacs-for-python: Collection of emacs extensions specifically collected for python development, with workflow guidelines!]]                                               :emacs:python:github:top: 
 <2016-12-22 Thu 15:18>

 I’m collecting and customizing the perfect environment for python development, using the most beautiful emacs customization to obtain a really modern and exciting (yet stable) way to edit text files.

 In the package are included also a lot of other packages and configurations, it’s an upstart for clean emacs installations, these configuration however are very similar to emacs-starter-kit and I suggest you to give it a try, emacs-for-python is designed to work with it (instruction below).
** [[https://www.animemusic.me/senpaiscript][SenpaiScript - room script for AnimeMusic.me]]                                             :japan:music:check:plug:dj: 
 <2016-12-24 Sat 18:21>

 SenpaiScript.


 SenpaiScript is a script that will help you determine if your next song is against the rules or if it was played recently.
 

 It is important to note that the script will only have data on versions of the song that have been played.

 That means if a song has many youtube/soundcloud versions, we might not have information on every version, and we might not have all of the versions labeled correctly.

 It's especially important to check your song manually if it says "Unknown".

 Overplayed songs and songs that break the rules can easily have over 30 versions, with new versions being added all the time. It's important to check the overplayed list, check it wasn't played today and to read our rules!
** [[https://www.pine64.org/?page_id=3707][PINEBOOK – PINE64]]                                     :raspberry:netbook:pine64:pinebook: 
 <2016-12-24 Sat 23:18>

 PINEBOOK is a 11.6″ or 14″ notebook powered by the same Quad-Core ARM Cortex
 A53 64-Bit Processor used in our popular PINE A64 Single Board Computer. It is
 lightweight and comes with a full size keyboard and large multi-touch touchpad
 for students and makers.
** [[https://github.com/ChaosForge/doomrl][ChaosForge/doomrl: D**m, the Roguelike]]                                    :lua:github:top:game:doom:roguelike: 
 <2016-12-25 Sun 01:15>

 DRL a.k.a. doomrl, a.k.a, D**m, the Roguelike http://drl.chaosforge.org/

 This release is dedicated to *eniMax, and the Jupiter Hell Kickstarter:

 https://www.kickstarter.com/projects/2020043306/jupiter-hell-a-modern-turn-based-sci-fi-roguelike

 If you enjoy this Open Source release, please consider pledging!

 Parts of this codebase date back to 2002, please do not judge! :P

 This FreePascal source code release is provided as is. You can try compiling it using the latest version of Lazarus ( http://www.lazarus-ide.org/ ). You need to download the 32 bit version (64-bit is possible, but much more tricky). You will also need the FPC Valkyrie library ( https://github.com/ChaosForge/fpcvalkyrie/ ). You will also probably need the binary files of the full game downloadable from http://drl.chaosforge.org/ (in particular the sound, soundhq, music and mp3 folder contents, and the premade doomrl.wad and core.wad if you don't want to create it yourself).
** [[https://gaming.youtube.com/watch?v=PwuIEMUFUnQ][Beginner C++ Game Programming Tutorial 0 DirectX {Introduction/Setup} - YouTube Gaming]]                              :youtube:video:tutorial:programming:funny: 
 <2016-12-25 Sun 01:41>

 [[https://gaming.youtube.com/watch?v=PwuIEMUFUnQ][Beginner C++ Game Programming Tutorial 0 DirectX Introduction/Setup] - YouTube Gaming]]
** Why google groups or mailing list                                  :google:mailing:list:rosa:rulinux:why: 
 <2016-12-25 Sun 12:39>

 Специально сделали почтовую рассылку, чтобы:
 1. Информация не терялась
 2. Легко искалась
 3. Получали уведомления по почте
 4. Возможная интеграция на сайт
 Группы Google groups.google.com
 Писать можно как из любого почтового клиента на адрес rulinux@googlegroups.com так и с WEB интерфейса почтовой рассылки.

 Еще рекомендую на нее подписаться.
** [[http://iccup.com/][iCCup — Ладдер с низким пингом и статистикой]]                             :game:starcraft:dota:server:recommendation: 
 <2016-12-25 Sun 15:12>

 [[http://iccup.com/][iCCup — Ладдер с низким пингом и статистикой]]
** [[http://sachachua.com/blog/2013/04/why-and-how-im-relearning-japanese/][Why and how I’m (re)learning Japanese - sacha chua :: living an awesome life]]                                               :emacs:learning:japanese: 
 <2016-12-25 Sun 16:53>

 Clay Shirky has a great term for this: cognitive surplus, or what you can do when you have discretionary time and available brainspace. Hence Wikipedia and open source and I Can Has Cheezburger.
** [[https://github.com/editorconfig/editorconfig-emacs#readme][editorconfig/editorconfig-emacs: EditorConfig plugin for emacs]]                                 :multi:editor:style:code:configuration: 
 <2016-12-26 Mon 18:25>
** [[https://www.youtube.com/watch?v=mqpGuSWunuc][Оформление чертежей в Компас-3D. Урок 7.Разрезы и сечения - YouTube]]                                             :kompas:3d:разрезы:сечения: 
 <2016-12-26 Mon 21:04>
** [[https://stepik.org/course/%D0%9A%D0%BB%D0%B0%D1%81%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F-%D0%BC%D0%B5%D1%85%D0%B0%D0%BD%D0%B8%D0%BA%D0%B0-1378/syllabus][Классическая механика - Stepik.org]]                                            :курс:классическая:механика: 
 <2016-12-26 Mon 22:02>


 Классическая механика
** [[https://github.com/kuanyui/moe-theme.el][kuanyui/moe-theme.el: A customizable colorful eye-candy theme for Emacser. Moe, moe, kyun!]]                                      :emacs:github:top:theme:easy:view: 
 <2016-12-26 Mon 22:22>


     Optimized for terminal's 256 color palettes.
     Black-on-white & white-on-black.
     Delightful and cheerful color palettes.
     Quite completed (and reasonable) font faces for each mode.
     Easy to customize!
         Colorful Mode-line / Powerline.
         Enlarge titles font sizes or not.
         Automatically switch between dark and light moe-theme by local time! (optional)
** [[https://www.youtube.com/watch?v=JUDYkxU6J0o][Coding Challenge #47: Pixel Sorting in Processing - YouTube]]                   :java:youtube:video:tutorial:sorting:pixel:algorithm: 
 <2016-12-26 Mon 22:59>

 In this Coding Challenge, I implement "Pixel Sorting" in Processing (Java). Using a "selection sort" algorithm, I sort the pixels of an image by brightness and hue.
** [[https://www.youtube.com/watch?v=KmNhHLx6yuw][Быстрое создание деталей в Компас 3D (практика 1) - YouTube]]                                                  :kompas:view:movement: 
 <2016-12-27 Tue 00:12>

 Привет, друзья и все те, кто в танке)) Я снова рад вас видеть на моих уроках по твердотельному моделированию в среде Компас 3D. В этом уроке мы на практике рассмотрим моделирование студенческой детали.
** [[https://manpages.debian.org/cgi-bin/man.cgi][Debian Hypertext Man Pages: Index Page]]                                               :debian:online:man:pages: 
 <2016-12-27 Tue 00:40>

  Man Page Lookup searches for man pages name and section as given in the selection menu and the query dialog. Apropos Keyword Search searches the database for the string given in the query dialog. There are also several hypertext links provided as short-cuts to various queries: Section Indexes is apropos listings of all man pages by section. Explanations of Man Sections contains pointers to the intro pages for various man sections.
** [[https://www.youtube.com/channel/UCf5qzZ1RcttbTaUl0WiojIg/about][Vlad Sh - YouTube]]                       :youtube:channel:newbie:kompas:tutorial:graphics: 
 <2016-12-27 Tue 00:44>



 КОМПАС 3D - моделирование и черчение
** [[https://www.youtube.com/watch?v=NEgSgVwWjlg][КОМПАС: Открыть 3D модель в новом окне из чертежа. - YouTube]]                                      :kompas:video:youtube:tips:window: 
 <2016-12-27 Tue 00:51>

 Спасибо огромное, очень полезное видео! Даже не знал, что можно в к.м. нажать "Выбрать компонент", и он выделится в дереве чертежа. А тем более про открытие детали из 2д в 3д. Супер! :)﻿
 1
 Denrobb
 Denrobb4 weeks ago (edited)
 Еще выяснилось следующее: чтобы открыть деталь в 3D - нужно поместить кнопку "Редактировать В Окне" на панель - из категории "Дополнительно" в настройках интерфейса (вместо категории "Все Команды"). Также есть похожая команда "В окне" в категории "Редактор" - но она не работает для данной задачи.﻿
 Alxumuk3D
 Alxumuk3D4 weeks ago
 ибо еще есть "Редактирование модели в отдельном окне" при вызове этой команды в 3д сборке. и еще не ведомо где оно есть)) и надо найти ту которая отвечает именно за открытие модели из дерева чертежа.﻿
** [[https://www.youtube.com/watch?v=dbgDMb7jAdU][Компас VS Python: Измерение всех выбранных отрезков - YouTube]]                                      :kompas:video:youtube:python:summ: 
 <2016-12-27 Tue 00:56>

 Скачать макрос можно по ссылке: https://vk.com/doc36610954_439823019
** [[https://www.youtube.com/user/cherteshi/about][Евгений Курицин - YouTube]]                             :youtube:channel:autocad:tutorials:russian: 
 <2016-12-27 Tue 01:01>



 Уроки черчения и систем автоматизированного проектирования (САПР)
 Начертательная геометрия.
 Инженерная графика.
 Машиностроительное черчение.
 Архитектурно-строительное черчение.
 Автокад/AutoCAD
 Автокад архитектура/AutoCAD Architecture
 Компас
 Инвентор/Inventor
 3D max
 Ревит/Revit

 Details
 For business inquiries:
 Country: Russia
 Links

     https://www.vatman16rus.ru/video-uroki/autocad.html Видео уроки (курс) Автокад 2D
     https://www.vatman16rus.ru/video-lessons-course-autocad-3d.html Курс Автокад 3D - часть 1
     https://www.vatman16rus.ru/house-plan-in-autocad.html План дома в Автокад 2D
     https://www.vatman16rus.ru/zadachi-nachertatelnoj-geometrii.html НГ в Автокад 2D
     https://www.vatman16rus.ru/task-engineering-garfike.html ИГ в Автокад 2D
     https://www.vatman16rus.ru/standarty-eskd.html Основные стандарты ЕСКД
     https://www.vatman16rus.ru/otzyvy.html Отзывы
     https://www.vatman16rus.ru/spravochnaya/list-commands-autocad.html Список/перечень команд Автокад
     https://www.vatman16rus.ru/cylindrical-gear.html Сборочный чертеж в Автокад 2D
     https://www.vatman16rus.ru/video-lessons-course-autocad-3d-2.html Курс Автокад 3D часть 2
     https://www.vatman16rus.ru/video-lessons-course-autocad-3d-3.html Курс Автокад 3D часть 3
     https://plus.google.com/u/0/102551123954347876685 Google+
** [[https://www.youtube.com/watch?v=fkC29sYG0yE&list=PLDeVwB8nOPP5NYbP6Fw4m-yGkAuDxPQaW][Уроки Автокад - Профессиональный видео курс Автокад 2D - YouTube]]                                 :youtube:video:tutorial:autocad:playlist: 
 <2016-12-27 Tue 01:51>

 Изометрия в Автокад или как чертить/сделать в Автокад изометрию от https://www.vatman16rus.ru
 Настройка изометрического режима (проектирования) в Автокад.
 Вычерчивание объектов в изометрии в Автокад. Изометрические плоскости.
 Статья на сайте: https://www.vatman16rus.ru/isometry-a...
** [[https://www.youtube.com/watch?v=7zWqeXqigTE][аксонометрия как чертить в компасе bandicam - YouTube]]                                                  :video:youtube:kompas: 
 <2016-12-27 Tue 14:42>

 как начертить аксонометрию в компасе
** [[https://github.com/novoid/lazyblorg][novoid/lazyblorg: Blogging with Org-mode for very lazy people]]                                        :emacs:github:top:org:mode:blog: 
 <2016-12-28 Wed 00:26>

 [[https://github.com/novoid/lazyblorg][novoid/lazyblorg: Blogging with Org-mode for very lazy people]]
** [[https://github.com/igrigorik/ga-beacon][igrigorik/ga-beacon: Google Analytics collector-as-a-service (using GA measurement protocol).]]                                            :go:github:google:analytics: 
 <2016-12-28 Wed 00:51>

 [[https://github.com/igrigorik/ga-beacon][igrigorik/ga-beacon: Google Analytics collector-as-a-service (using GA measurement protocol).]]
** [[https://github.com/matburt/mobileorg-android][matburt/mobileorg-android: An implementation of MobileOrg for the Android platform]]                                           :android:github:top:org:mode: 
 <2016-12-28 Wed 00:57>

 A new implementation of MobileOrg, an Org mode app for Android.

 The app is under heavy refactoring and is not out yet: a first release should be out in the following weeks.
** [[https://github.com/novoid/Memacs][novoid/Memacs: What did I do on February 14th 2007? Visualize your (digital) life in Org-mode]]                           :emacs:github:top:orgmode:history:time:stamp: 
 <2016-12-28 Wed 02:03>

 ## Time-stamp: <2015-03-29 13:20:39 vk> ## This file is best viewed with GNU Emacs Org-mode: http://orgmode.org/

 What were you doing on February 14th of 2007? On which tasks were you working on that very day you met your girl friend? When was the last appointments with your dentist? Who called you on telephone during that meeting with your customer last month?

 Most people can not answer such questions. With Memacs you can!

 Memacs extracts metadata (subjects, timestamps, contact information, …) from many different existing data sources (file names, emails, tweets, bookmarks, …) on your computer and generates files which are readable by GNU Emacs with Org-mode.
** [[https://github.com/coldnew/org-ioslide][coldnew/org-ioslide: Export org-mode to Google I/O HTML5 slide.]]                    :emacs:github:top:org:mode:export:presentation:html: 
 <2016-12-28 Wed 04:47>

 Export your Org document to Google I/O HTML5 slide. See DEMO slide.
** [[https://github.com/bjonnh/PyOrgMode][bjonnh/PyOrgMode: A python class for reading and writing orgmode files]]                            :python:github:top:org:mode:file:parse:read: 
 <2016-12-28 Wed 04:48>

 PyOrgMode is a small python library able to do simple tasks with your org files. It allows you to generate org files or treat them in an automated fashion.

 This project is not my top priority, but I’m more than happy to receive pull requests. Don’t worry, even if it takes some time, I go through all of them ;)

 I’d like to thank all the people that contributes (see AUTHORS file).
** [[https://github.com/bastibe/org-journal][bastibe/org-journal: A simple org-mode based journaling mode]]                                     :emacs:github:top:journal:org:mode: 
 <2016-12-28 Wed 04:49>

 Adapted from http://www.emacswiki.org/PersonalDiary

 Functions to maintain a simple personal diary / journal in Emacs. Feel free to use, modify and improve the code! — mtvoid, bastibe
** [[https://github.com/larstvei/dot-emacs/blob/master/init.org][dot-emacs/init.org at master · larstvei/dot-emacs]]                  :emacs:github:top:org:mode:configuration:init:example: 
 <2016-12-28 Wed 05:13>

 This is an Emacs configuration file written in Org mode. It is an attempt to keep my ~/.emacs.d tidy, but still be able to keep it all in one file. I aim to briefly explain all my configurations as I go along!

 I would not recommend using this configuration as-is, because it probably contains a lot you don’t really need. I do, however, hope people find some golden nuggets that they can smuggle into their own configs.
** [[https://github.com/savonet/liquidsoap][savonet/liquidsoap: Audio and video streaming language]]                                                    :streaming:language: 
 <2016-12-28 Wed 06:01>

 Our flagship is Liquidsoap, a swiss-army knife for multimedia streaming, notably used for netradios and webtvs. It has tons of features, it's free and it's open-source!

 Liquidsoap is a powerful and flexible language for describing your streams. It offers a rich collection of operators that you can combine at will, giving you more power than you need for creating or transforming streams. But liquidsoap is still very light and easy to use, in the Unix tradition of simple strong components working together.
** [[https://github.com/krisajenkins/ob-translate][krisajenkins/ob-translate: Allows you to translate blocks of text within org-mode.]]                                        :emacs:org:mode:translate:block: 
 <2016-12-28 Wed 06:52>

 Translate text in Emacs’ org-mode blocks, like so:
** Check out [[https://addons.mozilla.org/en-US/firefox/collections/risto/favorites/?page=5][add-ons coups de coeur (org-capture set)]]    :firefox:addons:set: 
 <2016-12-13 Tue 21:12>
** Check out [[https://addons.mozilla.org/en-US/firefox/addon/firetube/?src=collection&collection_id=9bf69cc4-60b7-4e7a-b2eb-0aa25603ef3a][FireTube]]                   :youtube:music:player:firefox:addons: 
 <2016-12-13 Tue 21:11>
** Use [[https://addons.mozilla.org/en-US/firefox/addon/google-search-link-fix/?src=collection&collection_id=9bf69cc4-60b7-4e7a-b2eb-0aa25603ef3a][Google search link fix]]         :firefox:addons:google:search:link:fix: 
 <2016-12-13 Tue 21:08>
#+BEGIN_QUOTE
This extension prevents Google and Yandex search pages from modifying search
result links when you click them. This is useful when copying links but it also
helps privacy by preventing the search engines from recording your clicks.
#+END_QUOTE
** Checkout new [[https://github.com/blog/2289-publishing-with-github-pages-now-as-easy-as-1-2-3][Publishing with GitHub Pages, now as easy as 1, 2, 3]] :github:pages:publishing:markdown:easy: 
 <2016-12-13 Tue 20:59>
** Check out [[https://github.com/masmu/pulseaudio-dlna][pulseaudio-dlna]] :pulseaudio:dlna:upnp:stream:server:lightweight:python: 
 <2016-12-13 Tue 14:46>
#+BEGIN_QUOTE
A lightweight streaming server which brings DLNA / UPNP and Chromecast support
to PulseAudio and Linux
#+END_QUOTE
** Use [[https://addons.mozilla.org/en-US/firefox/addon/org-mode-capture/][org-capture in Firefox]]      :emacs:org:mode:org:capture:firefox:notes: 
 <2016-12-13 Tue 13:10>

[[http://orgmode.org/worg/org-contrib/org-protocol.html#orgheadline1][org-protocol.el – Intercept calls from emacsclient to trigger custom actions]]

[[https://addons.mozilla.org/en-US/firefox/addon/org-mode-capture/reviews/799772/][by marcowahl on June 4, 2016]]
#+BEGIN_QUOTE
The capturing can be triggered by a key-sequence (default: C-M-r) or by clicking
the unicorn icon.
#+END_QUOTE

** Check out [[https://github.com/getpelican/pelican-plugins/tree/master/neighbors][Neighbor Articles Plugin for Pelican]]  :pelican:plugins:articles: 
 <2016-12-13 Tue 13:03>
** Use [[https://anonscm.debian.org/cgit/][Debian Git Alioth]]                          :debian:develop:git:alioth: 
 <2016-12-13 Tue 09:08>
** If docker failes to start at boot [[https://github.com/docker/docker/issues/23630#issue-160719709%0A][{Solved} Docker ERROR bridge have same name]] :systemd:docker:error:bridge:network:solved: 
 <2016-12-13 Tue 08:29>
shishir-a412ed commented on 16 Jun
#+BEGIN_QUOTE
rm -rf /var/lib/docker/network
#+END_QUOTE
** Watch tutorials [[https://www.google.ru/search?q=Maildir&num=30&newwindow=1&source=lnms&tbm=vid&sa=X&ved=0ahUKEwizypXKsvDQAhUI3SwKHW96CxkQ_AUICSgC&biw=1105&bih=628][Maildir Videos Google Search]] :google:search:videos:maildir: 
 <2016-12-13 Tue 08:05>
** Learn [[https://en.wikipedia.org/wiki/C_standard_library][C Standart Library Wikipedia]] :programming:c:lang:clang:lib:standart:wiki: 
 <2016-12-13 Tue 02:47>
** Check good configuration for mu4e [[https://github.com/xgarrido/emacs-starter-kit/blob/master/starter-kit-mu4e.org][xgarrido emacs-starter-kit]] :emacs:mu4e:config: 
 <2016-12-13 Tue 02:40>
** Check out [[http://bxr.su/][OpenGrok]]           :source:brach:git:freebsd:bsd:openbsd:kernel: 
 <2016-12-13 Tue 02:17>
** Check out [[http://fxr.watson.org/][Watson.org FreeBSD and Linux cross reference]] :source:freebsd:linux:cross:reference:git: 
 <2016-12-13 Tue 02:16>
** Watch programming tutorials from [[https://www.youtube.com/user/thenewboston][thenewboston]] :video:youtube:programming:everything:tutorial:c:python:django: 
 <2016-12-12 Mon 06:53>
** Read about strace autotools in article [[http://nibblestew.blogspot.ru/2016/12/what-does-configure-actually-run.html][What does configure actually run]] :make:autotools:gnu: 
 <2016-12-12 Mon 05:30>
** Watch [[https://www.youtube.com/watch?v=DJI_NXy2K1A][Open IoT Challenge 3.0 - Webinar for Participants #1]] :watch:webinar:eclipse: 
 <2016-12-09 Fri 21:19>
** Watch [[https://www.ansible.com/webinars-training/ansible-playbooks-using-network-modules?utm_content=45823722&utm_medium=social&utm_source=twitter][webinar Ansible playbook using network modules]] :ansible:playbook:modules:network: 
 <2016-12-09 Fri 14:09>
** Watch [[https://www.youtube.com/watch?v=aUf5GzD7xnM&index=27&list=RDkm8zL7VzBh0][TheNafig]]                                      :youtube:fun:ru:games: 
 <2016-12-09 Fri 02:34>
** [2017-02-25 Sat 14:17] [[http://lighttable.com/][Light Table]]
The next generation code editor
** [2017-02-25 Sat 18:01] [[https://github.com/Fanael/rainbow-delimiters][Fanael/rainbow-delimiters: Emacs rainbow delimiters mode]]
rainbow-delimiters is a "rainbow parentheses"-like mode which highlights delimiters such as parentheses, brackets or braces according to their depth. Each successive level is highlighted in a different color. This makes it easy to spot matching delimiters, orient yourself in the code, and tell which statements are at a given depth.
** [2017-02-25 Sat 18:03] [[https://github.com/Fanael/rainbow-identifiers][Fanael/rainbow-identifiers: Rainbow identifier highlighting for Emacs]]
Rainbow identifiers mode is an Emacs minor mode providing highlighting of identifiers based on their names. Each identifier gets a color based on a hash of its name.
** [2017-02-25 Sat 18:03] [[https://github.com/martanne/vis][martanne/vis: a vim like text editor]]
Vis aims to be a modern, legacy free, simple yet efficient editor combining the strengths of both vi(m) and sam.

It extends vi's modal editing with built-in support for multiple cursors/selections and combines it with sam's structural regular expression based command language.

As an universal editor it has decent Unicode support and should cope with arbitrary files including: large, binary or single-line ones.
** [2017-02-25 Sat 18:56] [[https://rtime.felk.cvut.cz/~sojka/blog/compile-on-save/]["Compile on save" in Emacs]]
When one writes programs or TeX documents, it is quite useful to compile the program/document quite often to be sure that there are no syntactical or other errors. I use Emacs and have the F9 key set to invoke the compile command which, by default, calls make and allows easy navigation through the detected errors, if there are some. One disadvantage of this command is that when there is unsaved buffer, it asks whether to save the modified file. This means that one have to either save the file by C-x C-s and then press F9 or press directly F9 and confirm the saving of the file by y. Neither variant is ideal because I do not like pressing unnecessary keys. (Yes, I know that I should switch to vim, but that’s another story.)
** Идеальные пропорции теории и практики 80% к 20% 4/1
8 ч. в день практика
2 ч. в день теория (что-то прочитать)
** [2017-02-23 Thu 10:38] [[http://fgiasson.com/blog/index.php/2016/06/21/optimal-emacs-settings-for-org-mode-for-literate-programming/][Optimal Emacs Settings for Org-mode for Literate Programming | Frederick Giasson]]
;; Let's have pretty source code blocks
(setq org-edit-src-content-indentation 0
      org-src-tab-acts-natively t
      org-src-fontify-natively t
      org-confirm-babel-evaluate nil
      org-support-shift-select 'always)
** [2017-02-24 Fri 12:06] [[https://www.youtube.com/watch?v=vgUwHs-vK-Q&list=PLpmpdicfeBju0Jj5SPdBr3GMe_Kq2nn3-][1.1 Что изучают экономисты - YouTube]]
#+BEGIN_QUOTE
с сайта www.coursera.org
Конспект http://sodershum.livejournal.com/1813...

#+END_QUOTE
** [2017-02-24 Fri 12:07] [[https://www.youtube.com/watch?v=A0zJr95N_YU&index=2&list=PLpmpdicfeBju0Jj5SPdBr3GMe_Kq2nn3-][1.2 Что изучают экономисты-2 - YouTube]]
#+BEGIN_QUOTE
С сайта www.coursera.org
Конспект http://sodershum.livejournal.com/1813...

#+END_QUOTE
** [2017-02-25 Sat 16:15] [[http://www.braveclojure.com/][Learn to Program the World's Most Bodacious Language with Clojure for the Brave and True]]
#+BEGIN_QUOTE
“Learning Clojure is the best way you can improve as a programmer because it introduces you to powerful concepts implemented in a simple, cohesive, and practical language. You learn Clojure here. Therefore, Brave Clojure is your very best friend when it comes to programming.” And lo, the syllogism was born!


#+END_QUOTE
** [2017-02-25 Sat 18:43] [[https://github.com/so-fancy/diff-so-fancy][so-fancy/diff-so-fancy: Good-lookin' diffs. Actually… nah… The best-lookin' diffs.]]
#+BEGIN_QUOTE
diff-so-fancy builds on the good-lookin' output of git contrib's diff-highlight to upgrade your diffs' appearances.

Output will not be in standard patch format, but will be readable.
No pesky + or - at line-start, making for easier copy-paste.

#+END_QUOTE
** [2017-02-26 Sun 06:29] [[https://commercialhaskell.github.io/intero/][Intero for Emacs]]
#+BEGIN_QUOTE
Intero for Emacs
Complete interactive development program for Haskell


#+END_QUOTE
** [2017-02-26 Sun 06:44] [[https://github.com/lra/mackup][lra/mackup: Keep your application settings in sync (OS X/Linux)]]

    Back ups your application settings in a safe directory (e.g. Dropbox)
    Syncs your application settings among all your workstations
    Restores your configuration on any fresh install in one command line

By only tracking pure configuration files, it keeps the crap out of your freshly new installed workstation (no cache, temporary and locally specific files are transfered).

Mackup makes setting up the environment easy and simple, saving time for your family, great ideas, and all the cool stuff you like.
** [2017-02-26 Sun 06:46] [[https://github.com/search?o=desc&q=operating+system&ref=searchresults&s=stars&type=Repositories&utf8=%25E2%259C%2593][Search · operating system]]
 We’ve found 12,968 repository results
** [2017-02-26 Sun 06:47] [[https://github.com/PenturaLabs/Linux_Exploit_Suggester][PenturaLabs/Linux_Exploit_Suggester: Linux Exploit Suggester; based on operating system release number]]
Linux Exploit Suggester; based on operating system release number.

This program run without arguments will perform a 'uname -r' to grab the Linux Operating Systems release version, and return a suggestive list of possible exploits. Nothing fancy, so a patched/back-ported patch may fool this script.

Additionally possible to provide '-k' flag to manually enter the Kernel Version/Operating System Release Version.

This script has been extremely useful on site and in exams. Now Open-sourced under GPLv2.
** [2017-02-26 Sun 06:47] [[https://github.com/SamyPesse/devos][SamyPesse/devos: (Very) basic UNIX-like operating system built when I was younger]]
This code was written several years ago as one of my first projects when I was in High School so it's normal if some parts of the code looks like "crap".

But some parts of the code are useful to learn how to create a bootable operating system with memory pagination, multitasking, virtual memory, EXT2, ...
** [2017-02-26 Sun 06:51] [[https://github.com/openSUSE/open-build-service][openSUSE/open-build-service: A generic system to build and distribute packages from sources in an automatic, consistent and reproducible way. Release your software for a wide range of operating systems and hardware architectures.]]
The Open Build Service (OBS) is a generic system to build and distribute binary packages from sources in an automatic, consistent and reproducible way. You can release packages as well as updates, add-ons, appliances and entire distributions for a wide range of operating systems and hardware architectures. More information can be found on openbuildservice.org.

The OBS consists of a backend and a frontend. The backend implements all the core functionality (i.e. building packages). The frontend provides a web application and XML API for interacting with the backend. Additionally there is a command line client (osc) for the API which is developed in a separate repository.
** [2017-02-26 Sun 06:52] [[https://github.com/Antergos/Cnchi][Antergos/Cnchi: A modern, flexible system installer for Linux]]
-c or --cache   Use pre-downloaded xz packages when possible
-d or --debug   Sets Cnchi log level to 'debug'
-e or --environment     Sets the Desktop Environment that will be installed, see desktop_info.py for options
-f or --force   Runs cnchi even if it detects that another instance is running
-i or --disable-tryit   Disables first screen's 'try it' option
-n or --no-check        Makes checks optional in check screen
-p or --packagelist     Install the packages referenced by a local xml instead of the defaults, see #617 for proper usage
-s or --log-server      Choose to which log server send Cnchi logs. Expects a hostname or an IP address
-u or --update  Upgrade/downgrade Cnchi to the web version
--disable-update        Do not search for new Cnchi versions online
--disable-rank-mirrors  Does not attempt to rank Arch and Antergos mirrors during installation
-v or --verbose         Show logging messages to stdout
-V or --version         Show Cnchi version and quit
-z or --z_hidden        Show options in development (for developers only, do not use this!)
** [2017-02-26 Sun 06:53] [[https://github.com/mickelson/attract][mickelson/attract: A graphical front-end for command line emulators that hides the underlying operating system and is intended to be controlled with a joystick or gamepad.]]
Attract-Mode is a graphical frontend for command line emulators such as MAME, MESS, and Nestopia. It hides the underlying operating system and is intended to be controlled with a joystick, gamepad or spin dial, making it ideal for use in arcade cabinet setups.

Attract-Mode was originally developed for Linux. It is known to work on Linux (x86, x86-64, ARM, Raspberry Pi), Mac OS X and Windows based-systems.

Attract-Mode is licensed under the terms of the GNU General Public License, version 3 or later.

Please visit http://attractmode.org for more information.

See Compile.md if you intend to compile Attract-Mode from source.
** [2017-02-26 Sun 10:06] [[https://vimeo.com/22798433][Quick Intro to Live Programming with Overtone on Vimeo]]
#+BEGIN_QUOTE
In this video Sam Aaron gives a fast-paced introduction to a number of key live programming techniques such as triggering instruments, scheduling future events and synth design. Finally, the viewer is shown how a simple musical sequence may be composed and then converted into an intricate Reich phase. The main body of the video was recorded in one take and features an Emacs buffer (using Emacs Live overtone.github.io/emacs-live/) for editing text and communicating with Overtone (overtone.github.io/), an expressive Clojure front-end to SuperCollider. Clojure is a state-of-the-art functional lisp emphasising immutability and concurrency (clojure.org).

#+END_QUOTE
** [2017-02-26 Sun 11:14] [[http://gigamonkeys.com/book/][Practical Common Lisp]]
#+BEGIN_QUOTE
This page, and the pages it links to, contain text of the Common Lisp book Practical Common Lisp published by Apress These pages now contain the final text as it appears in the book. If you find errors in these pages, please send email to book@gigamonkeys.com. These pages will remain online in perpetuity—I hope they will serve as a useful introduction to Common Lisp for folks who are curious about Lisp but maybe not yet curious enough to shell out big bucks for a dead-tree book and a good Common Lisp tutorial for folks who want to get down to real coding right away. However, don't let that stop you from buying the printed version available from Apress at your favorite local or online bookseller. For the complete bookstore browsing experience, you can read the letter to the reader that appears on the back cover of the treeware edition of the book.


#+END_QUOTE
** [2017-02-26 Sun 11:34] [[https://emacs.zeef.com/ehartc][Emacs by Ernst de Hart (ehartc) | ZEEF]]
#+BEGIN_QUOTE
If you ask me for the most extensible and customizable editor that will fully mold to your programming needs, my answer would be Emacs.


#+END_QUOTE
** [2017-02-26 Sun 11:34] [[http://ergoemacs.org/][ErgoEmacs]]
#+BEGIN_QUOTE
For the most efficient emacs keybinding, see Emacs: Xah Fly Keys

For ergoemacs-mode the keybinding package, please see https://ergoemacs.github.io/. It is part of GNU Emacs project, maintained by Matthew Fidler.


#+END_QUOTE
** [2017-02-26 Sun 11:39] [[http://kitchingroup.cheme.cmu.edu/blog/2014/08/08/What-we-are-using-org-mode-for/?utm_medium=referral&utm_campaign=ZEEF&utm_source=https%253A%252F%252Femacs.zeef.com%252Fehartc][What we are using org-mode for]]
#+BEGIN_QUOTE
About four years ago I picked up Emacs again, because of org-mode. It started as an experiment to see if org-mode might be a solution to managing my growing list of obligations. Since then I have learned alot about org-mode. I was feeling reflective today, so here I describe a few of the things we are doing with it now, besides just organizing my obligations! I have found org-mode useful for many other things.


#+END_QUOTE
** [2017-02-26 Sun 11:41] [[https://github.com/emacs-evil/evil][emacs-evil/evil: The extensible vi layer for Emacs.]]
#+BEGIN_QUOTE
Evil is an extensible vi layer for Emacs. It emulates the main features of Vim, and provides facilities for writing custom extensions. Also see our page on EmacsWiki.


#+END_QUOTE
** [2017-02-26 Sun 11:43] [[https://github.com/jrblevin/deft][jrblevin/deft: Deft for Emacs]]
#+BEGIN_QUOTE
Deft is an Emacs mode for quickly browsing, filtering, and editing directories of plain text notes, inspired by Notational Velocity. It was designed for increased productivity when writing and taking notes by making it fast and simple to find the right file at the right time and by automating many of the usual tasks such as creating new files and saving files.


#+END_QUOTE
** [2017-02-26 Sun 14:01] [[https://gaming.youtube.com/watch?v=Uk_-4xFCQaI][Ubuntarium by Redroot: новости и игры {26.02.2017, 11.35 MSK}-stream 720p - YouTube Gaming]]
#+BEGIN_QUOTE
asus x55a, msi cx600
#+END_QUOTE
** [2017-02-26 Sun 14:04] [[https://gaming.youtube.com/watch?v=Uk_-4xFCQaI][Ubuntarium by Redroot: новости и игры {26.02.2017, 11.35 MSK}-stream 720p - YouTube Gaming]]
#+BEGIN_QUOTE
enovo g580﻿ LMCinnamon 18.1 летает,всёработает - Intel HD Graphic + NVIDIA 635M+ Nvidia Prime
#+END_QUOTE
** [2017-02-26 Sun 15:06] [[https://github.com/clojure-emacs/cider][clojure-emacs/cider: The Clojure Interactive Development Environment that Rocks for Emacs]]
CIDER extends Emacs with support for interactive programming in Clojure. The features are centered around cider-mode, an Emacs minor-mode that complements clojure-mode. While clojure-mode supports editing Clojure source files, cider-mode adds support for interacting with a running Clojure process for compilation, debugging, definition and documentation lookup, running tests and so on.
** [2017-02-26 Sun 15:16] [[https://github.com/clojure-emacs/clojure-cheatsheet][clojure-emacs/clojure-cheatsheet: The Clojure Cheatsheet for Emacs]]
The incredibly handy Clojure Cheatsheet, updated for Clojure 1.7.0 and packaged into an easy, fast, searchable, offline form:
** [2017-02-26 Sun 15:17] [[https://github.com/clojure/clojurescript][clojure/clojurescript: Clojure to JS compiler]]
ClojureScript is a compiler for Clojure that targets JavaScript. It is designed to emit JavaScript code which is compatible with the advanced compilation mode of the Google Closure optimizing compiler.
** [2017-02-26 Sun 15:17] [[https://www.youtube.com/watch?v=efPPh2jUrkg][Clojure in Emacs from absolute zero - YouTube]]
#+BEGIN_QUOTE
There is quite a discussion on reddit (https://www.reddit.com/r/Clojure/comm...) due to a post about Emacs hurting Clojure. The idea being that it is too difficult to get started with both Emacs and Clojure. So, I explore what needs to be done to start from absolute zero to a productive Clojure environment.

#+END_QUOTE
** [2017-02-26 Sun 15:22] [[https://www.youtube.com/channel/UCEbYhDd6c6vngsF5PQpFVWg/about][Tsoding - YouTube]]
#+BEGIN_QUOTE
This is just a channel of some crazy russian dude doing crazy stuff with computers.

#+END_QUOTE
** [2017-02-26 Sun 15:49] [[https://www.liveedu.tv/project-discovery/][Project Discovery at LiveEdu.tv]]
#+BEGIN_QUOTE
The project discovery page is to help viewers discover and find projects for their programming language and difficulty level. Enter your programming language and see projects separated by the level beginner, intermediate and expert. Follow a project to get notification.

#+END_QUOTE
** [2017-02-26 Sun 15:53] [[https://www.google.ru/search?q=gigabyte+brix&ie=utf-8&oe=utf-8&gws_rd=cr&ei=oKyyWMjDHYG8sgGD6oKIAw][gigabyte brix - Google Search]]
gigabyte brix
** [2017-02-26 Sun 16:01] [[https://github.com/clojure/tools.nrepl][clojure/tools.nrepl: A Clojure network REPL that provides a server and client, along with some common APIs of use to IDEs and other tools that may need to evaluate Clojure code in remote environments.]]
nREPL is a Clojure network REPL that provides a REPL server and client, along with some common APIs of use to IDEs and other tools that may need to evaluate Clojure code in remote environments.
** [2017-02-26 Sun 16:05] [[https://github.com/technomancy/leiningen][technomancy/leiningen: Automate Clojure projects without setting your hair on fire.]]


    "Leiningen!" he shouted. "You're insane! They're not creatures you can fight—they're an elemental—an 'act of God!' Ten miles long, two miles wide—ants, nothing but ants! And every single one of them a fiend from hell..."

        from Leiningen Versus the Ants by Carl Stephenson

Leiningen is for automating Clojure projects without setting your hair on fire.
** [2017-02-26 Sun 16:08] [[https://practicalli.github.io/spacemacs/][Introduction · Clojure development with Spacemacs & Cider]]
#+BEGIN_QUOTE
Spacemacs is the easiest way to unleash all the power of Emacs, the classic editor with designs on being an operating system.


#+END_QUOTE
** [2017-02-26 Sun 16:20] [[https://www.youtube.com/watch?v=mSRxiYNk3bY][Learning CIDER - 1 - Jacking into the REPL - YouTube]]
#+BEGIN_QUOTE
Want to learn how to be more productive in Clojure? CIDER is a world-class Clojure development environment for Emacs.

#+END_QUOTE
** [2017-02-26 Sun 16:20] [[https://www.youtube.com/watch?v=ePfEt7QE9d0][Productive Emacs (CIDER): Code Completion - YouTube]]
#+BEGIN_QUOTE
Learn how to setup and use Ciders' code completion within Emacs for Clojure and ClojureScript.

#+END_QUOTE
** [2017-02-26 Sun 16:20] [[https://www.youtube.com/watch?v=VVd4ow-ZcX0&t=2852s][Starting Clojure - YouTube]]
#+BEGIN_QUOTE
An introductory Clojure screencast, including some quick overview of the language, explorations with the REPL, and a walkthrough in setting up a productive Clojure development environment, and finally a live-coding session where a complete (though not pretty!) Clojure webapp is built.  See http://cemerick.com/2012/05/02/starti... for some links of things mentioned in the screencast.
SHOW MORE

#+END_QUOTE
** [2017-02-26 Sun 16:27] [[https://github.com/sagemath/sage][sagemath/sage: Mirror of the Sage source tree]]
The Sage Library is GPLv2+, and included packages have compatible OSS licenses (see COPYING.txt). Over 400 people have contributed code to Sage. Please see the following web page for a list:
** [2017-02-26 Sun 16:59] [[https://www.youtube.com/watch?v=4jFi7CmxXAk][Maple Quick Start Tutorial - YouTube]]
#+BEGIN_QUOTE
For more Maple training materials, visit:
http://www.maplesoft.com/support/trai...

In this introductory course, you will become fluent in the Maple environment, without ever having to leave your desk. You will learn how to use context menus, task assistants, and palettes to perform powerful analyses and create high-impact graphics with only a minimal knowledge of commands. This course will give you the tools you need to get you started quickly, and a solid foundation upon which to build your future Maple explorations.

#+END_QUOTE
** [2017-02-26 Sun 18:44] [[https://www.youtube.com/watch?v=iqQPMdHsq58&t=1566s][Getting Started with Maple - YouTube]]
#+BEGIN_QUOTE
This webinar is designed for the user who comes to Maple for the first time. It will demonstrate "how to get started" by clarifying the user interface and the ways math can be entered into Maple, and then "processed." Coverage includes:

#+END_QUOTE
** [2017-02-26 Sun 18:50] [[https://www.youtube.com/watch?v=OXif5c5gIok][Maple - Solving linear systems using "solve" - YouTube]]
#+BEGIN_QUOTE
Using the "solve" command to solve systems of linear equations in Maple.

#+END_QUOTE
** [2017-02-26 Sun 19:22] [[https://www.youtube.com/watch?v=Id7EbZyPOs8][Some Useful MAPLE Commands - YouTube]]
#+BEGIN_QUOTE
This is another video on using MAPLE with some additional commands useful for Operations Research and Simulation classes.
Note: The videos on this channel are instructional videos developed for the classes that I teach at the department of Industrial Engineering, Morgan State University in Baltimore Maryland.

#+END_QUOTE
** [2017-02-27 Mon 06:33] [[https://www.youtube.com/watch?v=vmBdR44IMW8&list=PLtNErhYMkHnHKZhBo6N_zl3_nQkY70pO3][Learning ClojureScript Tutorial | What You Will Learn In This Course - YouTube]]
#+BEGIN_QUOTE
Want access to all of our ClojureScript training videos? Visit our Learning Library, which features all of our training courses and tutorials at http://learn.infiniteskills.com?utm_s...

#+END_QUOTE
** [2017-02-27 Mon 07:05] [[https://github.com/paul-issartel/nnreddit][paul-issartel/nnreddit: Reddit backend for Gnus]]
NOTE: currently for reading only, login and posting not yet implemented. Message status (read vs. unread, new, flagged) is also not yet handled. Contributions welcome!
** [2017-02-27 Mon 07:25] [[http://www.linuxfromscratch.org/lfs/downloads/stable/][Index of /lfs/downloads/stable]]
 [PARENTDIR]    Parent Directory                -        
[TXT]   LFS-BOOK-8.0-NOCHUNKS.html      2017-02-25 14:10        2.0M     
[ ]     LFS-BOOK-8.0.pdf        2017-02-25 14:21        1.7M     
[ ]     LFS-BOOK-8.0.tar.bz2    2017-02-25 14:10        212K     
[ ]     lfs-bootscripts-20150222.tar.bz2        2017-02-25 14:10        31K      
[ ]     md5sums 2017-02-26 07:45        3.9K     
[ ]     wget-list       2017-02-26 07:45        4.7K
** [2017-02-27 Mon 09:02] [[https://www.youtube.com/user/southeastlinuxfest/videos][southeastlinuxfest - YouTube]]
#+BEGIN_QUOTE
711 subscribers
SUBSCRIBED 711

#+END_QUOTE
** [2017-02-27 Mon 09:08] [[https://www.youtube.com/watch?v=nuSak-eDeJ4&list=PLd5M_BcWQFG41UpPydPlu9nvwn9qVBM6l&index=3][Myth Busting: Fewer distros means better Linux - YouTube]]
#+BEGIN_QUOTE
Myth Busting: Fewer distros means better Linux.

UPDATE:
To be perfectly clear, This video has nothing to do with Matthew Moore (I don't pay attention to him, not subscribed or on his G+). I've heard this myth from countless sources over the years and it is not aimed at or about any one specifically. If anything I said in this video matches anyone or appears at a specific point in time as to seem like a rebuke, it is simply a coincidence.

#+END_QUOTE
** [2017-02-27 Mon 09:14] [[https://github.com/boot-clj/boot][boot-clj/boot: Build tooling for Clojure.]]
Boot is a Clojure build framework and ad-hoc Clojure script evaluator. Boot provides a runtime environment that includes all of the tools needed to build Clojure projects from scripts written in Clojure that run in the context of the project.
** [2017-02-27 Mon 09:21] [[https://github.com/offensive-security/kali-nethunter][offensive-security/kali-nethunter: The Kali NetHunter Project]]
The Kali NetHunter is an Android penetration testing platform targeted towards Nexus and OnePlus devices built on top of Kali Linux, which includes some special and unique features. Of course, you have all the usual Kali tools in NetHunter as well as the ability to get a full VNC session from your phone to a graphical Kali chroot, however the strength of NetHunter does not end there. We've incorporated some amazing features into the NetHunter OS which are both powerful and unique. From pre-programmed HID Keyboard (Teensy) attacks, to BadUSB Man In The Middle attacks, to one-click MANA Evil Access Point setups, access to the Offensive Security Exploit Database... And yes, NetHunter natively supports wireless 802.11 frame injection with a variety of supported USB NICs.
** [2017-02-27 Mon 12:37] [[https://github.com/v-dimitrov/gnome-shell-extension-stealmyfocus][v-dimitrov/gnome-shell-extension-stealmyfocus: Shell Extension that let window that demand attention to steal focus]]

Shell Extension that let window that demand attention to steal focus
** [2017-02-27 Mon 13:00] [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Defining-Functions.html][GNU Emacs Lisp Reference Manual: Defining Functions]]
defun is the usual way to define new Lisp functions. It defines the symbol name as a function with argument list args and body forms given by body. Neither name nor args should be quoted.
** [2017-03-02 Thu 18:44] [[http://emacs.stackexchange.com/questions/7890/org-plus-contrib-and-org-with-require-or-use-package][org mode - org-plus-contrib and org with `require` or `use-package` - Emacs Stack Exchange]]


The correct way to do this with use-package is as follows:

(use-package org
  :ensure org-plus-contrib
 ...

The first argument makes sure that it is the org.el file being sourced. The :ensure argument makes sure that you are getting the version with all the extras. Of course you also need to have ("org" . "http://orgmode.org/elpa/") in your package-archives alist.
** [2017-03-02 Thu 18:47] [[http://vkontakte-feed.appspot.com/][ВКонтакте RSS]]


В связи с слишком большим количеством приходящих на сервис запросов, которые невозможно обработать в рамках бесплатного аккаунта Google App Engine и отсутствием у автора времени и желания как-либо дальше поддерживать и развивать данный проект, сервис прекращает свою работу.

Вы можете запустить для себя свой экземпляр ВКонтакте RSS в рамках своего (бесплатного) аккаунта Google App Engine. Все необходимые для этого действия описаны здесь. Однако, просьба обратить внимание на то, что автор не оказывает помощь и консультации по настройке Google App Engine - всю необходимую информацию вы можете найти в документации.
* sway pulse audio volume control
bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-volume \
                $(pactl list sinks | grep -B 1 RUNNING | sed '1q;d' | sed 's/[^0-9]\+//g') +5%
