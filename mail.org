:PROPERTIES:
:ID:       99e3f313-1b9d-42e2-be41-0bab0f698329
:END:

#+title: Mail

* Services
- [[https://posteo.de/en][Email green, secure, simple and ad-free - posteo.de -]]
- [[https://parsio.io/][Parsio.io | Extract data from emails and any documents]]
- [[https://github.com/s0md3v/ote][s0md3v/ote: Generate Email, Register for anything, Get the OTP/Link]]

* Cheatsheet
- movemail
  : movemail -vv --max-messages=1 --preserve --uidl

- Yandex send mail
  : curl --ssl-reqd --url 'smtps://smtp.yandex.ru:465' --user 'i18n.wugi@yandex.ru:xxxxxxxx' --mail-from 'i18n.wugi@yandex.ru' --mail-rcpt 'i18n.wugi@yandex.ru' --upload-file <(echo -e "From: i18n.wugi@yandex.ru\nTo: i18n.wugi@yandex.ru\nSubject: Test message\n\nHello.\nThis is a test message.\n\n")

* Tools
  - [[https://github.com/sj26/mailcatcher][sj26/mailcatcher: Catches mail and serves it through a dream.]]
  - [[https://github.com/leahneukirchen/mblaze][leahneukirchen/mblaze: Unix utilities to deal with Maildir]]
  - [[https://github.com/mailhog/MailHog][mailhog/MailHog: Web and API based SMTP testing]]

** Services
- https://postmaster.google.com/

* Programms
- [[https://github.com/AfterShip/email-verifier][AfterShip/email-verifier: A Go library for email verification without sending any emails.]]
- [[https://gitlab.com/shackra/goimapnotify][Jorge Javier Araya Navarro / goimapnotify · GitLab]]
- [[https://github.com/Harry-027/go-notify][Harry-027/go-notify: An email automation solution, written in Golang.]]
- [[https://github.com/foxcpp/maddy][foxcpp/maddy: ✉️ Composable all-in-one mail server.]]
- [[https://luxing.im/mutt-integration-with-gmail-using-oauth/][mutt integration with Gmail using OAuth – Luxing Huang]]
- [[https://github.com/rtucker/imap2maildir][rtucker/imap2maildir: Backs up an IMAP mailbox to a maildir. Useful for backing up mail stored on free webmail providers, etc.]]
- [[https://github.com/honest-technology/api.unverified.email][honest-technology/api.unverified.email: A service to help with testing of sending the right emails]]
- [[https://github.com/knadh/listmonk][knadh/listmonk: High performance, self-hosted newsletter and mailing list manager with a modern dashboard. Go + React.]]
- [[https://www.gnu.org/software/anubis/manual/anubis.html][GNU Anubis Manual: GNU Anubis]]
- [[https://github.com/jdufresne/fakesmtpd][jdufresne/fakesmtpd: Fake SMTP Server]]
- [[https://git.sr.ht/~sircmpwn/aerc][~sircmpwn/aerc - sourcehut git]]
- [[https://github.com/sdushantha/tmpmail][sdushantha/tmpmail: ✉️ A temporary email right from your terminal]]
- [[https://lightmeter.io/][Home - Lightmeter]]
- [[https://www.1secmail.com/][1sec MAIL: disposable temporary email]]
- [[https://github.com/brokenprogrammer/mnotify][brokenprogrammer/mnotify: Simple email notification application.]]
- [[https://github.com/deepfence/PacketStreamer][deepfence/PacketStreamer: Distributed tcpdump for cloud native environments]]

* Clients
- [[https://github.com/soywod/himalaya][soywod/himalaya: 📫 Minimalist CLI email client, written in Rust.]]
** WEB
- [[https://www.mailpile.is/][Mailpile: e-mail that protects your privacy]]
** Notmuch
- [[https://github.com/teythoon/blaecksprutte][teythoon/blaecksprutte spam-tagger working on notmuch databases]]
- [[https://github.com/kmein/much][kmein/much: Minimalistic mail reader / client for notmuch]]
*** Front-end
- [[https://astroidmail.github.io/][Astroid Mail]]

* Spam filter
- [[https://www.rspamd.com/][Rspamd spam filtering system]]
- [[https://www.pyzor.org/en/latest/index.html][Welcome to Pyzor’s documentation! — Pyzor 1.0 documentation]]

* Learning
- [[https://www.learndmarc.com/][Learn and Test DMARC]]

* Gmail
- [[https://github.com/jessfraz/gmailfilters][jessfraz/gmailfilters: A tool to sync Gmail filters from a config file to your account.]]
- [[https://github.com/mbrt/gmailctl][mbrt/gmailctl: Declarative configuration for Gmail filters]]
- [[https://github.com/mxrch/GHunt][mxrch/GHunt: 🕵️‍♂️ Investigate Google Accounts with emails.]]

* debug
- [[https://mailcatcher.me/][MailCatcher]]

* self-hosted
- [[https://github.com/progmaticltd/homebox][progmaticltd/homebox: A set of ansible scripts to build a personal mail server / private cloud / etc.]]
- [[https://gitlab.com/simple-nixos-mailserver/nixos-mailserver][simple-nixos-mailserver / nixos-mailserver · GitLab]]

* Swaks example

#+begin_example
mathieu@berlin ~$ swaks -t guix-ci@gnu.org -s fencepost.gnu.org:587 -tls -a LOGIN
Username: othacehe
Password: xxx
=== Trying fencepost.gnu.org:587...
*** Error connecting to fencepost.gnu.org:587:
*** 	IO::Socket::INET6: connect: timeout
#+end_example

* exim

exim -bhc 8.8.8.8

* Convert
** maildir to mailbox
[[https://wiki.dovecot.org/Migration/MailFormat][Migration/MailFormat - Dovecot Wiki]]
#+begin_example
  #!/usr/bin/env perl
  # dw-maildirtombox.pl
  # dw = Dovecot Wiki :-)
  # NOTE! The output file must not contain single quotes (')!
  # figure out which program to run
  $cmd="reformail -f1";
  system("$cmd </dev/null >/dev/null 2>/dev/null") == 0 or $cmd="formail";
  system("$cmd </dev/null >/dev/null 2>/dev/null") == 0
  or die "cannot find reformail or formail on your \$PATH!\nAborting";
  $dir=$ARGV[0];
  $outputfile=$ARGV[1];
  if (($outputfile eq '') || ($dir eq ''))
  { die "Usage: ./archivemail.pl mailbox outputfile\nAborting"; }
  if (!stat("Maildir/$dir/cur") || !stat("Maildir/$dir/new"))
  { die "Maildir/$dir is not a maildir.\nAborting"; }
  @files = (<Maildir/$dir/cur/*>,<Maildir/$dir/new/*>);
  foreach $file (@files) {
    next unless -f $file; # skip non-regular files
    next unless -s $file; # skip empty files
    next unless -r $file; # skip unreadable files
    $file =~ s/'/'"'"'/;  # escape ' (single quote)
    $run = "cat '$file' | $cmd >>'$outputfile'";
    system($run) == 0 or warn "cannot run \"$run\".";
  }
#+end_example

* Search

- [[https://github.com/filiphanes/fts-elastic][filiphanes/fts-elastic: ElasticSearch FTS implementation for the Dovecot mail server]]
- [[https://doc.dovecot.org/configuration_manual/fts/solr/][Solr FTS Engine — Dovecot documentation]]
