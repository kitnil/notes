:PROPERTIES:
:ID:       5f97ab36-6f72-47ef-b0cd-3fc6cf39d827
:END:
#+title: systemd

- [[https://github.com/NullSense/fuzzy-sys][NullSense/fuzzy-sys: Utility tool for using systemctl interactively]]
- [[https://github.com/DankBSD/complexd][DankBSD/complexd: A complex of daemons implementing systemd APIs required by desktop environments]]
- [[https://github.com/alexdelorenzo/grub2systemd][grub2systemd]]
- [[https://www.freedesktop.org/software/systemd/man/systemd.service.html#ExecStart=][systemd.service]]

* journald
- [[https://www.loggly.com/ultimate-guide/using-journalctl/][Using journalctl - The Ultimate Guide To Logging]]
- journalctl -b -1  -p "emerg".."crit"
- journalctl CONTAINER_NAME=taskexecutor -f
- journalctl -o json --output-fields=MESSAGE,PRIORITY,_PID,SYSLOG_IDENTIFIER,_SYSTEMD_UNIT | grep -v 'iptables\|zabbix-agent' | lnav

* 

https://archlinux.org.ru/forum/topic/12616/

#+begin_example
[Unit]
Description=Transmission BitTorrent Daemon
After=network.target run-media-wigust-hdd.mount
Requires=run-media-wigust-hdd.mount
[Service]
User=transmission
Type=notify
ExecStart=/usr/bin/transmission-daemon -f --log-error
[Install]
WantedBy=multi-user.target
#+end_example

#+begin_example
[Unit]
Description=MediaTomb Daemon
After=network.target run-media-wigust-hdd.mount
Requires=run-media-wigust-hdd.mount
[Service]
EnvironmentFile=/etc/conf.d/mediatomb
ExecStart=/usr/bin/mediatomb -p $MT_PORT -u $MT_USER -g $MT_GROUP \
  -P $MT_PIDFILE -l $MT_LOGFILE -m $MT_HOME -f $MT_CFGDIR $MT_OPTIONS
Restart=on-failure
RestartSec=5
[Install]
WantedBy=multi-user.target
#+end_example

[[https://shtsh.blogspot.com/2012/05/systemd.html][Немного о linux: Пробуем на вкус systemd]]



[Service]
Type = simple
ExecStart = /usr/sbin/clamd --foreground=yes
Restart = on-failure
IOSchedulingPriority = 7
CPUSchedulingPolicy = 5
Nice = 19
PrivateTmp = true
MemoryLimit=500M
CPUQuota=50%



#+begin_example
  #!/bin/bash
  
  trap 'kill $(jobs -p)' EXIT
  
  /opt/test/service &
  PID=$!
  
  /bin/systemd-notify --ready
  
  while(true); do
      FAIL=0
  
      kill -0 $PID
      if [[ $? -ne 0 ]]; then FAIL=1; fi
  
  #    curl http://localhost/test/
  #    if [[ $? -ne 0 ]]; then FAIL=1; fi
  
      if [[ $FAIL -eq 0 ]]; then /bin/systemd-notify WATCHDOG=1; fi
  
      sleep 1
  done
#+end_example

- [[https://www.freedesktop.org/software/systemd/man/kernel-command-line.html][kernel-command-line]]
  : systemd.default_timeout_start_sec=

- [[https://www.freedesktop.org/software/systemd/man/kernel-command-line.html][kernel-command-line]]
  : systemd.mask=

  1. home.mount
  2. mount--home.service

* Tools
- [[https://github.com/pop-os/system-updater][pop-os/system-updater: Systemd services for checking for and applying system updates.]]
