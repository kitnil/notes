:PROPERTIES:
:ID:       bb14685f-f6d2-460e-b2d5-a8c964fa4752
:END:
#+title: Assembler

- [[https://github.com/nanochess][nanochess (Oscar Toledo)]]
- [[https://github.com/Blackend/Cyjon][Blackend/Cyjon: A simple, clean code, multi-tasking operating system written in pure assembly language for 64-bit processors from the AMD64 family.]]
- [[https://www.youtube.com/c/CryptFunIT/playlists?view=1&sort=dd&shelf_id=0][(97) CryptoFun [ IT ] - YouTube]]
- [[https://www.youtube.com/c/BenEater/featured][(97) Ben Eater - YouTube]]
- [[https://developer.amd.com/resources/developer-guides-manuals/][Developer Guides, Manuals & ISA Documents - AMD]]
- [[https://github.com/cch123/asm-cli-rust][cch123/asm-cli-rust: interative assembly shell written in rust]]
- [[https://github.com/cch123/asm-cli][cch123/asm-cli: Interactive shell of assembly language(X86/X64) based on unicorn and keystone]]
- [[https://www.agner.org/optimize/#manuals][Software optimization resources. C++ and assembly. Windows, Linux, BSD, Mac OS X]]
- [[https://github.com/tenderlove/asmrepl][tenderlove/asmrepl: A REPL for x86-64 assembly language]]
- [[https://github.com/icebreaker/floppybird][icebreaker/floppybird: Floppy Bird (OS)]]
- [[https://github.com/nanochess/Invaders][nanochess/Invaders: Invaders game in 512 bytes (boot sector)]]
- [[https://github.com/io12/BootMine][io12/BootMine: Bootable minesweeper game in a 512-byte boot sector]]
- [[https://github.com/mat-sz/bfloader][mat-sz/bfloader: Brainfuck IDE and interpreter in 512 bytes. (boot sector)]]
- [[https://github.com/Dman95/SASM][Dman95/SASM: SASM - simple crossplatform IDE for NASM, MASM, GAS and FASM assembly languages]]
- [[https://github.com/icedland/iced][icedland/iced: Blazing fast and correct x86/x64 disassembler, assembler, decoder, encoder for .NET, Rust, Python, JavaScript]]
- [[https://github.com/x64dbg/x64dbg][x64dbg/x64dbg: An open-source x64/x32 debugger for windows.]]
- [[https://github.com/ThomasJaeger/VisualMASM][ThomasJaeger/VisualMASM: Visual MASM - Assembly IDE for Microsoft MASM]]
- [[https://github.com/Schweigi/assembler-simulator][Schweigi/assembler-simulator: Simple 8-bit Assembler Simulator with Angular.js]]
- [[https://github.com/TheThirdOne/rars][TheThirdOne/rars: RARS -- RISC-V Assembler and Runtime Simulator]]
- [[https://github.com/JohnEarnest/Octo][JohnEarnest/Octo: A Chip8 IDE]]
- [[https://github.com/hlorenzi/customasm][hlorenzi/customasm: üíª An assembler for custom, user-defined instruction sets! https://hlorenzi.github.io/customasm/web/]]
- [[https://github.com/andrescv/jupiter][andrescv/jupiter: RISC-V Assembler and Runtime Simulator]]
- [[https://github.com/echo-devim/fhex][echo-devim/fhex: A Full-Featured HexEditor compatible with Linux/Windows/MacOS]]
- [[https://github.com/horsicq/XOpcodeCalc][horsicq/XOpcodeCalc: Opcode calculator]]
- [[https://github.com/yasp/yasp][yasp/yasp: yasp is a fully functional web-based assembler development environment, including a real assembler, emulator and debugger.]]
- [[https://github.com/andrewchambers/minias][andrewchambers/minias: A mini x86-64 assembler for fun and learning.]]
- [[https://github.com/robiot/cbot][robiot/cbot: Shutdown or reboot your linux system with x86_64 assembly]]
- [[https://github.com/franeklubi/dino][franeklubi/dino: Chrome's t-rex based bootsector game (512 bytes) written in 16-bit x86 assembly (now with 8086 support!)]]
- [[https://github.com/akyoto/asm][akyoto/asm: An x86-64 assembler written in Go.]]
- [[https://github.com/nikolay-govorov/asm-server][nikolay-govorov/asm-server: Stupid "hello world" http server on NASM. Linux, x64, NASM, zero dependencies.]]
- [[https://github.com/NikitaIvanovV/snake-asm][NikitaIvanovV/snake-asm: Tiny snake game written in x86_64 assembly for Linux]]
- [[https://github.com/loov/lensm][loov/lensm: Go assembly and source viewer]]

[[https://habr.com/ru/post/569204/#comment_23288698]]
–û–±—ã—á–Ω–æ –∞—Å—Å–µ–º–±–ª–µ—Ä —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –º–∞—à–∏–Ω–Ω—ã—Ö –∫–æ–¥–æ–≤ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ 1 –≤ 1. –ú—ã,
–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞ 1 –∫—É—Ä—Å–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ –ø–∏—Å–∞–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤ –º–∞—à–∏–Ω–Ω—ã—Ö –∫–æ–¥–∞—Ö –≤
debug.exe, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –≤–∑–¥–æ—Ö–Ω—É—Ç—å —Å –æ–±–ª–µ–≥—á–µ–Ω–∏–µ–º, –∫–æ–≥–¥–∞ –Ω–∞—á–∞–ª—Å—è –∞—Å—Å–µ–º–±–ª–µ—Ä. –î–∞
—Ç—Ä–∞–Ω—Å–ª—è—Ç–æ—Ä –≤—ã—á–∏—Å–ª—è–µ—Ç —Ä–∞–∑–º–µ—Ä—ã –æ–ø–µ—Ä–∞–Ω–¥–æ–≤ –∏ –∞–¥—Ä–µ—Å–∞ –º–µ—Ç–æ–∫ –∑–∞ –≤–∞—Å, –Ω–æ –≤ –æ—Å—Ç–∞–ª—å–Ω–æ–º
–Ω–µ —Å–∫–∞–∑–∞–ª –±—ã, —á—Ç–æ –µ—Å—Ç—å –∫–∞–∫–∞—è-—Ç–æ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–∞–∑–Ω–∏—Ü–∞. –ó–Ω–∞—è –∞—Å—Å–µ–º–±–ª–µ—Ä,
–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ –≤ –æ—Ç–ª–∞–¥—á–∏–∫–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –Ω–∞ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
–º–µ—Å—Å–µ–¥–∂–±–æ–∫—Å–∞ ("This program is not licensed"), –ø—Ä–æ–º–æ—Ç–∞—Ç—å –∫–æ–¥ –Ω–µ–º–Ω–æ–∂–∫–æ –≤–≤–µ—Ä—Ö –∏
–∑–∞–º–µ–Ω–∏—Ç—å jne –Ω–∞ je (–Ω–∞–ø—Ä–∏–º–µ—Ä, –æ–±—ã—á–Ω–æ –∫–æ–Ω–µ—á–Ω–æ –≤—Å—ë —Å–ª–æ–∂–Ω–µ–µ) - –∏ –≤–æ—Ç —É–∂–µ
–ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±–æ–π –∫–ª—é—á, –∫—Ä–æ–º–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –≤–µ—Ä–Ω–æ–≥–æ. –ó–∞—Ç–µ–º, –∑–Ω–∞—è, –≥–¥–µ
–Ω–∞—Ö–æ–¥–∏—Ç—Å—è —ç—Ç–æ –º–µ—Å—Ç–æ –≤ –∫–æ–¥–µ - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ –∫–∞–∫–æ–π-–Ω–∏–±—É–¥—å HIEW –∏ –ø–∞—Ç—á–∏—Ç–µ –æ–ø–∫–æ–¥
–ø–µ—Ä–µ—Ö–æ–¥–∞ —Ä—É–∫–∞–º–∏. –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—è –≥–æ–ª—ã–µ hex-–∫–æ–¥—ã —Å–¥–µ–ª–∞—Ç—å —Ç–æ –∂–µ —Å–∞–º–æ–µ –±—É–¥–µ—Ç –≥–æ—Ä–∞–∑–¥–æ
—Å–ª–æ–∂–Ω–µ–µ.

llvm-mc
#+begin_example
oleg@guixsd ~$ echo "0x33 0xc0 0x31 0xc0" | /gnu/store/‚Ä¶-llvm-10.0.0/bin/llvm-mc -mcpu=i686 -disassemble -show-inst
	.text
	xorl	%eax, %eax              # <MCInst #15207 XOR32rr_REV
                                        #  <MCOperand Reg:22>
                                        #  <MCOperand Reg:22>
                                        #  <MCOperand Reg:22>>
	xorl	%eax, %eax              # <MCInst #15206 XOR32rr
                                        #  <MCOperand Reg:22>
                                        #  <MCOperand Reg:22>
                                        #  <MCOperand Reg:22>>
#+end_example

* Learning
- [[https://github.com/brianrhall/Assembly][brianrhall/Assembly: Assembly Programming and Computer Architecture for Software Engineers]]
- [[https://github.com/hackclub/some-assembly-required][hackclub/some-assembly-required: An approachable introduction to assembly.]]
