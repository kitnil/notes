#+title: LUA

- [[https://github.com/Kampfkarren/selene][Kampfkarren/selene: A blazing-fast modern Lua linter written in Rust]]
- [[https://github.com/VoidmatrixHeathcliff/LuaLibs][VoidmatrixHeathcliff/LuaLibs: Make Lua great again]]
- [[https://fennel-lang.org/][the Fennel programming language]]
- [[https://github.com/kikito/inspect.lua][kikito/inspect.lua: Human-readable representation of Lua tables]]
- [[https://github.com/lunarmodules/Penlight][lunarmodules/Penlight: A set of pure Lua libraries focusing on input data handling (such as reading configuration files), functional programming (such as map, reduce, placeholder expressions,etc), and OS path management. Much of the functionality is inspired by the Python standard libraries.]]
- [[https://github.com/dlannan/ljos][dlannan/ljos: A very simple linux kernel that boots into a luajit command line.]]
- [[https://github.com/bungle/lua-resty-jq][bungle/lua-resty-jq: LuaJIT FFI bindings to jq]]
- [[https://github.com/galtet/amqp-client][galtet/amqp-client: A wrapper for then amqp rabbitmqlib in lua]]
- [[https://github.com/mpeterv/luacheck][mpeterv/luacheck: A tool for linting and static analysis of Lua code.]]
- list files in directory
#+BEGIN_SRC lua
  for dir in io.popen([[dir "/"]]):lines() do print(dir) end
#+END_SRC

* OpenResty
- [[https://github.com/bungle/awesome-resty][bungle/awesome-resty: A List of Quality OpenResty Libraries, and Resources.]]
- [[https://github.com/bungle/lua-resty-template][bungle/lua-resty-template: Templating Engine (HTML) for Lua and OpenResty.]]
- [[https://github.com/upyun/slardar][upyun/slardar: Updating your upstream list and run lua scripts without reloading Nginx.]]

* Misc
- [[https://github.com/azoyan/geopattern][azoyan/geopattern: Generate beautiful SVG patterns from a string on Lua (5.1 - 5.4 and LuaJIT)]]
- [[https://github.com/apioak/apioak][apioak/apioak: Full Lifecycle Management API Gateway.]]
- [[https://github.com/emmericp/MoonGen][emmericp/MoonGen: MoonGen is a fully scriptable high-speed packet generator built on DPDK and LuaJIT. It can saturate a 10 Gbit/s connection with 64 byte packets on a single CPU core while executing user-provided Lua scripts for each packet. Multi-core support allows for even higher rates. It also features precise and accurate timestamping and rate control.]]
- [[https://github.com/sile-typesetter/sile][sile-typesetter/sile: Simonâ€™s Improved Layout Engine]]
