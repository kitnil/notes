:PROPERTIES:
:ID:       63242a98-634c-4236-999c-5b26d588b4d9
:END:
#+title: BGP

- [[https://habr.com/ru/post/211176/][Защита от DDOS атак средствами BGP / Хабр]]
- [[https://www.jordanwhited.com/posts/corebgp-plugging-in-to-bgp/][CoreBGP - Plugging in to BGP | Jordan Whited]]
- [[https://github.com/jwhited/corebgp][jwhited/corebgp: CoreBGP is a BGP library written in Go that implements the BGP FSM with an event-driven, pluggable model.]]
- [[https://github.com/RIPE-NCC/bgpdump][RIPE-NCC/bgpdump: Utility and C Library for parsing MRT files]]
- [[https://github.com/osrg/rustybgp][osrg/rustybgp: BGP implemented in the Rust Programming Language]]
- [[https://github.com/osrg/gobgp][osrg/gobgp: BGP implemented in the Go Programming Language]]
- [[https://github.com/osrg/bgperf][osrg/bgperf]]
- [[https://isbgpsafeyet.com/][Is BGP safe yet? · Cloudflare]]
- [[https://www.ssi.gouv.fr/uploads/2016/03/bgp-configuration-best-practices.pdf][bgp-configuration-best-practices.pdf]]
- [[https://peeringdb.com/net/10572][PeeringDB DataIX]]
- [[https://techstat.net/bgp-how-to-configure-basic-multipathload-balancing/][BGP - How to configure basic Multipath/Load balancing - Techstat]]
- [[https://blog.benjojo.co.uk/post/bgp-battleships][Playing battleships over BGP]]
- [[https://habr.com/ru/post/184350/][Сети для самых маленьких. Часть восьмая. BGP и IP SLA / Хабр]]
- [[https://q05t9n.wordpress.com/2016/02/08/2-%D0%B0%D1%82%D1%80%D0%B8%D0%B1%D1%83%D1%82%D1%8B-bgp-%D0%B8-%D0%B2%D1%8B%D0%B1%D0%BE%D1%80-%D0%BF%D1%83%D1%82%D0%B8/][2. Атрибуты BGP и выбор пути. – q05t9n goes ccnp]]
- [[https://github.com/Exa-Networks/exabgp/wiki/Controlling-ExaBGP-:-possible-options-for-process][Controlling ExaBGP : possible options for process · Exa-Networks/exabgp Wiki]]
- [[https://erco.xyz/][Erco: Exabgp Routes Controller]]
- [[https://thepacketgeek.com/exabgp/getting-started/][ExaBGP and Python Getting Started - thePacketGeek]]
- [[https://www.dasblinkenlichten.com/working-with-exabgp-4/][Working with ExaBGP 4 – Das Blinken Lichten]]
- [[https://github.com/faucetsdn/ryu][faucetsdn/ryu: Ryu component-based software defined networking framework]]
- [[https://www.noction.com/blog/bgp-flow-specification-version-2][BGP Flow Specification Version 2 | Noction]]
- [[https://github.com/inex/IXP-Manager][inex/IXP-Manager: Full stack web application powering peering at ~200 Internet Exchange Points (IXPs) globally.]]
- [[https://bgp.he.net/][Hurricane Electric BGP Toolkit]]

* Looking glass
- [[http://lg.level3carrier.com/lg/lg.cgi][AS58682 Looking Glass]]
- [[https://lg.telia.net/][Telia Looking Glass]]
- [[https://lg.he.net/][Looking Glass - Hurricane Electric (AS6939)]]
- [[https://looking.house/point.php?id=86][Point in Netherlands, Amsterdam, data center Datacenter.com from Eurobyte]]
- [[https://www.msk-ix.ru/en/lookingglass/][LG :: MSK-IX]]
- [[https://looking.house/index.php][Looking Glass points: execute host, ping, traceroute and mtr commands for domain name and IPv4 or IPv6 addresses]]
- [[https://bgpview.io/asn/43362#upstreams-v4][AS43362 Hosting Ltd BGP Network Information - BGPView]]

** [[http://lg.mtu.ru/cgi-bin/lgform_img.cgi][MTS]]
Our PeeringDB page: as8359
Our Peering Policy page: here
Should you have any questions, please contact noc@mtu.ru

* RIPE
- [[https://apps.db.ripe.net/db-web-ui/query?bflag=&searchtext=AS-DATAIX&source=RIPE#resultsSection][Webupdates — RIPE Network Coordination Centre]]
- [[https://habr.com/ru/company/linxdatacenter/blog/526508/][Основы работы с базой данных RIPE / Хабр]]

Полезные запросы whois:

- Посмотреть шаблон объекта.
  : whois -t object_type

- Узнать все маршруты, которые происходят из автономной системы.
  : whois -T route -i origin ASxxxxx

- Узнать все объекты, которые защищены объектом «maintainer_name».
  : whois -i mnt-by maintainer_name

- Узнать, на какие более мелкие подсети поделена подсеть «subnet».
  : whois -M subnet

- Узнать, из какой более крупной подсети образована подсеть «subnet».
  : whois -L subnet

* Learning
- [[https://antiddos.biz/nastrojka-bgp-marshrutizacii-dlya-raboty-s-sobstvennoj-setyu/][Настройка BGP маршрутизации для работы с собственной сетью. - AntiDDoS.biz]]
  - [[https://dn42.eu/Home][dn42 is a big dynamic VPN, which employs Internet technologies (BGP, whois database, DNS, etc).]]
- [[https://github.com/leahneukirchen/docker-lab-bgp][leahneukirchen/docker-lab-bgp: A small BGP lab in Docker]]
- [[https://linkmeup.ru/blog/1198/][Сети для самых маленьких. Часть восьмая. BGP и IP SLA - linkmeup]]
- [[https://www.youtube.com/playlist?list=PLxbwE86jKRgMpuZuLBivzlM8s2Dk5lXBQ][Free CCNA 200-301 | Complete Course 2022 - YouTube]]
- [[https://habr.com/ru/post/282532/][Ищем свободные IPv4 в BGP full-view / Хабр]]
- [[https://linkmeup.ru/blog/1201/][Сети для самых маленьких. Микровыпуск №3. IBGP - linkmeup]]

** BGP

BGP stands for Border Gateway Protocol, which is a standardized exterior gateway protocol designed to exchange routing and reachability information between routers in different autonomous systems (AS) on the Internet.

BGP is used to build routing tables in routers that direct packets between networks, and it enables routers to make informed decisions on which paths to use when forwarding packets. The information exchanged between routers using BGP includes the destination network, the next hop to the destination network, and various attributes that describe the characteristics of the path, such as its cost, reliability, and latency.

BGP is an important component of the Internet's infrastructure and plays a crucial role in enabling the interconnectivity of different networks and ensuring that data can be reliably and efficiently routed from one place to another.

** What is BGP full view?

A "BGP full view" refers to the complete set of BGP routing information that a router has learned from its neighbors. In BGP, routers exchange information about the routes they know about and update their routing tables accordingly. The full view includes all of the BGP routes that the router has learned from its neighbors, including information about the destination network, the next hop, and the various attributes that describe the path.

Having a full view of the BGP routing information is important for routers in making informed decisions about how to forward packets. The full view allows routers to determine the best paths to use for forwarding packets and to detect and avoid potential routing loops.

In some cases, a router may not have a full view of the BGP routing information due to a lack of neighbors, limited resources, or other factors. In these cases, the router may only have a partial view of the BGP routing information, which can result in suboptimal routing decisions and increased latency.

** Use cases for BG full view?

There are several use cases for a BGP full view:

    Internet Service Providers (ISPs): ISPs use BGP to exchange routing information with other ISPs and to build routing tables that allow them to direct traffic between their networks and the Internet. Having a full view of the BGP routing information is important for ISPs because it allows them to make informed decisions about how to forward traffic, ensure that traffic is being routed over the most efficient paths, and avoid potential routing loops.

    Data Centers: Data centers use BGP to interconnect their networks and to ensure that traffic is being routed between their networks in an efficient and reliable manner. A full view of the BGP routing information is important for data centers because it allows them to make informed decisions about how to forward traffic, avoid potential routing loops, and ensure that traffic is being routed over the most efficient paths.

    Enterprises: Enterprises use BGP to interconnect their networks and to ensure that traffic is being routed between their networks in an efficient and reliable manner. A full view of the BGP routing information is important for enterprises because it allows them to make informed decisions about how to forward traffic, avoid potential routing loops, and ensure that traffic is being routed over the most efficient paths.

    Government Agencies: Government agencies use BGP to interconnect their networks and to ensure that traffic is being routed between their networks in an efficient and reliable manner. A full view of the BGP routing information is important for government agencies because it allows them to make informed decisions about how to forward traffic, avoid potential routing loops, and ensure that traffic is being routed over the most efficient paths.

Overall, having a full view of the BGP routing information is important for ensuring efficient and reliable routing of traffic on the Internet.

** What is public abstract class in Java?

A public abstract class in Java is a class that has been declared as public, meaning it can be accessed from anywhere in the code, and abstract, meaning it cannot be instantiated and must be subclassed. Abstract classes are used to provide a common interface for a group of related classes. They can contain both abstract and non-abstract methods, but typically abstract classes contain mostly abstract methods which must be overridden by any concrete subclasses. The purpose of having an abstract class is to define a common structure or behavior that can be shared among several classes.

** What is public abstract method in Java?

A public abstract method in Java is a method declared with the "public" and "abstract" keywords. The "public" keyword makes the method accessible from anywhere in the program, while the "abstract" keyword means that the method has no implementation, and must be overridden in a subclass. Abstract methods can only be declared in abstract classes, which cannot be instantiated on their own. When a subclass extends an abstract class, it must provide implementations for all of the abstract methods declared in the abstract class.

** What is public final method in Java?

A public final method in Java is a method that is declared with the "public" and "final" keywords. The "public" keyword means that the method can be accessed and used by any code outside of the class in which it is declared. The "final" keyword means that the method cannot be overridden or changed by any subclass. Once a public final method is defined in a class, it cannot be changed in any subclass. This is useful in cases where the method represents some essential behavior that should always remain the same, regardless of any changes made in subclasses.

** What is protected abstract method in Java?

In Java, a protected abstract method is a method declared with the protected access modifier and the abstract keyword. This means that the method is only accessible within the same package or from a subclass of the class that declares the method. An abstract method is a method that has no implementation, it is just a declaration, and it is meant to be overridden by subclasses.

When a class contains an abstract method, it must also be declared as abstract. An abstract class cannot be instantiated, it is only meant to be subclassed. When a subclass extends an abstract class, it must implement all of the abstract methods in the superclass.

** What is less-than sign near class name?

The less-than sign (<) near a class name in Java is used to specify type parameters for a generic class. Generics were introduced in Java 5 to provide a type-safe way of creating and using collections. A generic class is a class that can work with any data type, rather than being specific to a single type. The type parameter is specified between angle brackets, and it acts as a placeholder for the actual data type that will be used when the class is instantiated. For example, a generic class called "Box" that holds an object of any type can be declared as follows:

csharp

class Box<T> {
  private T object;
  
  public T getObject() {
    return object;
  }
  
  public void setObject(T object) {
    this.object = object;
  }
}

In this example, T is the type parameter, and it acts as a placeholder for the actual data type that will be used when the Box class is instantiated. To use this class, you can declare a Box object and specify the actual data type between the angle brackets:

php

Box<Integer> integerBox = new Box<>();
integerBox.setObject(123);

** What is public final class in Java?

In Java, a public final class is a class that can be accessed from anywhere in the code and cannot be extended or subclassed. A final class is a class that cannot be subclassed. When a class is declared as public final, it means that it can be accessed from any other class in the code, but cannot be extended or subclassed. This is useful for creating utility classes or for enforcing certain constraints on the implementation of a class.

** What is @Override in Java?

In Java, the @Override annotation is used to indicate that a method is intended to override a method in a superclass. When you annotate a method with @Override, the compiler will check that the method being overridden actually exists in the superclass, and will generate an error if it doesn't. This helps to catch accidental naming errors and makes it easier to see when a method is intended to override a superclass method. The use of the @Override annotation is considered best practice in Java programming, and is widely used by Java developers.

** Could you explain this in Java?

public abstract class Proc {
    protected Proc() {}
}

The code you've posted is a Java class declaration for an abstract class named Proc.

    The class is declared as public, meaning it can be accessed from anywhere in the codebase.
    The class is declared as abstract, meaning it cannot be instantiated on its own and must be extended by a subclass.
    The constructor is declared as protected, meaning it can only be accessed within the same class or a subclass of this class.

In summary, this code declares a public abstract class Proc with a protected constructor, meaning that instances of the class cannot be created directly but only by subclasses that extend the Proc class.
