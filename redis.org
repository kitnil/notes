:PROPERTIES:
:ID:       c2382a8a-7043-4726-964c-22eeae043e7f
:END:
#+title: Redis

- [[https://github.com/mylxsw/redis-tui][mylxsw/redis-tui: A Redis Text-based UI client in CLI]]
- [[https://github.com/twitter/twemproxy][twitter/twemproxy: A fast, light-weight proxy for memcached and redis]]
- [[https://github.com/nicolasff/webdis][nicolasff/webdis: A Redis HTTP interface with JSON output]]
- [[https://github.com/diego3g/rocketredis][diego3g/rocketredis: A beautiful Redis GUI]]
- [[https://github.com/Tencent/Tendis][Tencent/Tendis: Tendis is a high-performance distributed storage system fully compatible with the Redis protocol.]]
- [[https://github.com/stashed/redis][stashed/redis backup and restore plugin]]
- [[https://github.com/DGKSK8LIFE/redisql][DGKSK8LIFE/redisql: MySQL to Redis caching made easy]]
- [[https://redis.io/commands/eval][EVAL – Redis]]
- [[http://www.bestfeng.vip/blog/detail/19][Redis技术内幕之数据结构篇 - 烂笔头]]
- [[https://github.com/EQ-Alpha/KeyDB][EQ-Alpha/KeyDB: A Multithreaded Fork of Redis]]
- [[https://github.com/hosein-yousefii/Redis-cluster][hosein-yousefii/Redis-cluster: Creating Redis cluster on docker in a second.]]
- [[https://habr.com/ru/company/nixys/blog/591555/][Поиск причин замедленной работы redis на виртуальной машине / Хабр]]
- [[https://github.com/laixintao/iredis][laixintao/iredis: Interactive Redis: A Terminal Client for Redis with AutoCompletion and Syntax Highlighting.]]
- [[https://github.com/oliver006/redis_exporter][oliver006/redis_exporter: Prometheus Exporter for Redis Metrics. Supports Redis 2.x, 3.x, 4.x, 5.x, 6.x, and 7.x]]

: redis-cli -h redis.intr hgetall "mailboxes:test@test.wugi.info"

: redis.intr:6379> KEYS mailboxUserData:*example.org*
: redis.intr:6379> GET mailboxUserData:test@example.org
: redis.intr:6379> HGETALL 'mailboxes:test@example.org'

* Alternatives
- [[https://github.com/dragonflydb/dragonfly][dragonflydb/dragonfly: A modern replacement for Redis and Memcached]]
- [[https://github.com/snapchat/keydb][Snapchat/KeyDB: A Multithreaded Fork of Redis]]
- [[https://github.com/skytable/skytable][skytable/skytable: Skytable is a fast, secure and reliable realtime NoSQL database with keyspaces, tables, data types, authn/authz, snapshots and more to build powerful apps]]

* ChatGPT

** What ports uses Redis?

Redis uses several default ports for different purposes:

    Port 6379: This is the default port used for Redis server-client communication.

    Port 16379: This is the default port used for Redis Sentinel, which is used for high availability and automatic failover.

    Port 26379: This is the default port used for Redis Cluster, which is used for distributed Redis deployments.

Note that these ports are the default values and can be changed in the Redis configuration file if necessary. Additionally, Redis also supports SSL encryption for secure communication, which uses different ports (usually 6380 for the Redis server and 16380 for Redis Sentinel).

** What protocols they are (TCP or UDP)?

Redis uses the TCP (Transmission Control Protocol) protocol for communication between the Redis client and server, as well as between Redis nodes in a Redis Cluster.

UDP (User Datagram Protocol) is not used by Redis for communication as it is a connectionless protocol and does not provide the reliability and consistency guarantees that are required for a data storage system like Redis.

** How to configure read-only Redis replica?

To configure a read-only Redis replica, you need to make some changes to the Redis configuration file on the replica instance. Here are the steps to follow:

    Open the Redis configuration file on the replica instance using a text editor.

    Locate the line that begins with "replicaof". This line should specify the IP address and port number of the master Redis instance that this replica is replicating.

    Add the following line to the configuration file:

    bash

    replica-read-only yes

    This setting ensures that the replica instance is in read-only mode and cannot accept write commands.

    Save the changes to the configuration file and restart the Redis replica instance.

Once the replica instance has been restarted with these changes, it will be in read-only mode and will only accept read commands (e.g. GET, KEYS, etc.) from clients. Any write commands (e.g. SET, DEL, etc.) will be rejected with an error message.

** How to specify master host?

To specify the master host for a Redis replica, you need to make some changes to the Redis configuration file on the replica instance. Here are the steps to follow:

    Open the Redis configuration file on the replica instance using a text editor.

    Locate the line that begins with "replicaof". This line should be commented out (i.e. prefixed with a "#" character) by default.

    Uncomment the "replicaof" line and specify the IP address or hostname of the master Redis instance and its port number. The syntax for this line is as follows:

    php

replicaof <master_host> <master_port>

For example, if the master Redis instance is running on IP address 192.168.1.100 and listening on port 6379, the "replicaof" line should look like this:

yaml

    replicaof 192.168.1.100 6379

    Save the changes to the configuration file and restart the Redis replica instance.

Once the replica instance has been restarted with these changes, it will connect to the specified master Redis instance and start replicating data from it.

** Could you show me an example of a full configuration file for this?

Certainly! Here is an example of a full Redis configuration file for a read-only replica with a specified master host:

bash

# Redis configuration file

# General
daemonize yes
pidfile /var/run/redis/redis.pid

# Networking
bind 0.0.0.0
port 6379
tcp-backlog 511

# Replication
replicaof 192.168.1.100 6379
replica-read-only yes

# Persistence
dir /var/lib/redis
save 900 1
save 300 10
save 60 10000
appendonly yes
appendfilename "appendonly.aof"

# Security
requirepass mypassword
masterauth mypassword

# Performance
maxmemory 2gb
maxmemory-policy allkeys-lru

# Logging
logfile /var/log/redis/redis.log
loglevel notice

# Other
databases 16

In this example, the "replicaof" line specifies that this Redis instance is a replica of a master Redis instance running on IP address 192.168.1.100 and port 6379. The "replica-read-only" line ensures that this replica instance is in read-only mode and cannot accept write commands.

Note that this is just an example configuration file, and the specific settings you need will depend on your use case and environment.
