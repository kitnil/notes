* Libraries
- [[https://github.com/WebAssembly/WASI][WebAssembly/WASI: WebAssembly System Interface]]

* 

:PROPERTIES:
:ID:       08c70099-b2ad-4f34-8497-186eb24f3150
:END:
[[https://github.com/WasmEdge/WasmEdge][WasmEdge/WasmEdge: WasmEdge is a lightweight, high-performance, and extensible WebAssembly runtime for cloud native, edge, and decentralized applications. It powers serverless apps, embedded functions, microservices, smart contracts, and IoT devices.]]

https://habr.com/ru/post/569204/#comment_23290076
Я бы сказал оно совсем не про графику. WebAssembly на самом деле самое путающее название, т.к. оно и не Web и не assembly: оно изначально задумывалась как ускорение JS в браузере, но примерно в то же время стрельнул Node.js и JS рантаймы вылезли за пределы обычного Web. Плюс на текущий момент существует довольно немало standalone runtime для запуска wasm. За час даже можно написать свой собственный. Ну а не-ассемблер он потому что ассемблер транслируется напрямую в машинный код, а wasm — в код виртуальной машины, который транслирует инструкции в машинный код, считай IR, с некоторым ассемблероподобным синтаксисом.


standalone runtime для запуска wasm
То есть запуск не самого быстрого кода на виртуальной машине вне браузера? А в чем смысл если есть куча других языков для локальный программ?

domix32
25.07.2021 в 17:44
В первую очередь безопасность и простота. Как говорил создатель докер — если бы wasm был во время того как создавался докер, то докер мог и не стрельнуть.
Во-вторых, как и в случае с node js — можно шарить один рантайм между фронтом и бэком.
В-третьих, кроссплатформа и возможность run on 4 billion devices тут же под боком. Есть мнение, что edge-вычисления могут иметь немалый профит с этого.
А так есть FAQ по теме https://github.com/WebAssembly-Enthusiasts/info/blob/master/FAQ/ru.md
