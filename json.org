* DONE JSON to a table with jtbl                                  :blog:json:
CLOSED: [2020-10-03 Sat 22:10]
:PROPERTIES:
:ID:       704b58ff-8bec-48f4-9c37-a6f47e674783
:END:
:LOGBOOK:
- State "DONE"       from ""           [2020-10-03 Sat 22:10]
:END:
:PROPERTIES:
:CREATED:  [2020-10-03 Sat 22:10]
:ID: 2020-10-03-jtbl
:END:

[[https://github.com/kellyjonbrazil/jtbl][jtbl]] is a Python programm to convert JSON from STDIN to table.  It could be
installed via [[https://guix.gnu.org/][GNU Guix package manager]] from =ace3e549= commit.

The following example demonstrates =ifconfig= command output converted to JSON
with =jc= utility, piped to =jq= to filter, and to =jtbl= generate a table:
#+BEGIN_SRC bash
  ifconfig \
   | jc --ifconfig \
   | jq --raw-output "[.[] | {\"interface\": .name, \"ipv4_addr\": .ipv4_addr}]" \
   | jtbl
#+END_SRC

#+RESULTS:
| interface       |       ipv4_addr |
| --------------- | --------------- |
| br-92487ea26a13 |      172.20.0.1 |
| br-9a47a96d15a3 |      172.19.0.1 |
| br-cf57cf7f08d8 |      172.18.0.1 |
| br-fc2bf1eb0e5a |     10.10.100.1 |
| docker0         |      172.17.0.1 |
| enp6s0          | 192.168.100.120 |
| lo              |       127.0.0.1 |
| tapvpn          |  172.16.103.177 |

* Tutorials
- [[https://github.com/miloyip/json-tutorial][json-tutorial]]

* Links
- [[https://github.com/owenthereal/jqplay][owenthereal/jqplay: A playground for jq, written in Go]]
- [[https://github.com/cube2222/jql][cube2222/jql: Easy JSON Query Processor with a Lispy syntax in Go]]
- [[https://github.com/simdjson/simdjson][simdjson/simdjson: Parsing gigabytes of JSON per second]]
- [[https://github.com/paularmstrong/normalizr][paularmstrong/normalizr: Normalizes nested JSON according to a schema]]
- [[https://github.com/jpmens/jo][jpmens/jo: JSON output from a shell]]
- http://headers.jsontest.com/
- [[https://github.com/antonmedv/red][antonmedv/red: Terminal log analysis tools]]
- [[https://github.com/kellyjonbrazil/jc][kellyjonbrazil/jc]] This tool
  serializes the output of popular gnu linux command line tools and file types
  to structured JSON output. This allows piping of output to tools like jq.
- [[https://github.com/wlezzar/jtab][wlezzar/jtab: Print any json data as a table from the command line]]
- [[https://github.com/fiatjaf/jqview][fiatjaf/jqview: simplest possible native GUI for inspecting JSON objects with jq]]
- [[https://github.com/chrisdone/jl][chrisdone/jl: Functional sed for JSON]]
- [[https://github.com/google/jsonnet][google/jsonnet: Jsonnet - The data templating language]]
- [[https://github.com/google/go-jsonnet][google/go-jsonnet]]
- [[https://github.com/sclevine/yj][sclevine/yj: CLI - Convert between YAML, TOML, JSON, and HCL]]
- [[https://github.com/alash3al/re-txt][alash3al/re-txt: converts text-formats from one to another, it is very useful if you want to re-format a json file to yaml, toml to yaml, csv to yaml, ... etc]]
- [[https://github.com/tidwall/jsonc][tidwall/jsonc: Parse json with comments and trailing commas.]]
- [[https://github.com/uzimaru0000/tv][uzimaru0000/tv: CLI tool for displaying table]]
- [[https://github.com/kvz/json2hcl][kvz/json2hcl: Convert JSON to HCL, and vice versa. We don't use json2hcl anymore ourselves, so we can't invest time into it. However, we're still welcoming PRs.]]
- [[https://github.com/jzelinskie/faq][jzelinskie/faq: Format Agnostic jQ -- process various formats with libjq]]
- [[https://github.com/ryncsn/poorjson.sh][ryncsn/poorjson.sh: A minimal POSIX compatible JSON parser and query tool, within 60 lines of codes, only requires `sed`. (Should be) Compatible with bash, dash, zsh, busybox and any other POSIX shell.]]
- [[https://github.com/PaulJuliusMartinez/jless][PaulJuliusMartinez/jless: jless is a command-line JSON viewer designed for reading, exploring, and searching through JSON data.]]
- [[https://github.com/brimdata/zed][brimdata/zed: Tooling for super-structured data: a new and easier way to manipulate data]]
- [[https://github.com/hherman1/gq][hherman1/gq: jq but using go instead]]
- [[https://github.com/TomWright/dasel][TomWright/dasel: Select, put and delete data from JSON, TOML, YAML, XML and CSV files with a single tool. Supports conversion between formats and can be used as a Go package.]]
- [[https://github.com/AykutSarac/jsonvisio.com][AykutSarac/jsonvisio.com: Visualize your JSON data onto graphs seamlessly.]]
- [[https://github.com/jsonhero-io/jsonhero-web][jsonhero-io/jsonhero-web: JSON Hero is an open-source, beautiful JSON explorer for the web that lets you browse, search and navigate your JSON files at speed. ðŸš€]]
- [[https://github.com/denisidoro/floki][denisidoro/floki: A JSON/EDN browser for the terminal]]
- [[https://json5.org/][JSON5 â€“ JSON for Humans | JSON5]]
- [[https://github.com/noahgorstein/jqp][noahgorstein/jqp: A TUI playground to experiment with jq]]
- [[https://jwt.io/][JSON Web Tokens - jwt.io]]

* Examples
: ssh web15.intr ifconfig | jc --ifconfig | jq --raw-output '[.[] | select(.mac_addr != null) | select(.ipv4_addr != null) | select(.name != "docker0") | {"name": .name, "mac": .mac_addr, "addr": .ipv4_addr, "mask": .ipv4_mask}]'

* Programs
- json_pp

* Tools
- [[https://github.com/lukas-krecan/JsonUnit][lukas-krecan/JsonUnit: Compare JSON in your Unit Tests]]
