* DONE jq pipe to jtbl example                                         :blog:
CLOSED: [2013-08-22 Thu 21:06]
:LOGBOOK:
- State "DONE"       from ""           [2013-08-22 Thu 21:06]
:END:
:PROPERTIES:
:CREATED:  [2013-08-22 Thu 21:06]
:ID: 2013-08-22-jq-jtbl
:END:

You could pipe jq to jtbl:
#+BEGIN_SRC bash
  ssh web31.intr -- ifconfig | jc --ifconfig | jq --raw-output "[.[] | {\"interface\": .name, \"ipv4_addr\": .ipv4_addr}]" | jtbl
#+END_SRC

* Tutorials
- [[https://github.com/miloyip/json-tutorial][json-tutorial]]

* Links
- [[https://github.com/cube2222/jql][cube2222/jql: Easy JSON Query Processor with a Lispy syntax in Go]]
- [[https://github.com/simdjson/simdjson][simdjson/simdjson: Parsing gigabytes of JSON per second]]
- [[https://github.com/paularmstrong/normalizr][paularmstrong/normalizr: Normalizes nested JSON according to a schema]]
- [[https://github.com/jpmens/jo][jpmens/jo: JSON output from a shell]]
- http://headers.jsontest.com/
- [[https://github.com/antonmedv/red][antonmedv/red: Terminal log analysis tools]]
- [[https://github.com/kellyjonbrazil/jc][kellyjonbrazil/jc]] This tool
  serializes the output of popular gnu linux command line tools and file types
  to structured JSON output. This allows piping of output to tools like jq.
- [[https://github.com/wlezzar/jtab][wlezzar/jtab: Print any json data as a table from the command line]]
- [[https://github.com/fiatjaf/jqview][fiatjaf/jqview: simplest possible native GUI for inspecting JSON objects with jq]]
- [[https://github.com/chrisdone/jl][chrisdone/jl: Functional sed for JSON]]
- [[https://github.com/google/jsonnet][google/jsonnet: Jsonnet - The data templating language]]
- [[https://github.com/google/go-jsonnet][google/go-jsonnet]]
- [[https://github.com/sclevine/yj][sclevine/yj: CLI - Convert between YAML, TOML, JSON, and HCL]]
