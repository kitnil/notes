* DONE JSON to a table with jtbl                                  :blog:json:
CLOSED: [2020-10-03 Sat 22:10]
:LOGBOOK:
- State "DONE"       from ""           [2020-10-03 Sat 22:10]
:END:
:PROPERTIES:
:CREATED:  [2020-10-03 Sat 22:10]
:ID: 2020-10-03-jtbl
:END:

[[https://github.com/kellyjonbrazil/jtbl][jtbl]] is a Python programm to convert JSON from STDIN to table.  It could be
installed via [[https://guix.gnu.org/][GNU Guix package manager]] from =ace3e549= commit.

The following example demonstrates =ifconfig= command output converted to JSON
with =jc= utility, piped to =jq= to filter, and to =jtbl= generate a table:
#+BEGIN_SRC bash
  ifconfig \
   | jc --ifconfig \
   | jq --raw-output "[.[] | {\"interface\": .name, \"ipv4_addr\": .ipv4_addr}]" \
   | jtbl
#+END_SRC

#+RESULTS:
| interface       |       ipv4_addr |
| --------------- | --------------- |
| br-92487ea26a13 |      172.20.0.1 |
| br-9a47a96d15a3 |      172.19.0.1 |
| br-cf57cf7f08d8 |      172.18.0.1 |
| br-fc2bf1eb0e5a |     10.10.100.1 |
| docker0         |      172.17.0.1 |
| enp6s0          | 192.168.100.120 |
| lo              |       127.0.0.1 |
| tapvpn          |  172.16.103.177 |

* Tutorials
- [[https://github.com/miloyip/json-tutorial][json-tutorial]]

* Links
- [[https://github.com/cube2222/jql][cube2222/jql: Easy JSON Query Processor with a Lispy syntax in Go]]
- [[https://github.com/simdjson/simdjson][simdjson/simdjson: Parsing gigabytes of JSON per second]]
- [[https://github.com/paularmstrong/normalizr][paularmstrong/normalizr: Normalizes nested JSON according to a schema]]
- [[https://github.com/jpmens/jo][jpmens/jo: JSON output from a shell]]
- http://headers.jsontest.com/
- [[https://github.com/antonmedv/red][antonmedv/red: Terminal log analysis tools]]
- [[https://github.com/kellyjonbrazil/jc][kellyjonbrazil/jc]] This tool
  serializes the output of popular gnu linux command line tools and file types
  to structured JSON output. This allows piping of output to tools like jq.
- [[https://github.com/wlezzar/jtab][wlezzar/jtab: Print any json data as a table from the command line]]
- [[https://github.com/fiatjaf/jqview][fiatjaf/jqview: simplest possible native GUI for inspecting JSON objects with jq]]
- [[https://github.com/chrisdone/jl][chrisdone/jl: Functional sed for JSON]]
- [[https://github.com/google/jsonnet][google/jsonnet: Jsonnet - The data templating language]]
- [[https://github.com/google/go-jsonnet][google/go-jsonnet]]
- [[https://github.com/sclevine/yj][sclevine/yj: CLI - Convert between YAML, TOML, JSON, and HCL]]
- [[https://github.com/alash3al/re-txt][alash3al/re-txt: converts text-formats from one to another, it is very useful if you want to re-format a json file to yaml, toml to yaml, csv to yaml, ... etc]]

* Examples
: ssh web15.intr ifconfig | jc --ifconfig | jq --raw-output '[.[] | select(.mac_addr != null) | select(.ipv4_addr != null) | select(.name != "docker0") | {"name": .name, "mac": .mac_addr, "addr": .ipv4_addr, "mask": .ipv4_mask}]'

* Programs
- json_pp
