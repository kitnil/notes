:PROPERTIES:
:ID:       733b2bb3-34be-4bae-86ea-a64b9e403cfd
:END:
#+title: Wireguard

* Installation
- [[https://docs.linuxserver.io/images/docker-wireguard][linuxserver/wireguard - LinuxServer.io]]
- [[https://www.linuxserver.io/blog/routing-docker-host-and-container-traffic-through-wireguard][Routing Docker Host And Container Traffic Through WireGuard | LinuxServer.io]]

* Learning
- [[https://habr.com/ru/company/indriver/blog/586006/][WireGuard. How it was / Хабр]]
- [[https://habr.com/ru/companies/ruvds/articles/532140/][Wireguard для Kubernetes и удобные GUI / Хабр]]

* Configuration

** server

#+begin_example
[Interface]
PrivateKey = 
Address = 10.66.66.1/24
ListenPort = 63665
PostUp = iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o ens3 -j MASQUERADE
PostDown = iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o ens3 -j MASQUERADE

[Peer]
PublicKey = 5xGlB3nuDI56LehsK2ILBA99LrQoxZcTWmL1HBGaBCk=
AllowedIPs = 10.66.66.2/32
#+end_example

** client

#+begin_example
[Interface]
PrivateKey = 
Address = 10.66.66.2/32

[Peer]
PublicKey = Q5G8bmBxhuPnoFgELcJpo2SJ+X8kkteHz5xvpbLupwA=
Endpoint = 178.250.247.88:63665
AllowedIPs = 10.66.66.0/24
#+end_example

** docker

[[https://old.reddit.com/r/selfhosted/comments/u1oys9/access_a_docker_container_web_service_only/][Access a Docker container web service only through Wireguard : selfhosted]]

#+begin_src yaml
  version: "3.9"

  services:
    wireguard:
      image: weejewel/wg-easy
      container_name: wireguard
      restart: unless-stopped
      cap_add:
        - NET_ADMIN
        - SYS_MODULE
      environment:
        - WG_HOST=<HOST>
        - PASSWORD=<PASSWORD>
      volumes:
        - ./config:/etc/wireguard
      ports:
        - 51820:51820/udp
      sysctls:
        - net.ipv4.conf.all.src_valid_mark=1
        - net.ipv4.ip_forward=1
      networks:
        - npm

  networks:
    npm:
      external: true
#+end_src

* Cheat sheet

- debug
  : echo module wireguard +p > /sys/kernel/debug/dynamic_debug/control

** Possible issues

*** RX errors on an interface

Origin: [[https://lists.zx2c4.com/pipermail/wireguard/2018-April/002726.html][RX Errors from Android Peer]]

Those RX frame errors are caused by the interface receiving packets
that have a source IP not included in the allowed-ips list of the
peer.

https://git.zx2c4.com/WireGuard/tree/src/receive.c#n351

* Misc
- [[https://github.com/AlexMKX/mrvpn][AlexMKX/mrvpn: Multi-Route VPN]]
- [[https://github.com/candiddev/vault-plugin-secrets-wireguard][candiddev/vault-plugin-secrets-wireguard: Wireguard secrets engine for Vault]]
- [[https://github.com/freifunkMUC/wg-access-server][freifunkMUC/wg-access-server: An all-in-one WireGuard VPN solution with a web ui for connecting devices]]
- [[https://github.com/IAmStoxe/wirehole][IAmStoxe/wirehole: WireHole is a combination of WireGuard, Pi-hole, and Unbound in a docker-compose project with the intent of enabling users to quickly and easily create a personally managed full or split-tunnel WireGuard VPN with ad blocking capabilities thanks to Pi-hole, and DNS caching, additional privacy options, and upstream providers via Unbound.]]
- [[https://github.com/juanfont/headscale][juanfont/headscale: An open source, self-hosted implementation of the Tailscale control server]]
- [[https://github.com/k4yt3x/wg-meshconf][k4yt3x/wg-meshconf: WireGuard full mesh configuration generator.]]
- [[https://github.com/MindFlavor/prometheus_wireguard_exporter][MindFlavor/prometheus_wireguard_exporter: A Prometheus exporter for WireGuard, written in Rust.]]
- [[https://github.com/netbirdio/netbird][netbirdio/netbird: Connect your devices into a single secure private WireGuard®-based mesh network.]]
- [[https://github.com/ngoduykhanh/wireguard-ui][ngoduykhanh/wireguard-ui: Wireguard web interface]]
- [[https://github.com/octeep/wireproxy][octeep/wireproxy: Wireguard client that exposes itself as a socks5 proxy]]
- [[https://github.com/rosenpass/rosenpass][rosenpass/rosenpass: Rosenpass is a formally verified, post-quantum secure VPN that uses WireGuard to transport the actual data.]]
- [[https://github.com/sandialabs/wiretap][sandialabs/wiretap: Wiretap is a transparent, VPN-like proxy server that tunnels traffic via WireGuard and requires no special privileges to run.]]
- [[https://github.com/seashell/drago][seashell/drago: Securely connect anything with WireGuard® and manage all your networks from a single place.]]
- [[https://github.com/subspacecloud/subspace][subspacecloud/subspace: A simple WireGuard VPN server GUI]]
- [[https://github.com/tailscale/tailscale][tailscale/tailscale: The easiest, most secure way to use WireGuard and 2FA.]]
- [[https://github.com/tonarino/innernet][tonarino/innernet: A private network system that uses WireGuard under the hood.]]
- [[https://github.com/webmeshproj/webmesh][webmeshproj/webmesh: A simple, distributed, zero-configuration WireGuard mesh provider]]
- [[https://github.com/WeeJeWel/wg-easy][WeeJeWel/wg-easy: The easiest way to run WireGuard VPN + Web-based Admin UI.]]

* ChatGPT

** What ports should be open?

To establish a WireGuard VPN connection, you need to have the following ports open:

    UDP port 51820: This is the default port used by WireGuard for communication between the VPN client and server.

    If you are using a firewall, you may also need to open ports for other services that your VPN clients will access through the VPN. For example, if your clients need to access a web server through the VPN, you will need to open port 80 (HTTP) or 443 (HTTPS) for that service.

It's worth noting that while UDP port 51820 is the default port used by WireGuard, it can be configured to use a different port if necessary. If you have changed the default port in your WireGuard configuration, you will need to open that port instead.

It's also a good practice to limit access to the WireGuard port to only authorized clients, by using firewall rules to restrict access to the WireGuard port only from specific IP addresses or networks. This will help to improve the security of your VPN and prevent unauthorized access.
