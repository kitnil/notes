
* Deploy

- [[https://github.com/kowainik/summoner][kowainik/summoner: ðŸ”® ðŸ”§ Tool for scaffolding batteries-included production-level Haskell projects]]

* JSON

- [[https://artyom.me/aeson][Aeson: the tutorial]]
- [[https://github.com/clovyr/aeson-yaml][clovyr/aeson-yaml: Encode any Aeson (JSON) value as YAML (in pure Haskell)]]

* Cheat sheet

- [[https://github.com/typeclasses/haskell-phrasebook][typeclasses/haskell-phrasebook: The Haskell Phrasebook: a quick intro to Haskell via small annotated example programs]]
- https://www.youtube.com/watch?v=GPwtT31zKRY&feature=youtu.be
for "for loops over lists" use foldl'
for any other fold use foldr

https://stackoverflow.com/questions/4978578/how-to-split-a-string-in-haskell

Split string
#+BEGIN_SRC haskell
  import qualified Data.Text as T
  print $ T.splitOn (T.pack " ") (T.pack "this is a test")
#+END_SRC

Split string by REGEX
: splitRegex :: Regex -> String -> [String]
http://hackage.haskell.org/packages/archive/regex-compat/0.92/doc/html/Text-Regex.html

* Helpers

print type after evaluation
:set +t

* Links

- https://github.com/bitemyapp/learnhaskell/blob/master/guide-ru.md
  - https://www.seas.upenn.edu/~cis194/spring13/lectures.html
- https://github.com/alexwl/haskell-code-explorer
- [https://github.com/data61/fp-course][data61/fp-course: Functional Programming Course]
- [[https://github.com/reanimate/reanimate][reanimate/reanimate: Haskell library for building declarative animations based on SVG graphics]]
