
* Deploy

- [[https://github.com/kowainik/summoner][kowainik/summoner: üîÆ üîß Tool for scaffolding batteries-included production-level Haskell projects]]

* JSON

- [[https://artyom.me/aeson][Aeson: the tutorial]]
- [[https://github.com/clovyr/aeson-yaml][clovyr/aeson-yaml: Encode any Aeson (JSON) value as YAML (in pure Haskell)]]
- [[https://github.com/typeable/schematic][typeable / schematic]]
- [[https://github.com/danchoi/jsontsv][danchoi/jsontsv: Convert JSON to TSV / CSV / DSV]]

* Documentation

- [[https://github.com/ToJans/learninghaskell][ToJans / learninghaskell]]
- [[https://github.com/llvm-hs/llvm-hs-examples][llvm-hs / llvm-hs-examples]]
- [[https://github.com/joelchelliah/simple-repl-in-haskell][joelchelliah / simple-repl-in-haskell]]
- [[https://github.com/google/haskell-trainings][google/haskell-trainings: Haskell 101 and 102: slides and codelabs]]
- [[https://github.com/ChrisPenner/comonads-by-example][ChrisPenner/comonads-by-example: Comonads By Example Conference talk]]
- [[https://github.com/syocy/a-tour-of-go-in-haskell][syocy / a-tour-of-go-in-haskell]]
- [[https://github.com/myuon/ghc-compiler-notes][myuon/ghc-compiler-notes: A collection of Notes on GHC]]
- [[https://github.com/nomeata/haskell-for-readers][nomeata / haskell-for-readers]]
- [[https://github.com/lamdu/hypertypes][lamdu / hypertypes]]
- [[https://github.com/i-am-tom/haskell-exercises][i-am-tom / haskell-exercises]]
- [[https://github.com/adjoint-io/bulletproofs][adjoint-io/bulletproofs: Bulletproofs are short non-interactive zero-knowledge proofs that require no trusted setup]]
- [[https://github.com/jwiegley/ghc-dynamic-example][jwiegley / ghc-dynamic-example]]
- [[https://github.com/stepchowfun/effects][stepchowfun / effects]]
- [[https://github.com/fbsamples/ghc-hotswap][fbsamples / ghc-hotswap]]
- [[https://github.com/denisshevchenko/ohaskell.guide][denisshevchenko / ohaskell.guide]]
- [[https://github.com/mightybyte/monad-challenges][mightybyte / monad-challenges]]
- [[https://github.com/rgleichman/glance][rgleichman/glance: A visual Haskell]]
- [[https://github.com/pushcx/hpffp-resources][pushcx / hpffp-resources]]
- [[https://github.com/fptudelft/FP101x-Content-2015][fptudelft / FP101x-Content-2015]]
- [[https://github.com/jagajaga/FP-Course-ITMO][jagajaga / FP-Course-ITMO]]
- [[https://github.com/yesodweb/yesod-cookbook][yesodweb / yesod-cookbook]]
- [[https://github.com/jorendorff/talks][jorendorff / talks]]
- [[https://github.com/Gabriel439/slides][Gabriel439 / slides]]
- [[https://github.com/caiorss/Functional-Programming][caiorss / Functional-Programming]]
- [[https://github.com/hzlmn/haskell-must-watch][hzlmn / haskell-must-watch]]
- [[https://github.com/commercialhaskell/haskelldocumentation][commercialhaskell / haskelldocumentation]]
- [[https://ruhaskell.org/][–†—É—Å—Å–∫–æ—è–∑—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ Haskell-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤]]
- [[https://github.com/opqdonut/haskell-exercises][opqdonut / haskell-exercises Haskell exercises with automatic tests]]
- [[https://github.com/palf/haskell-sdl2-examples][palf / haskell-sdl2-examples]]
- [[https://github.com/sdiehl/wiwinwlh][sdiehl / wiwinwlh What I Wish I Knew When Learning Haskell]]
- [[https://github.com/sdiehl/kaleidoscope][sdiehl / kaleidoscope Haskell LLVM JIT Compiler Tutorial]]
- [[https://github.com/JakeWheat/intro_to_parsing][JakeWheat / intro_to_parsing Parsec]]
- [[https://github.com/quchen/articles][quchen / articles]]
- [[https://github.com/simonmar/parconc-examples][simonmar / parconc-examples]]
- [[https://github.com/w7cook/AoPL][w7cook / AoPL A book on programming languages, using Haskell]]
- [[https://github.com/system-f/fp-course][system-f / fp-course Functional Programming Course]]
- [[https://github.com/kazu-yamamoto/unit-test-example][kazu-yamamoto / unit-test-example]]
- [[https://github.com/huangz1990/real-world-haskell-cn][huangz1990 / real-world-haskell-cn]]
- [[https://github.com/anton-k/ru-haskell-book][anton-k / ru-haskell-book —É—á–µ–±–Ω–∏–∫ –ø–æ Haskell]]
- [[https://github.com/dstcruz/Write-Yourself-A-Scheme-In-48-Hours][dstcruz / Write-Yourself-A-Scheme-In-48-Hours]]
- [[https://github.com/bos/stanford-cs240h][bos / stanford-cs240h Course materials for Stanford CS240h, "Functional Systems in Haskell"]]
- [[https://github.com/tonymorris/fp-course][tonymorris / fp-course Functional Programming Course]]

* Misc

- [[https://github.com/yi-editor/yi][yi-editor/yi: The Haskell-Scriptable Editor]]
- [[https://github.com/jtdaugherty/vty][jtdaugherty/vty: A high-level ncurses alternative written in Haskell]]
- [[https://github.com/sebnow/haskell-network-address][sebnow / haskell-network-address]]
- [[https://github.com/taffybar/taffybar][taffybar/taffybar: A gtk based status bar for tiling window managers such as XMonad]]
- [[https://github.com/phadej/github][phadej/github: The github API for Haskell]]
- [[https://github.com/nick8325/quickspec][nick8325/quickspec: Equational laws for free]]
- [[https://github.com/GaloisInc/HaLVM][GaloisInc / HaLVM The Haskell Lightweight Virtual Machine (HaLVM): GHC running on Xen]]
- [[https://github.com/pcapriotti/optparse-applicative][pcapriotti/optparse-applicative: Applicative option parser]]
- [[https://github.com/davidbrewer/xmonad-ubuntu-conf][davidbrewer/xmonad-ubuntu-conf: My xmonad config for Ubuntu 18.04, 16.04, 14.04, and 12.04, including package list, config files, and instructions.]]
- [[https://github.com/jwiegley/git-all][jwiegley/git-all: Utility for finding all Git repositories that need attention]]
- [[https://github.com/nh2/network-house][nh2 / network-house]]
- [[https://github.com/jvranish/MiniKanrenT][jvranish / MiniKanrenT An implementation of miniKanren in Haskell]]
- [[https://github.com/sebastiaanvisser/clay][sebastiaanvisser / clay A CSS preprocessor as embedded Haskell.]]
- [[https://github.com/spell-music/csound-expression][spell-music / csound-expression]]
- [[https://github.com/nh2/call-haskell-from-anything][nh2/call-haskell-from-anything: Call Haskell functions from any programming language via serialization and dynamic libraries]]
- [[https://github.com/Yuras/pdf-toolbox][Yuras / pdf-toolbox A collection of tools for processing PDF files in Haskell]]
- [[https://github.com/haskell-suite/haskell-src-exts][haskell-suite / haskell-src-exts]]
- [[https://github.com/awgn/cgrep][awgn/cgrep: Cgrep: a context-aware grep for source codes]]
- [[https://github.com/hausdorff/pyli][hausdorff / pyli]]
- [[https://github.com/hslua/hslua][hslua/hslua: Lua interpreter interface for Haskell]]
- [[https://github.com/gelisam/hawk][gelisam / hawk]]
- [[https://github.com/gibiansky/IHaskell][gibiansky / IHaskell A Haskell kernel for IPython.]]
- [[https://github.com/gtk2hs/gtk2hs][gtk2hs/gtk2hs: GUI library for Haskell based on GTK+]]
- [[https://github.com/ndmitchell/tagsoup][ndmitchell/tagsoup: Haskell library for parsing and extracting information from (possibly malformed) HTML/XML documents]]
- [[https://github.com/BurntSushi/erd][BurntSushi/erd: Translates a plain text description of a relational database schema to a graphical entity-relationship diagram.]]
- [[https://github.com/tweag/HaskellR][tweag / HaskellR The full power of R in Haskell.]]
- [[https://github.com/tkonolige/dbignore][tkonolige / dbignore .gitignore for Dropbox]]
- [[https://github.com/mattgreen/hython][mattgreen/hython: Haskell-powered Python 3 interpreter]]
- [[https://github.com/sdiehl/repline][sdiehl/repline: Haskeline wrapper for GHCi-like REPL interfaces]]
- [[https://github.com/frp-arduino/frp-arduino][frp-arduino/frp-arduino: Arduino programming without the hassle of C.]]
- [[https://github.com/Gabriel439/Haskell-Turtle-Library][Gabriel439/Haskell-Turtle-Library: Shell programming, Haskell style]]
- [[https://github.com/agda/agda][agda / agda]]
- [[https://github.com/MaiaVictor/Caramel][MaiaVictor / Caramel]]
- [[https://github.com/walck/learn-physics][walck / learn-physics]]
- [[https://github.com/GaloisInc/haskell-tor][GaloisInc / haskell-tor]]
- [[https://github.com/Gabriel439/bench][Gabriel439/bench: Command-line benchmark tool]]
- [[https://github.com/GaloisInc/elf-edit][GaloisInc / elf-edit]]
- [[https://github.com/erebe/wstunnel][erebe/wstunnel: Tunneling over websocket protocol - Static binary available]]
- [[https://github.com/serokell/universum][serokell / universum :milky_way: Prelude written in @Serokell]]
- [[https://github.com/matterhorn-chat/matterhorn][matterhorn-chat/matterhorn: A feature-rich Unix terminal client for the Mattermost chat system]]
- [[https://github.com/skedgeme/wrecker][skedgeme/wrecker: An HTTP Benchmarking Library]]
- [[https://github.com/ThoughtWorksInc/DeepDarkFantasy][ThoughtWorksInc/DeepDarkFantasy: A Programming Language for Deep Learning]]
- [[https://github.com/jaspervdj/patat][jaspervdj/patat: Terminal-based presentations using Pandoc]]
- [[https://github.com/penrose/penrose][penrose/penrose: Create beautiful diagrams just by typing mathematical notation in plain text.]]
- [[https://github.com/DimaSamoz/mezzo][DimaSamoz / mezzo]]
- [[https://github.com/ChrisPenner/rasa][ChrisPenner/rasa: Extremely modular text editor built in Haskell]]
- [[https://github.com/jyp/styx][jyp/styx: A nix-based Haskell project manager]]
- [[https://github.com/erebe/greenclip][erebe / greenclip Simple clipboard manager to be integrated with rofi - Static binary available]]
- [[https://www.luna-lang.org/][Luna Looking for Luna, the WYSIWYG language for data processing? Development has moved :point_right:]]
- [[https://github.com/alpacaaa/tex][alpacaaa/tex: Minimalistic file explorer, written in Haskell.]]
- [[https://github.com/aviaviavi/toodles][aviaviavi/toodles: Project management directly from the TODOs in your codebase]]
- [[https://github.com/2mol/pboy][2mol/pboy: a small .pdf management tool with a command-line UI]]
- [[https://github.com/jonschoning/espial][jonschoning/espial: Espial is an open-source, web-based bookmarking server.]]
- [[https://github.com/pasqu4le/clifm][pasqu4le/clifm: Command Line Interface File Manager]]
- [[https://github.com/slovnicki/pLam][slovnicki/pLam: An interpreter for learning and exploring pure Œª-calculus]]
- [[https://github.com/phuhl/linux_notification_center][phuhl/linux_notification_center: A notification daemon/center for linux]]
- [[https://github.com/aisamanra/rust-haskell-ffi][aisamanra / rust-haskell-ffi]]
- [[https://github.com/sdiehl/write-you-a-haskell][sdiehl / write-you-a-haskell]]
- [[https://github.com/fimad/scalpel][fimad / scalpel A high level web scraping library for Haskell.]]
- [[https://github.com/neovimhaskell/nvim-hs][neovimhaskell/nvim-hs: Neovim API for Haskell plugins as well as the plugin provider]]
- [[https://github.com/christian-marie/git-vogue][christian-marie/git-vogue: Make your Haskell git repositories fashionable.]]

* Test

- [[https://github.com/hspec/hspec][hspec / hspec A Testing Framework for Haskell]]
- [[https://github.com/aviaviavi/curl-runnings][aviaviavi/curl-runnings: A declarative test framework for quickly and easily writing integration tests against JSON API's.]]
- [[https://github.com/feuerbach/tasty][feuerbach/tasty: Modern and extensible testing framework for Haskell]]

* Games

- [[https://github.com/ivanperez-keera/haskanoid][ivanperez-keera / haskanoid A breakout game in Haskell using SDL and FRP, with Wiimote and Kinect support.]]
- [[https://github.com/def-/gifstream][def- / gifstream]]
- [[https://github.com/keera-studios/haskell-game-programming][keera-studios / haskell-game-programming]]
- [[https://github.com/drummyfish/haskell_game][drummyfish / haskell_game Wolfenstein 3D, ray-casting FPS game I make to learn Haskell. No libraries used, rendering is done in terminal.]]
- [[https://github.com/rainbyte/frag][rainbyte / frag]]
- [[https://github.com/SimulaVR/Simula][SimulaVR/Simula: Linux VR Desktop]]
- [[https://github.com/LuxMiranda/herms][LuxMiranda/herms: A command-line manager for delicious kitchen recipes]]
- [[https://github.com/dbousamra/hnes][dbousamra / hnes]]
- [[https://github.com/seagreen/hermetic][seagreen/hermetic: Strategy game in Haskell (PRs: )]]
- [[https://github.com/ocharles/zero-to-quake-3][ocharles / zero-to-quake-3]]
- [[https://github.com/lambdacube3d/lambdacube-quake3][lambdacube3d / lambdacube-quake3]]
- [[https://github.com/samtay/tetris][samtay / tetris]]
- [[https://github.com/smallhadroncollider/ascii-runner][smallhadroncollider/ascii-runner: An infinite runner in your terminal]]
- [[https://github.com/A1kmm/proofsweeper][A1kmm/proofsweeper: Play Minesweeper by formally proving your moves in Idris]]
- [[https://github.com/jtdaugherty/tart][jtdaugherty/tart: Tart - draw ASCII art in the terminal with your mouse!]]

* Cheat sheet

- [[https://github.com/typeclasses/haskell-phrasebook][typeclasses/haskell-phrasebook: The Haskell Phrasebook: a quick intro to Haskell via small annotated example programs]]
- https://www.youtube.com/watch?v=GPwtT31zKRY&feature=youtu.be
for "for loops over lists" use foldl'
for any other fold use foldr

https://stackoverflow.com/questions/4978578/how-to-split-a-string-in-haskell

Split string
#+BEGIN_SRC haskell
  import qualified Data.Text as T
  print $ T.splitOn (T.pack " ") (T.pack "this is a test")
#+END_SRC

Split string by REGEX
: splitRegex :: Regex -> String -> [String]
http://hackage.haskell.org/packages/archive/regex-compat/0.92/doc/html/Text-Regex.html

* Tools

- [[https://github.com/leksah/leksah][leksah/leksah: Haskell IDE]]
- [[https://github.com/RefactoringTools/HaRe][RefactoringTools / HaRe The Haskell Refactoring Tool]]
- [[https://github.com/haskell/ThreadScope][haskell/ThreadScope: A graphical tool for profiling parallel Haskell programs]]
- [[https://github.com/lamdu/lamdu][lamdu/lamdu: lamdu - towards the next generation IDE]]
- [[https://github.com/jaspervdj/stylish-haskell][jaspervdj / stylish-haskell Haskell code prettifier]]
- [[https://github.com/ndmitchell/hlint][ndmitchell / hlint]]
- [[https://github.com/def-/ghc-vis][def-/ghc-vis: Visualize live Haskell data structures in GHCi]]
- [[https://github.com/ndmitchell/ghcid][ndmitchell/ghcid: Very low feature GHCi based IDE]]
- [[https://github.com/danstiner/hfmt][danstiner / hfmt]]
- [[https://github.com/haskell/haskell-ide-engine][haskell / haskell-ide-engine]]
- [[https://github.com/haskell-tools/haskell-tools][haskell-tools/haskell-tools: Developer tools for Haskell]]
- [[https://github.com/lspitzner/brittany][lspitzner / brittany haskell source code formatter]]
- [[https://github.com/alanz/haskell-lsp][alanz/haskell-lsp: Haskell library for the Microsoft Language Server Protocol]]
- [[https://github.com/cdepillabout/pretty-simple][cdepillabout / pretty-simple]]
- [[https://github.com/quchen/prettyprinter][quchen / prettyprinter]]
- [[https://github.com/ennocramer/floskell][ennocramer / floskell]]
- [[https://github.com/tweag/ormolu][tweag / ormolu]]
- [[https://github.com/kowainik/stan][kowainik / stan]]
- [[https://github.com/thumphries/hgrep][thumphries / hgrep]]
- [[https://github.com/ndmitchell/weeder][ndmitchell / weeder]]
- [[https://github.com/chrisdone/hindent][chrisdone / hindent]]

* Helpers

[[https://github.com/litxio/ptghci][litxio/ptghci: High-powered REPL for Haskell, inspired by IPython]]

print type after evaluation
:set +t

* Links

- https://github.com/bitemyapp/learnhaskell/blob/master/guide-ru.md
  - https://www.seas.upenn.edu/~cis194/spring13/lectures.html
- [[https://github.com/alexwl/haskell-code-explorer][alexwl/haskell-code-explorer: Web application for exploring and understanding Haskell codebases]]
- [[https://github.com/data61/fp-course][data61/fp-course: Functional Programming Course]]
- [[https://github.com/reanimate/reanimate][reanimate/reanimate: Haskell library for building declarative animations based on SVG graphics]]
- [[https://github.com/facebookincubator/retrie][facebookincubator/retrie: Retrie is a powerful, easy-to-use codemodding tool for Haskell.]]
- [[https://github.com/smallhadroncollider/brok][smallhadroncollider/brok: Find broken links in text documents]]
- [[https://github.com/obsidiansystems/obelisk][obsidiansystems/obelisk: Functional reactive web and mobile applications, with batteries included.]]
- [[https://github.com/owickstrom/gi-gtk-declarative][owickstrom/gi-gtk-declarative: Declarative GTK+ programming in Haskell]]
