
* Deploy

- [[https://github.com/kowainik/summoner][kowainik/summoner: ðŸ”® ðŸ”§ Tool for scaffolding batteries-included production-level Haskell projects]]

* JSON

- [[https://artyom.me/aeson][Aeson: the tutorial]]
- [[https://github.com/clovyr/aeson-yaml][clovyr/aeson-yaml: Encode any Aeson (JSON) value as YAML (in pure Haskell)]]

* Documentation

- [[https://github.com/google/haskell-trainings][google/haskell-trainings: Haskell 101 and 102: slides and codelabs]]
- [[https://github.com/ChrisPenner/comonads-by-example][ChrisPenner/comonads-by-example: Comonads By Example Conference talk]]
- [[https://github.com/syocy/a-tour-of-go-in-haskell][syocy / a-tour-of-go-in-haskell]]
- [[https://github.com/myuon/ghc-compiler-notes][myuon/ghc-compiler-notes: A collection of Notes on GHC]]
- [[https://github.com/nomeata/haskell-for-readers][nomeata / haskell-for-readers]]
- [[https://github.com/lamdu/hypertypes][lamdu / hypertypes]]
- [[https://github.com/i-am-tom/haskell-exercises][i-am-tom / haskell-exercises]]
- [[https://github.com/adjoint-io/bulletproofs][adjoint-io/bulletproofs: Bulletproofs are short non-interactive zero-knowledge proofs that require no trusted setup]]
- [[https://github.com/jwiegley/ghc-dynamic-example][jwiegley / ghc-dynamic-example]]
- [[https://github.com/stepchowfun/effects][stepchowfun / effects]]
- [[https://github.com/fbsamples/ghc-hotswap][fbsamples / ghc-hotswap]]

* Misc

- [[https://github.com/alpacaaa/tex][alpacaaa/tex: Minimalistic file explorer, written in Haskell.]]
- [[https://github.com/aviaviavi/toodles][aviaviavi/toodles: Project management directly from the TODOs in your codebase]]
- [[https://github.com/2mol/pboy][2mol/pboy: a small .pdf management tool with a command-line UI]]
- [[https://github.com/jonschoning/espial][jonschoning/espial: Espial is an open-source, web-based bookmarking server.]]
- [[https://github.com/pasqu4le/clifm][pasqu4le/clifm: Command Line Interface File Manager]]
- [[https://github.com/slovnicki/pLam][slovnicki/pLam: An interpreter for learning and exploring pure Î»-calculus]]

* Test

- [[https://github.com/aviaviavi/curl-runnings][aviaviavi/curl-runnings: A declarative test framework for quickly and easily writing integration tests against JSON API's.]]

* Games

- [[https://github.com/dbousamra/hnes][dbousamra / hnes]]
- [[https://github.com/seagreen/hermetic][seagreen/hermetic: Strategy game in Haskell (PRs: )]]
- [[https://github.com/ocharles/zero-to-quake-3][ocharles / zero-to-quake-3]]
- [[https://github.com/samtay/tetris][samtay / tetris]]
- [[https://github.com/smallhadroncollider/ascii-runner][smallhadroncollider/ascii-runner: An infinite runner in your terminal]]
- [[https://github.com/A1kmm/proofsweeper][A1kmm/proofsweeper: Play Minesweeper by formally proving your moves in Idris]]
- [[https://github.com/jtdaugherty/tart][jtdaugherty/tart: Tart - draw ASCII art in the terminal with your mouse!]]

* Cheat sheet

- [[https://github.com/typeclasses/haskell-phrasebook][typeclasses/haskell-phrasebook: The Haskell Phrasebook: a quick intro to Haskell via small annotated example programs]]
- https://www.youtube.com/watch?v=GPwtT31zKRY&feature=youtu.be
for "for loops over lists" use foldl'
for any other fold use foldr

https://stackoverflow.com/questions/4978578/how-to-split-a-string-in-haskell

Split string
#+BEGIN_SRC haskell
  import qualified Data.Text as T
  print $ T.splitOn (T.pack " ") (T.pack "this is a test")
#+END_SRC

Split string by REGEX
: splitRegex :: Regex -> String -> [String]
http://hackage.haskell.org/packages/archive/regex-compat/0.92/doc/html/Text-Regex.html

* Tools

- [[https://github.com/tweag/ormolu][tweag / ormolu]]
- [[https://github.com/kowainik/stan][kowainik / stan]]
- [[https://github.com/thumphries/hgrep][thumphries / hgrep]]

* Helpers

[[https://github.com/litxio/ptghci][litxio/ptghci: High-powered REPL for Haskell, inspired by IPython]]

print type after evaluation
:set +t

* Links

- https://github.com/bitemyapp/learnhaskell/blob/master/guide-ru.md
  - https://www.seas.upenn.edu/~cis194/spring13/lectures.html
- [[https://github.com/alexwl/haskell-code-explorer][alexwl/haskell-code-explorer: Web application for exploring and understanding Haskell codebases]]
- [[https://github.com/data61/fp-course][data61/fp-course: Functional Programming Course]]
- [[https://github.com/reanimate/reanimate][reanimate/reanimate: Haskell library for building declarative animations based on SVG graphics]]
- [[https://github.com/facebookincubator/retrie][facebookincubator/retrie: Retrie is a powerful, easy-to-use codemodding tool for Haskell.]]
- [[https://github.com/smallhadroncollider/brok][smallhadroncollider/brok: Find broken links in text documents]]
- [[https://github.com/obsidiansystems/obelisk][obsidiansystems/obelisk: Functional reactive web and mobile applications, with batteries included.]]
- [[https://github.com/owickstrom/gi-gtk-declarative][owickstrom/gi-gtk-declarative: Declarative GTK+ programming in Haskell]]
