- [[https://github.com/rizo/ocaml-by-example][rizo/ocaml-by-example: Code examples for OCaml.]]
- [[https://github.com/janestreet/sexp_diff][janestreet/sexp_diff: Code for computing the diff of two sexps]]
- [[https://github.com/janestreet/ppx_sexp_conv][janestreet/ppx_sexp_conv: Generation of S-expression conversion functions from type definitions]]
- [[https://github.com/ocurrent/obuilder][ocurrent/obuilder: Experimental "docker build" alternative using btrfs/zfs snapshots]]
- [[https://github.com/ocaml/ocaml-lsp][ocaml/ocaml-lsp: OCaml Language Server Protocol implementation]]
- [[https://github.com/ocaml-dune/pp][ocaml-dune/pp: Pretty printing library]]
- [[https://github.com/comby-tools/comby][comby-tools/comby: A tool for structural code search and replace that supports ~every language.]]
- [[https://github.com/fkie-cad/cwe_checker][fkie-cad/cwe_checker: cwe_checker finds vulnerable patterns in binary executables]]
- [[https://github.com/jaredly/gravitron][jaredly/gravitron: a little game]]
- [[https://github.com/uber/NEAL][uber/NEAL: üîéüêû A language-agnostic linting platform]]
- [[https://github.com/airbus-seclab/bincat][airbus-seclab/bincat: Binary code static analyser, with IDA integration. Performs value and taint analysis, type reconstruction, use-after-free and double-free detection]]
- [[https://github.com/mirage/irmin][mirage/irmin: Irmin is a distributed database that follows the same design principles as Git]]
- [[https://github.com/charlesetc/feather][charlesetc/feather: A shell library for OCaml]]
- [[https://mirage.io/][MirageOS is a library operating system that constructs unikernels]]
- [[https://github.com/Ekdohibs/camlboot][Ekdohibs/camlboot: Experiment on how to bootstrap the OCaml compiler]]

* 

#+begin_example
  oleg@guixsd ~/src/ocaml$ opam init
  No configuration file found, using built-in defaults.
  Checking for available remotes: rsync and local, git, mercurial.
    - you won't be able to use darcs repositories unless you install the darcs command on your system.
  
  [WARNING] Recommended dependencies -- most packages rely on these:
    - cc
  
  <><> Fetching repository information ><><><><><><><><><><><><><><><><><><><><><>
  [default] Initialised
  
  <><> Required setup - please read <><><><><><><><><><><><><><><><><><><><><><><>
  
    In normal operation, opam only alters files within ~/.opam.
  
    However, to best integrate with your system, some environment variables
    should be set. If you allow it to, this initialisation step will update
    your bash configuration by adding the following line to ~/.bash_profile:
  
      test -r /home/oleg/.opam/opam-init/init.sh && . /home/oleg/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true
  
    Otherwise, every time you want to access your opam installation, you will
    need to run:
  
      eval $(opam env)
  
    You can always re-run this setup with 'opam init' later.
  
  Do you want opam to modify ~/.bash_profile? [N/y/f]
  (default is 'no', use 'f' to choose a different file)
  
  <><> Creating initial switch 'default' (invariant ["ocaml" {>= "4.05.0"}] - initially with ocaml-system)
  
  <><> Installing new switch packages <><><><><><><><><><><><><><><><><><><><><><>
  Switch invariant: ["ocaml" {>= "4.05.0"}]
  [NOTE] External dependency handling not supported for OS family '/etc/issue'.
         You can disable this check using 'opam option --global depext=false'
  
  <><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
  ‚àó installed base-bigarray.base
  ‚àó installed base-threads.base
  ‚àó installed base-unix.base
  ‚àó installed ocaml-system.4.11.1
  ‚àó installed ocaml-config.1
  ‚àó installed ocaml.4.11.1
  Done.
  # Run eval $(opam env --switch=default) to update the current shell environment

  eval $(opam env --switch=default)
#+end_example
