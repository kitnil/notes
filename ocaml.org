:PROPERTIES:
:ID:       9a19c331-e203-4ed2-921c-4cb004ca0a55
:END:
- [[https://github.com/rizo/ocaml-by-example][rizo/ocaml-by-example: Code examples for OCaml.]]
- [[https://github.com/janestreet/sexp_diff][janestreet/sexp_diff: Code for computing the diff of two sexps]]
- [[https://github.com/janestreet/ppx_sexp_conv][janestreet/ppx_sexp_conv: Generation of S-expression conversion functions from type definitions]]
- [[https://github.com/ocurrent/obuilder][ocurrent/obuilder: Experimental "docker build" alternative using btrfs/zfs snapshots]]
- [[https://github.com/ocaml/ocaml-lsp][ocaml/ocaml-lsp: OCaml Language Server Protocol implementation]]
- [[https://github.com/ocaml-dune/pp][ocaml-dune/pp: Pretty printing library]]
- [[https://github.com/comby-tools/comby][comby-tools/comby: A tool for structural code search and replace that supports ~every language.]]
- [[https://github.com/fkie-cad/cwe_checker][fkie-cad/cwe_checker: cwe_checker finds vulnerable patterns in binary executables]]
- [[https://github.com/jaredly/gravitron][jaredly/gravitron: a little game]]
- [[https://github.com/uber/NEAL][uber/NEAL: üîéüêû A language-agnostic linting platform]]
- [[https://github.com/airbus-seclab/bincat][airbus-seclab/bincat: Binary code static analyser, with IDA integration. Performs value and taint analysis, type reconstruction, use-after-free and double-free detection]]
- [[https://github.com/mirage/irmin][mirage/irmin: Irmin is a distributed database that follows the same design principles as Git]]
- [[https://github.com/charlesetc/feather][charlesetc/feather: A shell library for OCaml]]
- [[https://mirage.io/][MirageOS is a library operating system that constructs unikernels]]
- [[https://github.com/Ekdohibs/camlboot][Ekdohibs/camlboot: Experiment on how to bootstrap the OCaml compiler]]
- [[https://github.com/returntocorp/sexp-fmt][returntocorp/sexp-fmt: Basic S-expression formatter]]
- [[https://reasonml.github.io/en/][Reason ¬∑ Reason lets you write simple, fast and quality type safe code while leveraging both the JavaScript & OCaml ecosystems.]]
- [[https://github.com/let-def/hotcaml][let-def/hotcaml: Hotcaml: an interpreter with watching and reloading]]
- [[https://github.com/linoscope/CAMLBOY][linoscope/CAMLBOY: A Game Boy emulator that runs in your browser written in OCaml üê´ üéÆ]]
- [[https://github.com/ocaml/ocaml.org][ocaml/ocaml.org: Upcoming version of the official OCaml website.]]
- [[https://github.com/AbstractMachinesLab/caramel][AbstractMachinesLab/caramel: a functional language for building type-safe, scalable, and maintainable applications]]
- [[https://github.com/namanmansukhani/ocaml-coreutils][namanmansukhani/ocaml-coreutils: OCaml rewrite of GNU coreutils]]
- [[https://github.com/Tim-ats-d/Macron][Tim-ats-d/Macron: A powerful keybind library and daemon for Linux.]]

* Learning
- [[https://github.com/cs3110/textbook][cs3110/textbook: The CS 3110 Textbook, "OCaml Programming: Correct + Efficient + Beautiful"]]
- [[https://cs3110.github.io/textbook/cover.html][OCaml Programming: Correct + Efficient + Beautiful ‚Äî OCaml Programming: Correct + Efficient + Beautiful]]
- [[https://github.com/kayceesrk/ocaml5-tutorial][kayceesrk/ocaml5-tutorial: A hands-on tutorial on the new parallelism features in OCaml 5]]
- [[https://caml.inria.fr/pub/distrib/ocaml-4.09/ocaml-4.09-refman.html][OCaml reference]]
* Tools
- [[https://github.com/art-w/sherlocode][art-w/sherlocode: Realtime grep for OCaml sources available on opam]]
- [[https://github.com/Nymphium/ocaml-nix-template][Nymphium/ocaml-nix-template: Template for reproducable and lightweight OCaml dev environment using Nix]]
- [[https://github.com/odis-labs/onix][odis-labs/onix: Build OCaml projects with Nix.]]
- [[https://github.com/Nymphium/ocaml-nix-template][Nymphium/ocaml-nix-template: Template for reproducable and lightweight OCaml dev environment using Nix]]
- [[https://github.com/vapourismo/opam-nix-integration][vapourismo/opam-nix-integration]]
- [[https://github.com/favonia/ocaml-objdump][favonia/ocaml-objdump: Printing OCaml Runtime Representations]]
- [[https://github.com/tweag/opam-nix][tweag/opam-nix: Turn opam-based OCaml projects into Nix derivations]]
* 

#+begin_example
  oleg@guixsd ~/src/ocaml$ opam init
  No configuration file found, using built-in defaults.
  Checking for available remotes: rsync and local, git, mercurial.
    - you won't be able to use darcs repositories unless you install the darcs command on your system.
  
  [WARNING] Recommended dependencies -- most packages rely on these:
    - cc
  
  <><> Fetching repository information ><><><><><><><><><><><><><><><><><><><><><>
  [default] Initialised
  
  <><> Required setup - please read <><><><><><><><><><><><><><><><><><><><><><><>
  
    In normal operation, opam only alters files within ~/.opam.
  
    However, to best integrate with your system, some environment variables
    should be set. If you allow it to, this initialisation step will update
    your bash configuration by adding the following line to ~/.bash_profile:
  
      test -r /home/oleg/.opam/opam-init/init.sh && . /home/oleg/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true
  
    Otherwise, every time you want to access your opam installation, you will
    need to run:
  
      eval $(opam env)
  
    You can always re-run this setup with 'opam init' later.
  
  Do you want opam to modify ~/.bash_profile? [N/y/f]
  (default is 'no', use 'f' to choose a different file)
  
  <><> Creating initial switch 'default' (invariant ["ocaml" {>= "4.05.0"}] - initially with ocaml-system)
  
  <><> Installing new switch packages <><><><><><><><><><><><><><><><><><><><><><>
  Switch invariant: ["ocaml" {>= "4.05.0"}]
  [NOTE] External dependency handling not supported for OS family '/etc/issue'.
         You can disable this check using 'opam option --global depext=false'
  
  <><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
  ‚àó installed base-bigarray.base
  ‚àó installed base-threads.base
  ‚àó installed base-unix.base
  ‚àó installed ocaml-system.4.11.1
  ‚àó installed ocaml-config.1
  ‚àó installed ocaml.4.11.1
  Done.
  # Run eval $(opam env --switch=default) to update the current shell environment

  eval $(opam env --switch=default)
#+end_example

* Languages
- [[https://github.com/davisuga/lisgo][davisuga/lisgo: A simple lisp that compiles to go]]
