: kubectl create deployment nginx --image=nginx
: kubectl expose deployment nginx --port=80

#+begin_src yaml
  apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: access-nginx
  spec:
    podSelector:
      matchLabels:
        app: nginx
    ingress:
    - from:
      - podSelector:
          matchLabels:
            access: "true"
#+end_src

* Cheat sheet

- [[https://www.youtube.com/watch?v=Kmm8Hl57WDU][(83) Understanding and Troubleshooting the eBPF Datapath in Cilium - Nathan Sweet, DigitalOcean - YouTube]]
  - [[https://static.sched.com/hosted_files/kccncna19/20/eBPF%20and%20the%20Cilium%20Datapath.pdf][eBPF and the Cilium Datapath.pdf]]

- [[https://docs.cilium.io/en/stable/operations/troubleshooting/][Troubleshooting — Cilium 1.14.4 documentation]]

- list all endpoints on a node, show if if has ingress and egress policy attached, and give endpoint id
  : cilium endpoint list

- tcpdump like.  It allows to monitor even specific sockets within one endpoint or just specific endpoints themselfs.
  : cilium monitor

- dump all bpf network device programs that are attached
  : bpftool net

- Quick overview of all BPF programs currently loaded on the host
  : kubectl exec -n kube-system ds/cilium -- bpftool prog

- cilium monitor
  : kubectl -n kube-system exec ds/cilium -- cilium monitor

- monitoring Datapath State
  : kubectl -n kube-system exec ds/cilium -- cilium monitor --type drop

- show status
  : kubectl -n kube-system exec ds/cilium -- cilium status --verbose

- flows for world identity
  : kubectl -n kube-system exec ds/cilium -- hubble observe -f --identity 2

- show version
  : kubectl -n kube-system exec ds/cilium -- cilium version

** Hubble
#+begin_example
  # Flows for world identity
  $ kubectl exec -n kube-system ds/cilium -- hubble observe --identity 2 -f
  Defaulted container "cilium-agent" out of: cilium-agent, mount-cgroup (init), apply-sysctl-overwrites (init), mount-bpf-fs (init), clean-cilium-state (init)
  Jul  7 13:07:46.726: 192.168.49.1:59608 -> default/details-v1-5498c86cf5-cnt9q:9080 http-request FORWARDED (HTTP/1.1 GET http://10.97.60.117/details/1)
  Jul  7 13:07:46.727: 192.168.49.1:59608 <- default/details-v1-5498c86cf5-cnt9q:9080 http-response FORWARDED (HTTP/1.1 200 1ms (GET http://10.97.60.117/details/1))

  # Flows for Ingress identity (e.g. envoy proxy)
  $ kubectl exec -n kube-system ds/cilium -- hubble observe --identity 8 -f
  Defaulted container "cilium-agent" out of: cilium-agent, mount-cgroup (init), apply-sysctl-overwrites (init), mount-bpf-fs (init), clean-cilium-state (init)
  Jul  7 13:07:46.726: 10.0.0.95:42509 -> default/details-v1-5498c86cf5-cnt9q:9080 to-endpoint FORWARDED (TCP Flags: SYN)
  Jul  7 13:07:46.726: 10.0.0.95:42509 <- default/details-v1-5498c86cf5-cnt9q:9080 to-stack FORWARDED (TCP Flags: SYN, ACK)
  Jul  7 13:07:46.726: 10.0.0.95:42509 -> default/details-v1-5498c86cf5-cnt9q:9080 to-endpoint FORWARDED (TCP Flags: ACK)
  Jul  7 13:07:46.726: 10.0.0.95:42509 -> default/details-v1-5498c86cf5-cnt9q:9080 to-endpoint FORWARDED (TCP Flags: ACK, PSH)
  Jul  7 13:07:46.727: 10.0.0.95:42509 <- default/details-v1-5498c86cf5-cnt9q:9080 to-stack FORWARDED (TCP Flags: ACK, PSH)

  # Flows for backend pod, the identity can be retrieved via cilium identity list command
  $ kubectl exec -n kube-system ds/cilium -- hubble observe --identity 48847 -f
  Defaulted container "cilium-agent" out of: cilium-agent, mount-cgroup (init), apply-sysctl-overwrites (init), mount-bpf-fs (init), clean-cilium-state (init)
  Jul  7 13:07:46.726: 10.0.0.95:42509 -> default/details-v1-5498c86cf5-cnt9q:9080 to-endpoint FORWARDED (TCP Flags: SYN)
  Jul  7 13:07:46.726: 10.0.0.95:42509 <- default/details-v1-5498c86cf5-cnt9q:9080 to-stack FORWARDED (TCP Flags: SYN, ACK)
  Jul  7 13:07:46.726: 10.0.0.95:42509 -> default/details-v1-5498c86cf5-cnt9q:9080 to-endpoint FORWARDED (TCP Flags: ACK)
  Jul  7 13:07:46.726: 10.0.0.95:42509 -> default/details-v1-5498c86cf5-cnt9q:9080 to-endpoint FORWARDED (TCP Flags: ACK, PSH)
  Jul  7 13:07:46.726: 192.168.49.1:59608 -> default/details-v1-5498c86cf5-cnt9q:9080 http-request FORWARDED (HTTP/1.1 GET http://10.97.60.117/details/1)
  Jul  7 13:07:46.727: 10.0.0.95:42509 <- default/details-v1-5498c86cf5-cnt9q:9080 to-stack FORWARDED (TCP Flags: ACK, PSH)
  Jul  7 13:07:46.727: 192.168.49.1:59608 <- default/details-v1-5498c86cf5-cnt9q:9080 http-response FORWARDED (HTTP/1.1 200 1ms (GET http://10.97.60.117/details/1))
  Jul  7 13:08:16.757: 10.0.0.95:42509 <- default/details-v1-5498c86cf5-cnt9q:9080 to-stack FORWARDED (TCP Flags: ACK, FIN)
  Jul  7 13:08:16.757: 10.0.0.95:42509 -> default/details-v1-5498c86cf5-cnt9q:9080 to-endpoint FORWARDED (TCP Flags: ACK, FIN)

  # Sample output of cilium monitor
  $ ksysex ds/cilium -- cilium monitor
  level=info msg="Initializing dissection cache..." subsys=monitor
  -> endpoint 212 flow 0x3000e251 , identity ingress->61131 state new ifindex lxcfc90a8580fd6 orig-ip 10.0.0.192: 10.0.0.192:34219 -> 10.0.0.164:9080 tcp SYN
  -> stack flow 0x2481d648 , identity 61131->ingress state reply ifindex 0 orig-ip 0.0.0.0: 10.0.0.164:9080 -> 10.0.0.192:34219 tcp SYN, ACK
  -> endpoint 212 flow 0x3000e251 , identity ingress->61131 state established ifindex lxcfc90a8580fd6 orig-ip 10.0.0.192: 10.0.0.192:34219 -> 10.0.0.164:9080 tcp ACK
  -> endpoint 212 flow 0x3000e251 , identity ingress->61131 state established ifindex lxcfc90a8580fd6 orig-ip 10.0.0.192: 10.0.0.192:34219 -> 10.0.0.164:9080 tcp ACK
  -> Request http from 0 ([reserved:world]) to 212 ([k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=default k8s:io.cilium.k8s.policy.cluster=minikube k8s:io.cilium.k8s.policy.serviceaccount=bookinfo-details k8s:io.kubernetes.pod.namespace=default k8s:version=v1 k8s:app=details]), identity 2->61131, verdict Forwarded GET http://10.99.74.157/details/1 => 0
  -> stack flow 0x2481d648 , identity 61131->ingress state reply ifindex 0 orig-ip 0.0.0.0: 10.0.0.164:9080 -> 10.0.0.192:34219 tcp ACK
  -> Response http to 0 ([reserved:world]) from 212 ([k8s:io.kubernetes.pod.namespace=default k8s:version=v1 k8s:app=details k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name=default k8s:io.cilium.k8s.policy.cluster=minikube k8s:io.cilium.k8s.policy.serviceaccount=bookinfo-details]), identity 61131->2, verdict Forwarded GET http://10.99.74.157/details/1 => 200
#+end_example

* Learning
- [[https://nicovibert.com/2022/07/21/bgp-with-cilium/][BGP with Cilium]]
- [[https://isovalent.com/blog/post/cilium-release-112/#ingress][Cilium 1.12 - Ingress, Multi-Cluster, Service Mesh, External Workloads, ...]]
- [[https://cilium.io/blog/2019/03/12/clustermesh/][Deep Dive into Cilium Multi-cluster]]
- [[https://github.com/cilium/cilium/issues/18932][docs: Adding a note for required configuration to create a host-only network with latest VirtualBox · Issue #18932 · cilium/cilium]]
- [[https://scribe.bus-hit.me/codex/establish-cilium-clustermesh-whelm-chart-11b08b0c995c][Establish Cilium ClusterMesh wHelm Chart]]
- [[https://fosdem.org/2023/schedule/event/network_cilium_and_grafana/][FOSDEM 2023 - Golden Signals with Cilium and Grafana]]
- [[https://fosdem.org/2023/schedule/event/network_service_mesh/][FOSDEM 2023 - Service MESH without the MESS]]
- [[https://www.youtube.com/watch?v=z8Kifl3M3LU&list=PLQpKr4_0p0jEIGtCeV4VcGd_-Jf49e1JY][From Zero to Cluster Mesh: Installing and Configuring Cilium CNI on Kubernetes - YouTube]]
- [[https://github.com/isovalent/eCHO][isovalent/eCHO: eBPF & Cilium Office Hours]]
- [[https://www.linkedin.com/pulse/kubernetes-multi-cluster-networking-cilium-cluster-mesh-chandra][Kubernetes Multi-Cluster Networking - Cilium Cluster Mesh]]
- [[https://piotrminkowski.com/2021/10/25/kubernetes-multicluster-with-kind-and-cilium/][Kubernetes Multicluster with Kind and Cilium - Piotr's TechBlog]]
- [[https://addozhang.medium.com/kubernetes-network-learning-with-cilium-and-ebpf-aafbf3163840][Kubernetes network learning with Cilium and eBPF | by Addo Zhang | Sep, 2023 | Medium]]
- [[https://isovalent.com/data/multi-cluster-ebook.pdf][multi-cluster-ebook.pdf]]
- [[https://docs.cilium.io/en/stable/gettingstarted/clustermesh/clustermesh/][Setting up Cluster Mesh — Cilium 1.12.4 documentation]]

* Debug

1. LB IP is assigned to the service (kubectl get svc).
2. Cilium has properly provisioned services (cilium bpf lb list).
3. What happens with a request (cilium monitor).

* Tools
- [[https://github.com/cilium/cilium-cli][cilium/cilium-cli: CLI to install, manage & troubleshoot Kubernetes clusters running Cilium]]
- [[https://jenkins.cilium.io/][Cilium Jenkins Instance]]
- [[https://github.com/cosmonic/netreap][cosmonic/netreap: A Cilium controller implementation for Nomad]]
- [[https://editor.cilium.io/?id=sGIKib2OwOtkkypE][Network Policy Editor for Kubernetes]]
- [[https://github.com/seifrajhi/awesome-cilium][seifrajhi/awesome-cilium: A curated list of awesome projects related to cilium]]

** Hubble relay

[[https://docs.cilium.io/en/v1.9/gettingstarted/hubble/][Networking and security observability with Hubble — Cilium 1.9.18 documentation]]

: kubectl port-forward -n kube-system svc/hubble-relay --address 0.0.0.0 --address :: 4245:80
