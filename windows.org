:PROPERTIES:
:ID:       7f1b6f8f-43bc-4fd3-8124-72af003678e5
:END:
#+title: Windows

- [[https://github.com/randyrants/sharpkeys][randyrants/sharpkeys: SharpKeys is a utility that manages a Registry key that allows Windows to remap one key to any other key.]]
- aio-runtimes
- [[https://github.com/shaswata56/WindowsXP][shaswata56/WindowsXP: This is the leaked source code of Windows XP Service Pack 1]]
- [[https://www.workspacer.org/][workspacer - tiling window manager for Windows 10]]
- [[https://github.com/mentebinaria/retoolkit][mentebinaria/retoolkit: Reverse Engineer's Toolkit]]
- [[https://github.com/Tylous/ZipExec][Tylous/ZipExec: A unique technique to execute binaries from a password protected zip]]
- [[https://github.com/paranoidninja/EtwTi-Syscall-Hook][paranoidninja/EtwTi-Syscall-Hook: A simple program to hook the current process to identify the manual syscall executions on windows]]
- [[https://github.com/portapps/portapps][portapps/portapps: üõ∞ Collection of portable apps for Windows]]
- [[https://github.com/rgl/elasticsearch-setup][rgl/elasticsearch-setup: elasticsearch oss installer for windows.]]
- [[https://github.com/sdushantha/recycle-bin-themes][sdushantha/recycle-bin-themes: Silly icons for the Windows Recycle Bin]]
- [[https://github.com/BaseMax/FirstAssemblyWindows][BaseMax/FirstAssemblyWindows: Create a tiny Windows graphical application using pure Assembly. (MASM)]]

* AD
- [[https://shellz.club/2021/07/26/obtaining-ntds-dit.html][Dumping Active Directory Credentials | shellz.club]]
- [[https://github.com/OPENCYBER-FR/RustHound][OPENCYBER-FR/RustHound: Active Directory data collector for BloodHound written in rust. ü¶Ä]]

* Android
- [[https://github.com/Paving-Base/APK-Installer][Paving-Base/APK-Installer: An Android Application Installer for Windows]]

* Audio
- [[https://old.reddit.com/r/windows/comments/ftsu8z/need_a_way_to_get_a_list_of_all_audio_output/][Get a list of all audio output devices via command line]]
  : Get-CimInstance win32_sounddevice | fl *
  : wmic sounddev list full

* Awesome
- [[https://github.com/auctors/free-lunch][auctors/free-lunch: A curated list of free Windows software, online services and resources.]]

* Bloat
- [[https://github.com/builtbybel/bloatbox][builtbybel/bloatbox: ‚òëÔ∏èüå† Remove Bloatwares from Windows 10]]
- [[https://github.com/builtbybel/privatezilla][builtbybel/privatezilla: üëÄüëÆüê¢üî•Performs a privacy & security check of Windows 10]]
- [[https://github.com/ChrisTitusTech/win10script][ChrisTitusTech/win10script: This is the Ultimate Windows 10 Script from a creation from multiple debloat scripts and gists from github.]]
- [[https://github.com/safing/portmaster][safing/portmaster: Love Freedom - Block Mass Surveillance]]

* Cheat sheet

- If you're encountering display or graphics issues, you can press
  Ctrl+Shift+Win+B to force Windows to take action. This shortcut alerts the
  system to a potential graphics issue, which results in Windows restarting
  your video driver.

- [[https://github.com/prometheus-community/windows_exporter/issues/459][Only the service and CPU collectors are working ¬∑ Issue #459 ¬∑ prometheus-community/windows_exporter]]
  : lodctr /R
  : winmgmt.exe /RESYNCPERF

- Enable administrator account
  : net user administrator /active:yes

* Deprecated
- [[https://github.com/hectorm/docker-qemu-win2000][hectorm/docker-qemu-win2000: A Docker image for Windows 2000 Advanced Server with SP4.]]

* Distributions
- [[https://habr.com/ru/company/tomhunter/blog/501560/][¬´–Ø —Ç–∏—à–µ —à–µ–ø—Ç—É–Ω–∞ –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –ø–æ–ª–µ¬ª –∏–ª–∏ —á—Ç–æ —Ç–∞–∫–æ–µ Ninjutsu-OS / –•–∞–±—Ä]]
- [[https://github.com/pbatard/Fido][pbatard/Fido: A PowerShell script to download Windows ISOs or the UEFI Shell]]
- [[https://github.com/AveYo/MediaCreationTool.bat][AveYo/MediaCreationTool.bat: Universal MCT wrapper script for all Windows 10/11 versions from 1507 to 21H2!]]
- [[https://github.com/ValdikSS/windows2usb][ValdikSS/windows2usb: Windows 7/8/8.1/10/11 ISO to Flash Drive burning utility for Linux (MBR/GPT, BIOS/UEFI, FAT32/NTFS)]]
- [[https://github.com/Atlas-OS/Atlas][Atlas-OS/Atlas: An open and transparent modification of the Windows 10 operating system, designed to optimize performance, and latency.]]
- [[https://github.com/jakejarvis/y2k][jakejarvis/y2k: üíæ Windows Me¬Æ, but fully isolated and disposable ‚Äî¬†the way it was meant to be.]]
- [[https://github.com/pbatard/Fido][pbatard/Fido: A PowerShell script to download Windows ISOs or the UEFI Shell]]
** Windows 11
- [[https://github.com/rcmaehl/WhyNotWin11][rcmaehl/WhyNotWin11: Detection Script to help identify why your PC isn't Windows 11 Release Ready]]
- [[https://github.com/HerMajestyDrMona/Windows11DragAndDropToTaskbarFix][HerMajestyDrMona/Windows11DragAndDropToTaskbarFix: "Windows 11 Drag & Drop to the Taskbar (Fix)" fixes the missing "Drag & Drop to the Taskbar" support in Windows 11. It works with the new Windows 11 taskbar and does not require nasty changes like UndockingDisabled or restoration of the classic taskbar.]]
*** Utilities
- [[https://github.com/ntdevlabs/tiny11builder][ntdevlabs/tiny11builder: Scripts to build a trimmed-down Windows 11 image.]]

* DLL
- [[https://github.com/hotnops/RemoteDebugView][hotnops/RemoteDebugView: A DLL that serves OutputDebugString content over a TCP connection]]
- [[https://github.com/ORCx41/KnownDllUnhook][GitHub - ORCx41/KnownDllUnhook: Replace the .txt section of the current loaded modules from \KnownDlls\ to bypass edrs]]
- [[https://github.com/NUL0x4C/AtomLdr][NUL0x4C/AtomLdr: A DLL loader with advanced evasive features]]

* Drivers
- [[https://github.com/NattyNarwhal/vmwmouse][NattyNarwhal/vmwmouse: VMware mouse driver for Windows 3.1]]

* eBPF
- [[https://learn.microsoft.com/en-us/azure/aks/azure-cni-powered-by-cilium][Configure Azure CNI Powered by Cilium in Azure Kubernetes Service (AKS) (Preview) - Azure Kubernetes Service | Microsoft Learn]]
- [[https://cloudblogs.microsoft.com/opensource/2022/02/22/getting-linux-based-ebpf-programs-to-run-with-ebpf-for-windows/][Getting Linux based eBPF programs to run with eBPF for Windows - Microsoft Open Source Blog]]
- [[https://github.com/microsoft/ebpf-for-windows][microsoft/ebpf-for-windows: eBPF implementation that runs on top of Windows]]

* Explorer
- [[https://github.com/valinet/ExplorerPatcher][valinet/ExplorerPatcher: This project aims to enhance the working environment on Windows]]

* Proxy

Could you recommend free and open source server proxy for Windows?

Yes, here are some free and open-source proxy servers that you can use on Windows:

Squid: Squid is a widely used, full-featured proxy server that can run on Windows.

TinyProxy: TinyProxy is a lightweight proxy server that can run on Windows. It's designed for ease of use and low resource consumption.

Privoxy: Privoxy is a non-caching, privacy-enhancing web proxy that can run on Windows.

HAProxy: HAProxy is a high-performance proxy server that can run on Windows. It's designed for load balancing and proxying HTTP traffic.

All of these proxy servers have active communities, documentation, and are customizable to meet your specific needs. You can choose the one that best fits your requirements.

Could you list more?
Sure, here are some other free and open-source proxy servers for Windows:

Squid
Privoxy
Tiny Proxy
Varnish Cache
Nginx
HAProxy
Apache Traffic Server
Caddy Server
ReverseHTTP
stunnel
You may choose the one that fits your needs the best and try it out.

And more?

Certainly, here are some additional open-source proxy servers for Windows:

*** Squid: a widely-used proxy server for Unix and Linux-based systems, but also available for Windows.
*** Tinyproxy: a lightweight and easy-to-configure proxy server.
*** Privoxy: a non-caching web proxy with advanced filtering capabilities for enhancing privacy, modifying web page data and HTTP headers, controlling access, and removing ads and other obnoxious Internet junk.
*** 3Proxy: a tiny free proxy server, suitable for small network.
**** [[https://www.youtube.com/watch?v=uIwCecQ-Leo][–ü–∞–º—è—Ç–∫–∞ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ]]
1. –ù–∞—Å—Ç—Ä–æ–∫–∞ —Å–µ—Ç–∏
2. –°–∫–∞—á–∏–≤–∞–µ–º 3proxy —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –¥–ª—è Windows (–†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª –∞—Ä—Ö–∏–≤)
3. –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–∏–≥ 3proxy.txt –≤ –ø–∞–ø–∫–µ C:\Users\–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\Desktop\3proxy-0.8.11\bin
4. –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –≤ –¥–∏—Ä—Ä–µ–∫—Ç–æ—Ä–∏—é cd C:\Users\–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\Desktop\3proxy-0.8.11\bin
5. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 3proxy –∫–∞–∫ —Å–ª—É–∂–±—É 3proxy.exe --install 3proxy.txt
6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª—É–∂–±—É 3proxy —á–µ—Ä–µ–∑ –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∑–∞–¥–∞—á
7. –û–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç (–¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤) –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏ - –°–∏—Å—Ç–µ–º–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å - –ë—Ä–∞–Ω–¥–º–∞—É—ç—Ä –≤–∏–Ω–¥–æ–≤—Å - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã - –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è –≤—Ö–æ–¥—è—â–∏—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π - –°–æ–∑–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–æ - –î–ª—è –ø–æ—Ä—Ç–∞ - –£–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Ä—Ç - –î–∞—ë–º –∏–º—è –ø—Ä–∞–≤–∏–ª—É.
8. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–∫—Å–∏
**** My configuration
- Test connection with curl
: curl -v --data-urlencode --proxy socks5://vagrant:$(pass show windows.local/3proxy/admin)@10.0.1.6:1080 ifconfig.co
*** Delegate: an advanced open source proxy server that can function as a HTTP, mail, SOCKS or proxying VPN server.
*** Keep in mind that these servers may require some technical expertise to install, configure and maintain.

* Nameserver

How to show current nameservers in Windows powershell?

In Windows PowerShell, you can use the nslookup command to show the current nameservers. To do this, open the PowerShell prompt and type the following command:

nslookup -querytype=ns

This will display the nameservers for the current computer. If you want to query the nameservers for a specific domain, you can use the following command:

php

nslookup -querytype=ns <domain-name>

Replace <domain-name> with the name of the domain you want to query.

* File systems
- [[https://github.com/billziss-gh/winfsp][billziss-gh/winfsp: Windows File System Proxy - FUSE for Windows]]
- [[https://habr.com/ru/company/ruvds/blog/578292/][–ö—É–Ω–≥-—Ñ—É —Å—Ç–∏–ª—è Linux: —Ñ–∞–π–ª–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –∏ –≤ Windows / –•–∞–±—Ä]]
- [[https://github.com/ufrisk/MemProcFS][ufrisk/MemProcFS: The Memory Process File System]]

** NFS

#+begin_example
win+r
shell:startup

mount -o anon \\192.168.0.144\srv S:
mount -o anon \\192.168.0.144\srv\games N:
#+end_example

* ISO

#+begin_src xml
  <disk type='file' device='cdrom'>
    <driver name='qemu' type='raw'/>
    <source file='/srv/lib/admin/Windows 10 (v21h1) x64 PRO by KulHunter v2 (esd) [En].iso'/>
    <target dev='sdb' bus='sata'/>
    <readonly/>
    <boot order='1'/>
    <address type='drive' controller='0' bus='0' target='0' unit='1'/>
  </disk>
#+end_src
* Kubernetes
- [[https://github.com/ptylenda/kubernetes-for-windows][ptylenda/kubernetes-for-windows: Ansible playbooks and Packer templates for creating hybrid Windows/Linux Kubernetes 1.10+ cluster with experimental Flannel pod network (host-gw backend)]]

* Learning
- [[https://github.com/mytechnotalent/Hacking-Windows][mytechnotalent/Hacking-Windows: A FREE Windows C development course where we will learn the Win32API and reverse engineer each step utilizing IDA Free in both an x86 and x64 environment.]]
- [[https://github.com/Kyome22/RunCat_for_windows][Kyome22/RunCat_for_windows: A cute running cat animation on your windows taskbar.]]

** What is awk alternative in windows powershell?
In Windows PowerShell, you can use the Select-String cmdlet as an alternative to the awk utility. The Select-String cmdlet allows you to search for text patterns in one or more files and display the matching lines. Here's an example of how you could use Select-String to perform a similar operation to awk:

vbnet
Copy code
Get-Content example.txt | Select-String 'pattern'
In this example, Get-Content is used to read the contents of the file example.txt, and Select-String is used to search for lines that contain the text 'pattern'. The matching lines are then displayed on the console.

You can also use other cmdlets in Windows PowerShell, such as Get-ChildItem and ForEach-Object, to perform more complex text processing operations. For example, you could use the following code to extract specific columns of data from a text file:

javascript
Copy code
Get-Content example.txt | ForEach-Object { $_ -split '\s+' } | Select-Object -Index 2, 4
This code reads the contents of example.txt, splits each line into fields using the -split operator, and then selects the 2nd and 4th fields using Select-Object.

Keep in mind that while Select-String and other Windows PowerShell cmdlets can provide similar functionality to awk, the syntax and operations may be different, so it's a good idea to familiarize yourself with the Windows PowerShell environment before diving into complex operations.

* Linux
- [[https://github.com/Fmstrat/winapps][Fmstrat/winapps: Run Windows apps such as Microsoft Office in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration.]]
- [[https://www.opennet.ru/opennews/art.shtml?num=56640][Cassowary - –æ–±–≤—è–∑–∫–∞ –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å Windows-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –≤ Linux]]

* Menu
- [[https://github.com/novoid/integratethis][novoid/integratethis: Integrate programs or scripts into common tools like Windows Explorer context menu]]
- [[https://github.com/lextm/windowsterminal-shell][lextm/windowsterminal-shell: Install/uninstall scripts for Windows Terminal context menu items]]

* MicroSoft Windows 10 utilities

  [[https://www.youtube.com/watch?v=BXXgbGwEnYw][Chris Titus Tech - The Best Windows 10 Tools I use on every installation]]
  - O&O ShutUp10 :: privacy
  - ninite.com :: packaged utilities

* Networking
- [[https://github.com/henrypp/simplewall][henrypp/simplewall: Simple tool to configure Windows Filtering Platform (WFP) which can configure network activity on your computer.]]
- [[https://github.com/immense/Remotely][immense/Remotely: A remote control and remote scripting solution, built with .NET 5, Blazor, SignalR Core, and WebRTC.]]
- [[https://github.com/miroslavpejic85/p2p][miroslavpejic85/p2p: üñ•Ô∏è Remote Desktop P2P based. Portable, No configuration or installation needed, communicate your endpoint to the peer, and vice versa, press connect and enjoy. üñ•Ô∏è]]
- [[https://github.com/ValdikSS/GoodbyeDPI][ValdikSS/GoodbyeDPI: GoodbyeDPI‚ÄîPassive Deep Packet Inspection blocker and Active DPI circumvention utility (for Windows)]]
** VPN
*** WireGuard
- [[https://habr.com/ru/post/585962/][WireGuard –∫–ª–∏–µ–Ω—Ç –¥–ª—è Windows –Ω–∞ –æ—Å–Ω–æ–≤–µ BoringTun / –•–∞–±—Ä]]
*** L2TP
  - [[https://help.keenetic.com/hc/ru/articles/360000581969-%D0%9F%D0%BE%D0%B4%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BA-VPN-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D1%83-L2TP-IPSec-%D0%B8%D0%B7-Windows][–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPN-—Å–µ—Ä–≤–µ—Ä—É L2TP/IPSec –∏–∑ Windows ‚Äì Keenetic]]

** iSCI
- [[https://server.vpnwp.com/proxmox/use-your-nas-as-a-steam-library-truenas-iscsi-basics/][Use your NAS as a Steam Library - TrueNAS + iSCSI Basics]]
  - [[https://www.youtube.com/watch?v=9JL-RVUHj6o&t=272s][(68) Use your NAS as a Steam Library - TrueNAS + iSCSI Basics - YouTube]]

** SMB
- [[https://docs.microsoft.com/en-us/troubleshoot/windows-server/networking/guest-access-in-smb2-is-disabled-by-default][Guest access in SMB2 is disabled - Windows Server | Microsoft Docs]]
  1. Open the Local Group Policy Editor (gpedit.msc).
  2. In the console tree, select Computer Configuration > Administrative Templates > Network > Lanman Workstation.
  3. For the setting, right-click Enable insecure guest logons and select Edit.
  4. Select Enabled and select OK.

* Logging
- [[https://github.com/Yamato-Security/EnableWindowsLogSettings][Yamato-Security/EnableWindowsLogSettings: Documentation and scripts to properly enable Windows event logs.]]

* Packer
- [[https://github.com/luciusbono/Packer-Windows10][luciusbono/Packer-Windows10: A Packer build for Windows 10]]
- [[https://github.com/andif888/packer-windows-vsphere-iso][andif888/packer-windows-vsphere-iso: This repo builds automatically Windows VM templates (Windows 11, Windows 10, Server 2019, Server 2022) for VMware vSphere environment using Hashicorp's Packer using freely available Windows Eval ISOs.]]
- [[https://github.com/Baune8D/packer-windows-desktop][Baune8D/packer-windows-desktop: Build a basic Windows desktop image for use with Vagrant.]]

* Productivity

- [[https://github.com/AutoDarkMode/Windows-Auto-Night-Mode][AutoDarkMode/Windows-Auto-Night-Mode: Automatically switches between the dark and light theme of Windows 10 and Windows 11]]
- [[https://github.com/google/glazier][google/glazier: A tool for automating the installation of the Microsoft Windows operating system on various device platforms.]]
- [[https://github.com/henrypp/chrlauncher][henrypp/chrlauncher: Small and very fast portable launcher and updater for Chromium.]]
- [[https://github.com/LGUG2Z/yatta][LGUG2Z/yatta: A tiling window manager for Windows 10 based on binary space partitioning]]
- [[https://github.com/M2Team/NanaZip][M2Team/NanaZip: The 7-Zip derivative intended for the modern Windows experience.]]
- [[https://github.com/mmozeiko/wcap][mmozeiko/wcap: simple and efficient screen recording utility for Windows]]
- [[https://github.com/pit-ray/win-vind][pit-ray/win-vind: You can operate Windows with key bindings like Vim.]]
- [[https://github.com/Sanakan8472/copy-dialog-lunar-lander][Sanakan8472/copy-dialog-lunar-lander: Play lunar lander in you windows file copy dialog]]
- [[https://github.com/stnkl/EverythingToolbar][stnkl/EverythingToolbar: Everything integration for the Windows taskbar.]]
- [[https://github.com/tarkah/grout][tarkah/grout: Simple tiling window manager for Windows]]
- [[https://github.com/TheJoeFin/Text-Grab][TheJoeFin/Text-Grab: Use OCR in Windows 10 quickly and easily with Text Grab. With optional background process and popups.]]
- [[https://github.com/veler/DevToys][veler/DevToys: A Swiss Army knife for developers.]]
- [[https://github.com/workspacer/workspacer][workspacer/workspacer: a tiling window manager for Windows]]
- [[https://github.com/xmichelo/Beeftext][xmichelo/Beeftext: A text snippet tool for Windows.]]

* Registry
- [[https://github.com/zodiacon/RegExp][zodiacon/RegExp: Registry Explorer - enhanced Registry editor/viewer]]
- [[https://github.com/GossiTheDog/HiveNightmare][GossiTheDog/HiveNightmare: Exploit allowing you to read registry hives as non-admin on Windows 10 and 11]]

* Remote Desktop
- [[https://serveradmin.ru/top-besplatnyh-programm-dlya-udalyonnogo-dostupa/][–¢–æ–ø 10 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ ‚Äî Server Admin]]
- [[https://github.com/ps1337/reinschauer][A PoC to remotely control Windows machines over Websockets.]]

* Security
- [[https://github.com/antonioCoco/RemotePotato0][antonioCoco/RemotePotato0: Just another "Won't Fix" Windows Privilege Escalation from User to Domain Admin.]]
- [[https://github.com/cfalta/MicrosoftWontFixList][cfalta/MicrosoftWontFixList: A list of vulnerabilities or design flaws Microsoft does not intend to fix. Since the number is growing, I decided to make a list.]]
- [[https://github.com/bol-van/win10_antishit][bol-van/win10_antishit: windows 10 remove shit functions]]
- [[https://github.com/crazy-max/WindowsSpyBlocker][crazy-max/WindowsSpyBlocker: Block spying and tracking on Windows]]
- [[https://github.com/t3l3machus/hoaxshell][t3l3machus/hoaxshell: An unconventional Windows reverse shell, currently undetected by Microsoft Defender and various other AV solutions, solely based on http(s) traffic.]]

* SSH
- [[https://github.com/billziss-gh/sshfs-win][billziss-gh/sshfs-win: SSHFS For Windows]]

* Terminals
- [[https://conemu.github.io/][ConEmu - Handy Windows Terminal]]

* Tools
- [[https://github.com/0x7c13/Notepads][0x7c13/Notepads: A modern, lightweight text editor with a minimalist design.]]
- [[https://github.com/AbhishekSinhaCoder/Collection-of-Useful-Scripts][AbhishekSinhaCoder/Collection-of-Useful-Scripts: This is a collection of useful scripts from various sources]]
- [[https://github.com/amake/innosetup-docker][amake/innosetup-docker: Docker image to create Windows installer executables with Inno Setup]]
- [[https://github.com/cairoshell/cairoshell][cairoshell/cairoshell: Cairo is a customizable, intuitive desktop environment for Windows.]]
- [[https://github.com/ChrisTitusTech/winutil][ChrisTitusTech/winutil: Chris Titus Tech's Windows Utility - Install Programs, Tweaks, Fixes, and Updates]]
- [[https://github.com/clong/DetectionLab][clong/DetectionLab: Automate the creation of a lab environment complete with security tooling and logging best practices]]
- [[https://github.com/Code52/carnac][Code52/carnac: A utility to give some insight into how you use your keyboard]]
- [[https://github.com/countercept/chainsaw][countercept/chainsaw: Rapidly Search and Hunt through Windows Event Logs]]
- [[https://github.com/cyberark/PipeViewer][cyberark/PipeViewer: A tool that shows detailed information about named pipes in Windows]]
- [[https://github.com/d2phap/ImageGlass][d2phap/ImageGlass: üèû A lightweight, versatile image viewer]]
- [[https://github.com/diced/zipline][diced/zipline: Zipline is a ShareX/file upload server that is easy to use, packed with features and can be setup in one command!]]
- [[https://github.com/elliot40404/starman][elliot40404/starman: A simple yet intuitive cli app for managing startup applications on windows.]]
- [[https://github.com/felixse/FluentTerminal][felixse/FluentTerminal: A Terminal Emulator based on UWP and web technologies.]]
- [[https://github.com/File-New-Project/EarTrumpet][File-New-Project/EarTrumpet: EarTrumpet - Volume Control for Windows]]
- [[https://github.com/files-community/Files][files-community/Files: Building the best File Manager for Windows]]
- [[https://github.com/firefart/reboot][firefart/reboot: Reboot is a simple golang based windows service that initiates a reboot upon receiving a specific message on a TCP server]]
- [[https://github.com/gerardog/gsudo][gerardog/gsudo: Sudo for Windows]]
- [[https://github.com/gurnec/SetScreenResolution][gurnec/SetScreenResolution: a small Windows utility to change the screen resolution via the command line]]
- [[https://github.com/horsicq/PDBRipper][horsicq/PDBRipper: PDBRipper is a utility for extract an information from PDB-files.]]
- [[https://github.com/jamesstringerparsec/Easy-GPU-PV][jamesstringerparsec/Easy-GPU-PV: A Project dedicated to making GPU Partitioning on Windows easier!]]
- [[https://github.com/LGUG2Z/komokana][LGUG2Z/komokana: Automatic application-aware keyboard layer switching for Windows]]
- [[https://github.com/LGUG2Z/whkd][LGUG2Z/whkd: A simple hotkey daemon for Windows]]
- [[https://github.com/maharmstone/quibble][maharmstone/quibble: Quibble - the custom Windows bootloader]]
- [[https://github.com/medusalix/winmix][medusalix/winmix: Control the volume of individual applications from the command line]]
- [[https://github.com/namazso/OpenHashTab][namazso/OpenHashTab: üìù File hashing and checking shell extension]]
- [[https://github.com/Neo23x0/Raccine][Neo23x0/Raccine: A Simple Ransomware Vaccine]]
- [[https://github.com/odedshimon/BruteShark][odedshimon/BruteShark: Network Analysis Tool]]
- [[https://portapps.io/apps/][Portapps - Portable Applications]]
- [[https://github.com/rcmaehl/MSEdgeRedirect][rcmaehl/MSEdgeRedirect: A Tool to Redirect News, Search, Widgets, Weather and More to Your Default Browser]]
- [[https://github.com/rgl/windows-vagrant][rgl/windows-vagrant: Windows 10/11/2019/2022 Base Vagrant Box (https://app.vagrantup.com/rgl)]]
- [[https://github.com/robiot/AlphaClicker][robiot/AlphaClicker: üñ±Ô∏è Windows Autoclicker with a modern ui]]
- [[https://github.com/rocksdanister/lively][rocksdanister/lively: Free and open-source software that allows users to set animated desktop wallpapers and screensavers.]]
- [[https://www.rlatour.com/setvol/index.html][SetVol - free command line utility to set your Windows master volume level]]
- [[https://github.com/SoftEtherVPN/SoftEtherVPN_Stable][SoftEtherVPN/SoftEtherVPN_Stable: Cross-platform multi-protocol VPN software. This repository is officially managed by Daiyuu Nobori, the founder of the project. Pull requests should be sent to the master repository at https://github.com/SoftEtherVPN/SoftEtherVPN.]]
  - [[https://www.comss.ru/page.php?id=3019][SoftEther VPN - –°–∫–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ. VPN-—Å–µ—Ä–≤–∏—Å—ã]]
- [[https://github.com/veler/DevToys][veler/DevToys: A Swiss Army knife for developers.]]
- [[https://github.com/vitoplantamura/BugChecker][vitoplantamura/BugChecker: SoftICE-like kernel debugger for Windows 11]]
- [[https://github.com/winsw/winsw][winsw/winsw: A wrapper executable that can run any executable as a Windows service, in a permissive license.]]
- [[https://github.com/Wox-launcher/Wox][Wox-launcher/Wox: Launcher for Windows, an alternative to Alfred and Launchy.]]

* TRIM
- Free space on lvm-thin regardless of storage disk type spinner or ssd
  : Optimize-Volume -DriveLetter C -ReTrim -Verbose

* Vagrant
- [[https://github.com/PioneerCode/pioneer-windows-development-environment][PioneerCode/pioneer-windows-development-environment: Create a Windows development enviroment with Packer, Vagrant & Chocolatey]]

* Window manager
- [[https://github.com/LGUG2Z/komorebi][LGUG2Z/komorebi: Another tiling window manager for Windows 10 based on binary space partitioning]]

* WinRM

** Could you show me simple winrm curl example?

Sure, here is a simple WinRM curl example using the Invoke-WebRequest cmdlet in PowerShell:

php

$uri = "http://<winrm_host>:5985/wsman"
$username = "<username>"
$password = "<password>"
$auth = "Basic"
$headers = @{Authorization = "$auth " + [System.Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes("$username`:$password"))}

Invoke-WebRequest -Uri $uri -Method POST -Headers $headers -ContentType "application/soap+xml;charset=UTF-8" -Body '<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:wsmid="http://schemas.dmtf.org/wbem/wsman/identity/1/wsmanidentity.xsd" xmlns:wsm="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd"><s:Header><wsmid:Identify/></s:Header><s:Body/></s:Envelope>'

Replace <winrm_host>, <username>, and <password> with the appropriate values for your WinRM server.

This example sends an Identify request to the WinRM server, which can be used to verify that the server is running and accessible. If the server is running and accessible, the server will respond with an IdentifyResponse message.

** Same in Bash.

Certainly! Here is a simple WinRM curl example using the curl command in Bash:

bash

winrm_host="<winrm_host>"
username="<username>"
password="<password>"

auth=$(echo -n "$username:$password" | base64)
uri="http://${winrm_host}:5985/wsman"

curl -X POST \
  -H "Authorization: Basic $auth" \
  -H "Content-Type: application/soap+xml;charset=UTF-8" \
  -d '<s:Envelope xmlns:s="http://www.w3.org/2003/05/soap-envelope" xmlns:wsmid="http://schemas.dmtf.org/wbem/wsman/identity/1/wsmanidentity.xsd" xmlns:wsm="http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd"><s:Header><wsmid:Identify/></s:Header><s:Body/></s:Envelope>' \
  $uri

Replace <winrm_host>, <username>, and <password> with the appropriate values for your WinRM server.

This example sends an Identify request to the WinRM server, which can be used to verify that the server is running and accessible. If the server is running and accessible, the server will respond with an IdentifyResponse message.

** Show me how to run powershell script by uploading it via curl in bash.

Sure! Here's an example of how to upload and execute a PowerShell script on a remote Windows host via WinRM using the curl command in Bash:

bash

winrm_host="<winrm_host>"
username="<username>"
password="<password>"
script_path="<path/to/powershell/script.ps1>"

auth=$(echo -n "$username:$password" | base64)
uri="http://${winrm_host}:5985/wsman"

# Encode the PowerShell script as a Base64 string
script_content=$(cat $script_path | base64 -w 0)

# Construct the PowerShell command to execute the script
powershell_command="powershell.exe -encodedCommand $script_content"

# Construct the SOAP request to execute the PowerShell command
soap_request="<s:Envelope xmlns:s='http://www.w3.org/2003/05/soap-envelope' xmlns:wsmid='http://schemas.dmtf.org/wbem/wsman/identity/1/wsmanidentity.xsd' xmlns:wsm='http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd'><s:Header><wsmid:Identify/></s:Header><s:Body><wsm:Invoke><wsm:Action>http://schemas.microsoft.com/wbem/wsman/1/windows/shell/invoke</wsm:Action><wsm:Shell><wsm:InputStreams>stdin</wsm:InputStreams><wsm:OutputStreams>stdout stderr</wsm:OutputStreams></wsm:Shell><wsm:Command>$powershell_command</wsm:Command></wsm:Invoke></s:Body></s:Envelope>"

# Send the SOAP request via WinRM using curl
curl -X POST \
  -H "Authorization: Basic $auth" \
  -H "Content-Type: application/soap+xml;charset=UTF-8" \
  -d "$soap_request" \
  $uri

Replace <winrm_host>, <username>, <password>, and <path/to/powershell/script.ps1> with the appropriate values for your WinRM server and PowerShell script.

This example uploads the PowerShell script to the remote Windows host, encodes it as a Base64 string, and then executes it using the powershell.exe command. The output of the script (both standard output and standard error) is returned in the WinRM response.

** What is SOAP above?

SOAP stands for Simple Object Access Protocol. It is a messaging protocol used to exchange structured information between applications over a network, typically using HTTP or HTTPS as the transport protocol.

SOAP messages are XML-based and consist of an envelope that describes the message, a header that contains optional application-specific information, and a body that contains the actual message content. SOAP messages can be used to invoke remote methods or exchange structured data between applications.

In the context of WinRM, SOAP is used as the underlying protocol for communication between the WinRM client and server. When a WinRM client sends a command or request to a WinRM server, it constructs a SOAP message and sends it to the server over HTTP or HTTPS. The server then processes the request and sends a SOAP response back to the client. The SOAP messages used by WinRM are specific to the WS-Management protocol, which is a web services protocol used for managing systems and devices.

* WSA
- [[https://github.com/alesimula/wsa_pacman][alesimula/wsa_pacman: A GUI package manager and package installer for Windows Subsystem for Android (WSA)]]
- [[https://github.com/voletro/wsa-toolbox][voletro/wsa-toolbox: A Windows 11 application to easily install and use the Windows Subsystem For Android‚Ñ¢ package on your computer.]]

* WSL
- [[https://github.com/pxlrbt/move-wsl][pxlrbt/move-wsl: Easily move your WSL distros VHDX file to a new location.]]
- [[https://github.com/alesimula/wsa_pacman][alesimula/wsa_pacman: A GUI package manager and package installer for Windows Subsystem for Android (WSA)]]
- [[https://github.com/microsoft/wslg][microsoft/wslg: Enabling the Windows Subsystem for Linux to include support for Wayland and X server related scenarios]]
- [[https://github.com/fortuneteller2k/nix-config][fortuneteller2k/nix-config: NixOS configuration (also on WSL)]]
- [[https://github.com/nix-community/NixOS-WSL][nix-community/NixOS-WSL: NixOS on WSL(2) maintainer=@nzbr]]
- [[https://github.com/sdrush/nixos-wsl][sdrush/nixos-wsl]]
- [[https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/][Systemd support is now available in WSL! - Windows Command Line]]

