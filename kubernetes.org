:PROPERTIES:
:ID:       169228af-10b2-4a7e-b9fa-0619733b14ed
:END:

* Awesome
- [[https://github.com/Michaelpalacce/HomeLab][Michaelpalacce/HomeLab: My HomeLab environment]]
- [[https://github.com/k8s-at-home/awesome-home-kubernetes][k8s-at-home/awesome-home-kubernetes: Awesome projects involving running Kubernetes at home]]

* Learning
- [[https://github.com/run-x/awesome-kubernetes][run-x/awesome-kubernetes: A curated list for awesome kubernetes projects, tools and resources.]]
- [[https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/][How Kubernetes certificate authorities work]]
- [[https://habr.com/ru/company/qiwi/blog/585392/][–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å Kubernetes ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ / –•–∞–±—Ä]]
- [[https://github.com/wrmilling/k3s-gitops][wrmilling/k3s-gitops: GitOps principles to define kubernetes cluster state via code]]
- [[https://github.com/diegolnasc/kubernetes-best-practices][diegolnasc/kubernetes-best-practices: A cookbook with the best practices to working with kubernetes.]]
- [[https://github.com/container-storage-interface/spec][container-storage-interface/spec: Container Storage Interface (CSI) Specification.]]
- [[https://github.com/golang-design/under-the-hood][golang-design/under-the-hood: üìö Go: Under The Hood | https://golang.design/under-the-hood]]
- [[http://itisgood.ru/2019/11/18/raspredelennoe-hranenie-dannyh-v-kubernetes/][‚ò∏Ô∏è –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ Kubernetes ‚Äî IT is good]]
- Pin pod to specific node:
  - Affinity
  - Toleration
  - Taint
- Show documentation
  - =kubectl explain deployment=
  - =kubectl explain deployment.spec=
- Port forwarding
  - =kubectl port-forward my-deployment-xxxxxxxxxx-xxxxx 8005:80 &=
- [[https://github.com/erebe/personal-server][erebe/personal-server: Personal server configuration with k3s]]
- [[https://github.com/Vinum-Security/kubernetes-security-checklist][Vinum-Security/kubernetes-security-checklist: Kubernetes Security Checklist and Requirements - All in One (authentication, authorization, logging, secrets, configuration, network, workloads, dockerfile)]]
- [[https://habr.com/ru/company/netologyru/blog/580902/][–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–æ–≤ –¥–ª—è —É–∑–ª–æ–≤ Kubernetes: —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ / –•–∞–±—Ä]]
- [[https://serveradmin.ru/kubernetes-ingress/][–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Ingress controller –≤ Kubernetes ‚Äî Server Admin]]
- [[https://habr.com/ru/company/otus/blog/653973/][–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ç–µ–≤—ã—Ö –ø–æ–ª–∏—Ç–∏–∫ —Å –ø–æ–º–æ—â—å—é Minikube / –•–∞–±—Ä]]
- [[https://habr.com/ru/post/657641/][–ö–∞–∫ Kubernetes —Å–æ–∑–¥–∞–µ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: –ò–ª–ª—é—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ / –•–∞–±—Ä]]
- [[https://wiki.archlinux.org/title/Kubernetes][Kubernetes - ArchWiki]]
- [[https://kubernetes.io/docs/reference/glossary/?fundamental=true][Glossary | Kubernetes]]
- [[https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][Set Kubelet parameters via a config file | Kubernetes]]
- [[https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/][Creating a cluster with kubeadm | Kubernetes]]
- [[https://kubernetes.io/docs/concepts/cluster-administration/addons/][Installing Addons | Kubernetes]]
- [[https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/][Taints and Tolerations | Kubernetes]]
- [[https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/][Creating Highly Available Clusters with kubeadm | Kubernetes]]
- [[https://github.com/kubernetes/kubeadm/blob/main/docs/ha-considerations.md#options-for-software-load-balancing][kubeadm/ha-considerations.md at main ¬∑ kubernetes/kubeadm]]
- [[https://alesnosek.com/blog/2017/02/14/accessing-kubernetes-pods-from-outside-of-the-cluster/][Accessing Kubernetes Pods from Outside of the Cluster - Ales Nosek - The Software Practitioner]]
- [[https://dockerlabs.collabnix.com/kubernetes/beginners/Install-and-configure-a-multi-master-Kubernetes-cluster-with-kubeadm.html][Install and configure a multi-master Kubernetes cluster with kubeadm | dockerlabs]]
- [[https://medium.com/@sven_50828/setting-up-a-high-availability-kubernetes-cluster-with-multiple-masters-31eec45701a2][Setting up a high-availability Kubernetes cluster with multiple masters | by Sven Hakvoort | Medium]]
- [[https://github.com/defo89/kubernetes-the-hard-way-lab][defo89/kubernetes-the-hard-way-lab: Kubernetes The Hard Way in Lab (on VMware ESXi)]]
- [[https://www.youtube.com/watch?v=n4zxKk2an3U][(28) Learn Kubernetes with this Introductory Course in One Hour (All Core Components and Hands On!) - YouTube]]
- [[https://github.com/rootsongjc/kubernetes-handbook][rootsongjc/kubernetes-handbook: Kubernetes‰∏≠ÊñáÊåáÂçó/‰∫ëÂéüÁîüÂ∫îÁî®Êû∂ÊûÑÂÆûÊàòÊâãÂÜå - https://jimmysong.io/kubernetes-handbook]]
- [[https://github.com/kelseyhightower/kubernetes-the-hard-way][kelseyhightower/kubernetes-the-hard-way: Bootstrap Kubernetes the hard way on Google Cloud Platform. No scripts.]]
- [[https://habr.com/ru/company/southbridge/blog/334846/][Kubernetes –Ω–∞ –≥–æ–ª–æ–º –∂–µ–ª–µ–∑–µ –∑–∞ 10 –º–∏–Ω—É—Ç / –•–∞–±—Ä]]
- [[https://rtfm.co.ua/kubernetes-znakomstvo-chast-1-arxitektura-i-osnovnye-komponenty-obzor/][Kubernetes: –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ, —á–∞—Å—Ç—å 1 ‚Äì –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –æ–±–∑–æ—Ä]]
- [[https://serveradmin.ru/kubernetes-ustanovka/][–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–ª–∞—Å—Ç–µ—Ä–∞ Kubernetes | serveradmin.ru]]
- [[http://ceur-ws.org/Vol-2839/paper11.pdf][paper11.pdf]]
- [[https://github.com/walidshaari/Certified-Kubernetes-Security-Specialist][walidshaari/Certified-Kubernetes-Security-Specialist: Curated resources help you prepare for the CNCF/Linux Foundation CKS 2021 "Kubernetes Certified Security Specialist" Certification exam. Please provide feedback or requests by raising issues, or making a pull request. All feedback for improvements are welcome. thank you.]]
- [[https://github.com/magnologan/awesome-k8s-security][magnologan/awesome-k8s-security: A curated list for Awesome Kubernetes Security resources]]
- [[https://github.com/kodekloudhub/certified-kubernetes-administrator-course][kodekloudhub/certified-kubernetes-administrator-course: Certified Kubernetes Administrator - CKA Course]]
- [[https://github.com/eon01/kubernetes-workshop][eon01/kubernetes-workshop: A Gentle introduction to Kubernetes with more than just the basics. Give it a star if you like it.]]
- [[https://www.youtube.com/watch?v=Z9hBIoO4KOs][KubeVirt deep dive - YouTube]]
  - [[https://github.com/davidvossel/kubevirt-demo-manifests][davidvossel/kubevirt-demo-manifests]]
- [[https://www.youtube.com/watch?v=K3jNo4z5Jx8][Kubernetes Namespaces Explained in 15 mins | Kubernetes Tutorial 21]]
  : kubectl api-resources --namespaced=true
- [[https://www.alibabacloud.com/help/en/container-service-for-kubernetes/latest/use-the-host-network][Use the host network]]
  #+begin_src yaml
    apiVersion: v1
    kind: Pod
    metadata:
      name: nginx
    spec:
      hostNetwork: true
      containers:
      - name: nginx
        image: nginx
  #+end_src
- [[https://dotsandbrackets.com/kubernetes-example-ru/][–†–∞–∑–±–∏—Ä–∞–µ–º Kubernetes –ø—Ä–∏–º–µ—Ä - Dots and Brackets]]
- [[https://gabrieltanner.org/blog/ha-kubernetes-cluster-using-k3s/][Setting up a HA Kubernetes cluster using K3S]]
- [[https://habr.com/ru/post/673730/][–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã K8S –∏–ª–∏ –∫–∞–∫ —Ä–∞—Å–ø—É—Ç–∞—Ç—å –≤–µ—Ä–º–∏—à–µ–ª—å –ß–∞—Å—Ç—å 1 / –•–∞–±—Ä]]

* Tools
- [[https://github.com/stackrox/kube-linter][stackrox/kube-linter: KubeLinter is a static analysis tool that checks Kubernetes YAML files and Helm charts to ensure the applications represented in them adhere to best practices.]]
- [[https://github.com/k8s-at-home/charts][k8s-at-home/charts: Helm charts for applications you run at home]]
- [[https://github.com/k3s-io/kine][k3s-io/kine: Run Kubernetes on MySQL, Postgres, sqlite, dqlite, not etcd.]]
- [[https://github.com/furiko-io/furiko][furiko-io/furiko: Cloud-native, enterprise-level cron job platform for Kubernetes]]
- [[https://github.com/cloud-native-skunkworks/ubuntu-operator][cloud-native-skunkworks/ubuntu-operator: Control Ubuntu from Kubernetes.]]
- [[https://werf.io/][Giterministic CLI tool | werf]]
- [[https://github.com/kei6u/kubectl-explore][kei6u/kubectl-explore: A better kubectl explain with the fuzzy finder]]
- [[https://github.com/openebs/openebs][openebs/openebs: Leading Open Source Container Attached Storage, built using Cloud Native Architecture, simplifies running Stateful Applications on Kubernetes.]]
- [[https://github.com/datreeio/datree][datreeio/datree: Prevent Kubernetes misconfigurations from reaching production (again üò§ )! The CLI integration provides a policy enforcement solution to run automatic checks for rule violations. See our docs: https://hub.datree.io]]
- [[https://github.com/reactive-tech/kubegres][reactive-tech/kubegres: Kubegres is a Kubernetes operator allowing to create a cluster of PostgreSql instances and manage databases replication, failover and backup.]]
- [[https://github.com/Trois-Six/k8s-diagrams][Trois-Six/k8s-diagrams: Create diagrams from the Kubernetes API with go-diagrams.]]
- [[https://github.com/saschagrunert/kubernix][saschagrunert/kubernix: Single dependency Kubernetes clusters for local testing, experimenting and development]]
- [[https://github.com/deislabs/krustlet][deislabs/krustlet: Kubernetes Rust Kubelet]]
- [[https://github.com/darkbitio/k8s-mirror][darkbitio/k8s-mirror: Creates a local mirror of a Kubernetes cluster in a docker container to support offline reviewing]]
- [[https://github.com/k0sproject/k0s][k0sproject/k0s: k0s - Zero Friction Kubernetes]]
- [[https://github.com/kvaps/kubectl-build][kvaps/kubectl-build: Build dockerfiles directly in your Kubernetes cluster.]]
- [[https://habr.com/ru/company/flant/blog/524196/#][–û–±–∑–æ—Ä k9s ‚Äî –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è Kubernetes]]
- [[https://habr.com/ru/company/southbridge/blog/523790/][12 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –¥–µ–ª–∞—é—â–∏—Ö Kubernetes –ª–µ–≥—á–µ / –ë–ª–æ–≥ –∫–æ–º–ø–∞–Ω–∏–∏ Southbridge / –•–∞–±—Ä]]
- [[https://habr.com/ru/company/southbridge/blog/523358/][11 –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –¥–µ–ª–∞—é—â–∏—Ö Kubernetes –ª—É—á—à–µ / –ë–ª–æ–≥ –∫–æ–º–ø–∞–Ω–∏–∏ Southbridge / –•–∞–±—Ä]]
- [[https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml][YAML and Kubernetes syntax support - Visual Studio Marketplace]]
- [[https://github.com/troytop/cfk8sterm][troytop/cfk8sterm: A ttyd web terminal image on Alpine with cf, kubectl, and other tools]]
- [[https://github.com/omrikiei/ktunnel][omrikiei/ktunnel: A cli that exposes your local resources to kubernetes]]
- [[https://github.com/dty1er/kubecolor][dty1er/kubecolor: colorizes kubectl output]]
- [[https://github.com/lensapp/lens][lensapp/lens: Lens - The Kubernetes IDE]]
- [[https://github.com/devspace-cloud/devspace][devspace-cloud/devspace: DevSpace - The Fastest Developer Tool for Kubernetes ‚ö° Automate your deployment workflow with DevSpace and develop software directly inside Kubernetes.]]
- [[https://github.com/lastbackend/lastbackend][lastbackend/lastbackend: System for containerized apps management. From build to scaling.]]
- [[https://github.com/alexellis/arkade][alexellis/arkade: Your one-stop CLI for Kubernetes]]
- [[https://github.com/rancher/k3s][rancher/k3s: Lightweight Kubernetes]]
- [[https://www.suse.com/c/introduction-k3d-run-k3s-docker-src/][Introduction to k3d: Run K3s in Docker | SUSE Communities]]
- [[https://github.com/inercia/k3x][inercia/k3x: A UI for local Kubernetes clusters created with k3d]]
- [[https://k3s.io/][K3s: Lightweight Kubernetes]]
- [[https://github.com/alexellis/k3sup][alexellis/k3sup: bootstrap Kubernetes with k3s over SSH < 1 min]]
- [[https://github.com/k3d-io/k3d][k3d-io/k3d: Little helper to run CNCF's k3s in Docker]]
- [[https://github.com/c-bata/kube-prompt][c-bata/kube-prompt: An interactive kubernetes client featuring auto-complete.]]
- [[https://github.com/ContainerSolutions/kubernetes-examples][ContainerSolutions/kubernetes-examples: Minimal self-contained examples of standard Kubernetes features and patterns in YAML]]
- [[https://github.com/tdihp/dspcap][tdihp/dspcap: A humble bash script set that uses daemonset to capture tcpdump from all k8s nodes, then collect the captures.]]
- [[https://github.com/pulumi/kubespy][pulumi/kubespy: Tools for observing Kubernetes resources in real time, powered by Pulumi.]]
- [[https://github.com/sbstp/kubie][sbstp/kubie: A more powerful alternative to kubectx and kubens]]
- [[https://github.com/saschagrunert/kubernix][saschagrunert/kubernix: Single dependency Kubernetes clusters for local testing, experimenting and development]]
- [[https://github.com/kdash-rs/kdash][kdash-rs/kdash: A simple and fast dashboard for Kubernetes]]
- [[https://github.com/kris-nova/naml][kris-nova/naml: Not another markup language. Framework for replacing Kubernetes YAML with Go.]]
- [[https://github.com/armosec/kubescape][armosec/kubescape: kubescape is the first tool for testing if Kubernetes is deployed securely as defined in Kubernetes Hardening Guidance by to NSA and CISA (https://www.nsa.gov/News-Features/Feature-Stories/Article-View/Article/2716980/nsa-cisa-release-kubernetes-hardening-guidance/)]]
- [[https://github.com/pixie-io/pixie][pixie-io/pixie: Instant Kubernetes-Native Application Observability]]
- [[https://github.com/google/ko][google/ko: Build and deploy Go applications on Kubernetes]]
- [[https://kubevirt.io/][KubeVirt.io Building a virtualization API for Kubernetes]]
- [[https://kompose.io/][Kubernetes + Compose = Kompose]]
- [[https://github.com/kubenav/kubenav][kubenav/kubenav: kubenav is the navigator for your Kubernetes clusters right in your pocket.]]
- [[https://habr.com/ru/company/flant/blog/575972/][–û–±–∑–æ—Ä Kalm ‚Äî –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–∏ –≤ Kubernetes / –•–∞–±—Ä]]
- [[https://github.com/kubevious/kubevious][kubevious/kubevious: Kubevious - application centric Kubernetes UI and continuous assurance provider]]
- [[https://habr.com/ru/post/575646/][Helmwave v0.12.8 / –•–∞–±—Ä]]
  - [[https://github.com/helmwave/helmwave][helmwave/helmwave: üåä Helmwave is like docker-compose for @helm]]
- [[https://github.com/ksync/ksync][ksync/ksync: Sync files between your local system and a kubernetes cluster.]]
- [[https://github.com/teamcode-inc/kubeorbit][teamcode-inc/kubeorbit: Test your application on Kubernetes in a brand new simple way‚ö°]]
- [[https://github.com/Ladicle/kubectl-rolesum][Ladicle/kubectl-rolesum: Summarize Kubernetes RBAC roles for the specified subjects.]]
- [[https://github.com/aquasecurity/starboard][aquasecurity/starboard: Kubernetes-native security toolkit]]
- [[https://github.com/up9inc/mizu][up9inc/mizu: API traffic viewer for Kubernetes enabling you to view all API communication between microservices. Think TCPDump and Wireshark re-invented for Kubernetes]]
- [[https://github.com/cloudnativelabs/kube-router][cloudnativelabs/kube-router: Kube-router, a turnkey solution for Kubernetes networking.]]
- [[https://github.com/box/kube-iptables-tailer][box/kube-iptables-tailer: A service for better network visibility for your Kubernetes clusters.]]
- [[https://github.com/vmware-tanzu/velero][vmware-tanzu/velero: Backup and migrate Kubernetes applications and their persistent volumes]]
- [[https://github.com/fluxcd/flagger][fluxcd/flagger: Progressive delivery Kubernetes operator (Canary, A/B Testing and Blue/Green deployments)]]
- [[https://github.com/fluxcd/flux2][fluxcd/flux2: Open and extensible continuous delivery solution for Kubernetes. Powered by GitOps Toolkit.]]
- [[https://github.com/longhorn/longhorn][longhorn/longhorn: Cloud-Native distributed storage built on and for Kubernetes]]
- [[https://github.com/loft-sh/vcluster][loft-sh/vcluster: vcluster - Create fully functional virtual Kubernetes clusters - Each vcluster runs inside a namespace of the underlying k8s cluster. It's cheaper than creating separate full-blown clusters and it offers better multi-tenancy and isolation than regular namespaces.]]
- [[https://github.com/ArctarusLimited/Fractal][ArctarusLimited/Fractal: Zero-compromise Kubernetes resource generation with Nix, Jsonnet and Kustomize. Planned Helm support.]]
- [[https://github.com/yunionio/cloudpods][yunionio/cloudpods: A cloud-native open-source unified multi-cloud and hybrid-cloud platform. ÂºÄÊ∫ê„ÄÅ‰∫ëÂéüÁîüÁöÑÂ§ö‰∫ëÁÆ°ÁêÜÂèäÊ∑∑Âêà‰∫ëËûçÂêàÂπ≥Âè∞]]
- [[https://github.com/metallb/metallb][metallb/metallb: A network load-balancer implementation for Kubernetes using standard routing protocols]]
- [[https://github.com/giantswarm/kvm-operator][giantswarm/kvm-operator: Handles Kubernetes clusters running on a Kubernetes cluster with workers and masters in KVMs on bare metal]]
- [[https://github.com/istio/istio][istio/istio: Connect, secure, control, and observe services.]]
- [[https://github.com/rook/rook][rook/rook: Storage Orchestration for Kubernetes]]
- [[https://github.com/madhuakula/kubernetes-goat][madhuakula/kubernetes-goat: Kubernetes Goat is a "Vulnerable by Design" cluster environment to learn and practice Kubernetes security using an interactive hands-on playground üöÄ]]
- [[https://github.com/okteto/okteto][okteto/okteto: Develop your applications directly in your Kubernetes Cluster]]
- [[https://github.com/cdk-team/CDK][cdk-team/CDK: üì¶ Make security testing of K8s, Docker, and Containerd easier.]]
- [[https://github.com/loft-sh/vcluster][loft-sh/vcluster: vcluster - Create fully functional virtual Kubernetes clusters - Each vcluster runs inside a namespace of the underlying k8s cluster. It's cheaper than creating separate full-blown clusters and it offers better multi-tenancy and isolation than regular namespaces.]]
- [[https://github.com/infracloudio/botkube][infracloudio/botkube: An app that helps you monitor your Kubernetes cluster, debug critical deployments & gives recommendations for standard practices]]
- [[https://github.com/sealerio/sealer][sealerio/sealer: A tool to seal application's all dependencies and Kubernetes into CloudImage, distribute this application anywhere via CloudImage, and run it within any cluster in one command.]]
- [[https://github.com/tkestack/tke][tkestack/tke: Native Kubernetes container management platform supporting multi-tenant and multi-cluster]]
- [[https://github.com/stashed/stash][stashed/stash: üõÖ Backup your Kubernetes Stateful Applications]]
- [[https://github.com/octarinesec/kube-scan][octarinesec/kube-scan: kube-scan: Octarine k8s cluster risk assessment tool]]
- [[https://github.com/jenkinsci/kubernetes-operator][jenkinsci/kubernetes-operator: Kubernetes native Jenkins Operator]]
- [[https://github.com/kubeovn/kube-ovn][kubeovn/kube-ovn: A Kubernetes Network Fabric for Enterprises that is Rich in Functions and Easy in Operations (Project under CNCF)]]
- [[https://github.com/arnehilmann/k8s-auto-updater][arnehilmann/k8s-auto-updater: auto-update your cluster: sync your docker images and restart pods running on outdated images]]
- [[https://github.com/team-soteria/rback][team-soteria/rback: RBAC in Kubernetes visualizer]]
- [[https://github.com/tommy351/pullup][tommy351/pullup: Update Kubernetes resources by webhooks.]]
- [[https://github.com/Qovery/pleco][Qovery/pleco: Automatically removes Cloud managed services and Kubernetes resources based on tags with TTL]]
- [[https://github.com/rancher-sandbox/rancher-desktop][rancher-sandbox/rancher-desktop: Container Management and Kubernetes on the Desktop]]
- [[https://github.com/stackrox/stackrox][stackrox/stackrox: The StackRox Kubernetes Security Platform performs a risk analysis of the container environment, delivers visibility and runtime alerts, and provides recommendations to proactively improve security by hardening the environment.]]
- [[https://github.com/abahmed/kwatch][abahmed/kwatch: monitor & detect crashes in your Kubernetes(K8s) cluster instantly]]
- [[https://github.com/clusternet/clusternet][clusternet/clusternet: Managing your Kubernetes clusters (including public, private, edge, etc) as easily as visiting the Internet ‚éà]]
- [[https://github.com/txn2/kubefwd][txn2/kubefwd: Bulk port forwarding Kubernetes services for local development.]]
- [[https://github.com/GoogleContainerTools/kpt][GoogleContainerTools/kpt: A package-centric toolchain that enables a WYSIWYG configuration authoring, automation, and delivery experience, which simplifies managing Kubernetes platforms and KRM-driven infrastructure at scale by manipulating declarative Configuration as Data, separated from the code that transforms it.]]
- [[https://github.com/GoogleContainerTools/skaffold][GoogleContainerTools/skaffold: Easy and Repeatable Kubernetes Development]]
- [[https://github.com/gatblau/onix][gatblau/onix: A reactive configuration manager designed to support Infrastructure as a Code provisioning, and bi-directional configuration management providing a single source of truth across multi-cloud environments.]]
- [[https://github.com/external-secrets/external-secrets][external-secrets/external-secrets: External Secrets Operator reads information from a third-party service like AWS Secrets Manager and automatically injects the values as Kubernetes Secrets.]]
- [[https://github.com/aws/karpenter][aws/karpenter: Kubernetes Node Autoscaling: built for flexibility, performance, and simplicity.]]
- [[https://github.com/ahmetb/kubectl-tree][ahmetb/kubectl-tree: kubectl plugin to browse Kubernetes object hierarchies as a tree]]
- [[https://github.com/tohjustin/kube-lineage][tohjustin/kube-lineage: A CLI tool to display all dependencies or dependents of an object in a Kubernetes cluster.]]
- [[https://github.com/chenjiandongx/kubectl-images][chenjiandongx/kubectl-images: Show container images used in the cluster.]]
- [[https://github.com/cilium/hubble][cilium/hubble: Hubble - Network, Service & Security Observability for Kubernetes using eBPF]]
- [[https://github.com/vmware-tanzu/octant][vmware-tanzu/octant: Highly extensible platform for developers to better understand the complexity of Kubernetes clusters.]]
- [[https://github.com/openkruise/kruise][openkruise/kruise: Automate application management on Kubernetes (project under CNCF)]]
- [[https://github.com/traefik/mesh][traefik/mesh: Traefik Mesh - Simpler Service Mesh]]
- [[https://github.com/jeremykross/konstellate][jeremykross/konstellate: Free and Open Source GUI to Visualize Kubernetes Applications.]]
- [[https://github.com/derailed/popeye][derailed/popeye: üëÄ A Kubernetes cluster resource sanitizer]]
- [[https://github.com/derailed/k9s][derailed/k9s: üê∂ Kubernetes CLI To Manage Your Clusters In Style!]]
- [[https://github.com/kumahq/kuma][kumahq/kuma: üêª The multi-zone service mesh for containers, Kubernetes and VMs. Built with Envoy. CNCF Sandbox Project.]]
- [[https://github.com/kedacore/keda][kedacore/keda: KEDA is a Kubernetes-based Event Driven Autoscaling component. It provides event driven scale for any container running in Kubernetes]]
- [[https://github.com/spacecloud-io/space-cloud][spacecloud-io/space-cloud: Open source Firebase + Heroku to develop, scale and secure serverless apps on Kubernetes]]
- [[https://github.com/kyverno/kyverno][kyverno/kyverno: Kubernetes Native Policy Management]]
- [[https://github.com/kubernetes-sigs/kui][kubernetes-sigs/kui: A hybrid command-line/UI development experience for cloud-native development]]
- [[https://github.com/kubernetes-sigs/kube-scheduler-simulator][kubernetes-sigs/kube-scheduler-simulator: A web-based simulator for the Kubernetes scheduler]]
- [[https://github.com/kubernetes-sigs/descheduler][kubernetes-sigs/descheduler: Descheduler for Kubernetes]]
- [[https://github.com/kubernetes-sigs/kustomize][kubernetes-sigs/kustomize: Customization of kubernetes YAML configurations]]
- [[https://github.com/kubernetes-sigs/kubefed][kubernetes-sigs/kubefed: Kubernetes Cluster Federation]]
- [[https://github.com/kubernetes-sigs/cluster-api][kubernetes-sigs/cluster-api: Home for Cluster API, a subproject of sig-cluster-lifecycle]]
- [[https://github.com/kubernetes-sigs/cluster-api-provider-kubevirt][kubernetes-sigs/cluster-api-provider-kubevirt: Cluster API Provider for KubeVirt]]
- [[https://github.com/FairwindsOps/polaris][FairwindsOps/polaris: Validation of best practices in your Kubernetes clusters]]
- [[https://github.com/projectcalico/calico][projectcalico/calico: Cloud native networking and network security]]
- [[https://opensource.com/article/22/5/migrating-databases-kubernetes-using-konveyor][Migrate databases to Kubernetes using Konveyor | Opensource.com]]
  - [[https://github.com/konveyor/tackle-diva][konveyor/tackle-diva: Tackle Data-intensive Validity Analyzer]]
- [[https://github.com/konveyor/move2kube][konveyor/move2kube: Move2Kube is a command-line tool for automating creation of Infrastructure as code (IaC) artifacts. It has inbuilt support for creating IaC artifacts for replatforming to Kubernetes/Openshift.]]
- [[https://github.com/kubecfg/kubecfg][kubecfg/kubecfg: A tool for managing complex enterprise Kubernetes environments as code.]]
- [[https://github.com/topolvm/pvc-autoresizer][topolvm/pvc-autoresizer: Auto-resize PersistentVolumeClaim objects based on Prometheus metrics]]
- [[https://github.com/kubernetes-sigs/metrics-server][kubernetes-sigs/metrics-server: Scalable and efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.]]
- kubectl run --rm -it netshoot --image=nicolaka/netshoot /bin/bash
- [[https://github.com/itzg/kube-metrics-exporter][itzg/kube-metrics-exporter: Simple application that accesses the Kubernetes metrics API and exports the pod metrics for Prometheus scraping]]
- [[https://github.com/weaveworks/kured][weaveworks/kured: Kubernetes Reboot Daemon]]
- [[https://github.com/k8snetworkplumbingwg/multus-cni][k8snetworkplumbingwg/multus-cni: A CNI meta-plugin for multi-homed pods in Kubernetes]]
- [[https://charlottemach.com/2020/11/03/windows-kubevirt-k3s.html][Running a Windows VM on KubeVirt on K3s ¬∑ cookies and containers]]
- [[https://github.com/slok/simple-ingress-external-auth][slok/simple-ingress-external-auth: A very simple external authentication service for Kubernetes ingresses (ingress-nginx, traefik...)]]
- [[https://github.com/carina-io/carina][carina-io/carina: Carina: an high performance and ops-free local storage for kubernetes]]
- [[https://github.com/alibaba/open-local][alibaba/open-local: cloud-native local storage management system]]
- [[https://goharbor.io/][Harbor cloud native repository for Kubernetes]]
- [[https://github.com/rook/rook][rook/rook: Storage Orchestration for Kubernetes]]
- [[https://www.youtube.com/watch?v=CB79eTFbR0w][(2) 10 Must-Have Kubernetes Tools - YouTube]]
- [[https://scribe.bus-hit.me/flant-com/kubernetes-operator-in-python-451f2d2e33f3][Writing a Kubernetes Operator in Python without frameworks and SDK]]
- [[https://blog.flant.com/announcing-shell-operator-to-simplify-creating-of-kubernetes-operators/][Announcing shell-operator to simplify creating of Kubernetes operators ‚Äì Flant blog]]
  - [[https://github.com/flant/shell-operator][flant/shell-operator: Shell-operator is a tool for running event-driven scripts in a Kubernetes cluster]]
- [[https://github.com/corneliusweig/rakkess][corneliusweig/rakkess: Review Access - kubectl plugin to show an access matrix for k8s server resources]]
- [[https://github.com/WoozyMasta/kube-dump][WoozyMasta/kube-dump: Backup a Kubernetes cluster as a yaml manifest]]

** minikube
- [[https://habr.com/ru/company/vk/blog/648117/][–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å Minikube: —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã / –•–∞–±—Ä]]
- [[https://github.com/kubevirt/demo][kubevirt/demo: Easy to use KubeVirt demo based on minikube.]]

* Helm
- [[https://github.com/twuni/docker-registry.helm][twuni/docker-registry.helm: Helm chart for a Docker registry. Successor to stable/docker-registry chart.]]

* Installation
- [[https://github.com/miekg/vks][miekg/vks: Virtual Kubelet Provider for Systemd]]
- [[https://github.com/techno-tim/k3s-ansible][techno-tim/k3s-ansible: A fully automated HA k3s etcd install with kube-vip, MetalLB, and more]]
- [[https://kubernetes.io/docs/reference/setup-tools/kubeadm/][Kubeadm | Kubernetes]]
  - [[https://github.com/jpetazzo/ampernetacle][jpetazzo/ampernetacle deploy a Kubernetes cluster on Oracle Cloud Inafrastructure]]
- [[https://github.com/kubealex/libvirt-k8s-provisioner][kubealex/libvirt-k8s-provisioner: Automate your k8s installation]]
- [[https://github.com/NetBook-ai/spawner][NetBook-ai/spawner: Mulit-Cloud infrastructure orchestrator for kubernetes first development.]]
- [[https://github.com/poseidon/typhoon][poseidon/typhoon: Minimal and free Kubernetes distribution with Terraform]]
- [[https://github.com/alexellis/k8s-on-raspbian][alexellis/k8s-on-raspbian: Kubernetes on Raspbian (Raspberry Pi)]]
- [[https://github.com/canonical/microk8s][canonical/microk8s: MicroK8s is a small, fast, single-package Kubernetes for developers, IoT and edge.]]
- [[https://github.com/k0sproject/k0s][k0sproject/k0s: k0s - The Zero Friction Kubernetes by Team Lens]]
- [[https://github.com/kelseyhightower/standalone-kubelet-tutorial][kelseyhightower/standalone-kubelet-tutorial: Standalone Kubelet Tutorial]]
- [[https://github.com/c3os-io/c3os][c3os-io/c3os: Linux Immutable OS for Automated (Decentralized) Kubernetes clusters with k3s]]
- [[https://github.com/rancher/k3os][rancher/k3os: Purpose-built OS for Kubernetes, fully managed by Kubernetes.]]
- [[https://github.com/adieu/nixos-k8s-flake][adieu/nixos-k8s-flake: Kubernetes Flake for NixOS with full control]]
- [[https://github.com/karmada-io/karmada][karmada-io/karmada: Open, Multi-Cloud, Multi-Cluster Kubernetes Orchestration]]
- [[https://github.com/nocalhost/nocalhost][nocalhost/nocalhost: Nocalhost is Cloud Native Dev Environment.]]
- [[https://github.com/devtron-labs/devtron][devtron-labs/devtron: Tool integration platform for Kubernetes]]
- [[https://github.com/adieu/nixos-k8s-flake][adieu/nixos-k8s-flake: Kubernetes Flake for NixOS with full control]]
- [[https://github.com/justinas/nixos-ha-kubernetes][justinas/nixos-ha-kubernetes: Toy highly-available Kubernetes cluster on NixOS]]

** Rancher

- [[https://rancher.com/quick-start][Getting Started with Kubernetes | Rancher Quick Start]]

#+begin_example
  01 Prepare a Linux Host
  Prepare a Linux host with supported version of Docker on the host.

  02 Start the server
  To install and run Rancher, execute the following Docker command on your host:

  $ sudo docker run --privileged -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher

  To access the Rancher server UI, open a browser and go to the hostname or
  address where the container was installed. You will be guided through setting
  up your first cluster.
#+end_example

* Monitoring
- [[https://habr.com/ru/post/586206/][Kubernetes monitoring –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –∫ —Å–ª–æ–∂–Ω–æ–º—É (–ù–∏–∫–æ–ª–∞–π –•—Ä–∞–º—á–∏—Ö–∏–Ω) / –•–∞–±—Ä]]

* Operators
- [[https://github.com/flant/shell-operator][flant/shell-operator: Shell-operator is a tool for running event-driven scripts in a Kubernetes cluster]]
- [[https://habr.com/ru/company/southbridge/blog/556860/][–ü–∏—à–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä Kubernetes —Å –Ω—É–ª—è / –•–∞–±—Ä]]

* Misc
- [[https://github.com/aquasecurity/kube-bench][aquasecurity/kube-bench: Checks whether Kubernetes is deployed according to security best practices as defined in the CIS Kubernetes Benchmark]]
- [[https://github.com/kubevirt/kubevirt][kubevirt/kubevirt: Kubernetes Virtualization API and runtime in order to define and manage virtual machines.]]
- [[https://github.com/kubernetes-sigs/kind][kubernetes-sigs/kind: Kubernetes IN Docker - local clusters for testing Kubernetes]]
- [[https://github.com/criticalstack/quake-kube][quake-kube Quake 3 on Kubernetes]]
- [[https://github.com/oneinfra/oneinfra][oneinfra/oneinfra: Kubernetes as a Service]]
- [[https://github.com/hjacobs/kubernetes-failure-stories][hjacobs/kubernetes-failure-stories: Compilation of public failure/horror stories related to Kubernetes]]
- [[https://github.com/kubernetes/kops][kubernetes/kops: Kubernetes Operations (kops) - Production Grade K8s Installation, Upgrades, and Management]]
- [[https://github.com/argoproj/argo-cd/][argoproj/argo-cd: Declarative continuous deployment for Kubernetes.]]
- [[https://github.com/criticalstack/quake-kube][criticalstack/quake-kube: Quake 3 on Kubernetes]]
- [[https://github.com/flyteorg/flyte][flyteorg/flyte: Kubernetes-native workflow automation platform for complex, mission-critical data and ML processes at scale. It has been battle-tested at Lyft, Spotify, Freenome, and others and is truly open-source.]]
- [[https://github.com/storax/kubedoom][storax/kubedoom: Kill Kubernetes pods by playing Id's DOOM!]]

* How-to
- [[https://habr.com/ru/post/569124/][C–∞–º —Å–µ–±–µ –æ–±–ª–∞–∫–æ: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ ELK –∏ TICK —Å—Ç–µ–∫–æ–≤ –≤ Kubernetes / –•–∞–±—Ä]]

* Katacoda Kubernetes

Minikube is a tool that makes it easy to run Kubernetes locally. Minikube runs a single-node Kubernetes cluster inside a VM on your laptop for users looking to try out Kubernetes or develop with it day-to-day.

More details can be found at https://github.com/kubernetes/minikube

** Step 1 - Start Minikube
Minikube has been installed and configured in the environment. Check that it is properly installed, by running the minikube version command:

minikube version

Start the cluster, by running the minikube start command:

minikube start --wait=false

Great! You now have a running Kubernetes cluster in your online terminal. Minikube started a virtual machine for you, and a Kubernetes cluster is now running in that VM.

** Step 2 - Cluster Info
The cluster can be interacted with using the kubectl CLI. This is the main approach used for managing Kubernetes and the applications running on top of the cluster.

Details of the cluster and its health status can be discovered via kubectl cluster-info

To view the nodes in the cluster using kubectl get nodes

If the node is marked as NotReady then it is still starting the components.

This command shows all nodes that can be used to host our applications. Now we have only one node, and we can see that it‚Äôs status is ready (it is ready to accept applications for deployment).

** Step 3 - Deploy Containers
With a running Kubernetes cluster, containers can now be deployed.

Using kubectl run, it allows containers to be deployed onto the cluster - kubectl create deployment first-deployment --image=katacoda/docker-http-server

The status of the deployment can be discovered via the running Pods - kubectl get pods

Once the container is running it can be exposed via different networking options, depending on requirements. One possible solution is NodePort, that provides a dynamic port to a container.

kubectl expose deployment first-deployment --port=80 --type=NodePort

The command below finds the allocated port and executes a HTTP request.

export PORT=$(kubectl get svc first-deployment -o go-template='{{range.spec.ports}}{{if .nodePort}}{{.nodePort}}{{"\n"}}{{end}}{{end}}')
echo "Accessing host01:$PORT"
curl host01:$PORT

The result is the container that processed the request.

** Step 4 - Dashboard
Enable the dashboard using Minikube with the command minikube addons enable dashboard

Make the Kubernetes Dashboard available by deploying the following YAML definition. This should only be used on Katacoda.

kubectl apply -f /opt/kubernetes-dashboard.yaml

The Kubernetes dashboard allows you to view your applications in a UI. In this deployment, the dashboard has been made available on port 30000 but may take a while to start.

To see the progress of the Dashboard starting, watch the Pods within the kube-system namespace using kubectl get pods -n kubernetes-dashboard -w

Once running, the URL to the dashboard is https://2886795308-30000-simba08.environments.katacoda.com/

* Cheat sheet

#+begin_example
  [root@vm30:~]# lsns | grep nginx
  4026532800 mnt         2  80051 root             nginx: master process nginx -g daemon off;
  4026532801 pid         2  80051 root             nginx: master process nginx -g daemon off;
  4026532802 cgroup      2  80051 root             nginx: master process nginx -g daemon off;
  4026532865 mnt        20  90081 101              /usr/bin/dumb-init -- /nginx-ingress-controller --publish-service=ingress-nginx/ingress-nginx-controller --election-id=ingress-controller-leader --controller-class=k8s.io/ingress-nginx --ingress-class=nginx --configmap=ingress-nginx/ingress-nginx-controller --validating-webhook=:8443 --validating-webhook-certificate=/usr/local/certificates/cert --validating-webhook-key=/usr/local/certificates/key
  4026532866 pid        20  90081 101              /usr/bin/dumb-init -- /nginx-ingress-controller --publish-service=ingress-nginx/ingress-nginx-controller --election-id=ingress-controller-leader --controller-class=k8s.io/ingress-nginx --ingress-class=nginx --configmap=ingress-nginx/ingress-nginx-controller --validating-webhook=:8443 --validating-webhook-certificate=/usr/local/certificates/cert --validating-webhook-key=/usr/local/certificates/key
  4026532867 cgroup     20  90081 101              /usr/bin/dumb-init -- /nginx-ingress-controller --publish-service=ingress-nginx/ingress-nginx-controller --election-id=ingress-controller-leader --controller-class=k8s.io/ingress-nginx --ingress-class=nginx --configmap=ingress-nginx/ingress-nginx-controller --validating-webhook=:8443 --validating-webhook-certificate=/usr/local/certificates/cert --validating-webhook-key=/usr/local/certificates/key

  [root@vm30:~]# nsenter -t 80051 -n curl localhost 
  <!DOCTYPE html>
  <html>
  ...
#+end_example

- clean state
  : rm -rf /var/lib/{kubernetes,cfssl,cni,containerd,etcd,kubelet}

- print everything
  : kubectl get all -A
  : kubectl get all --all-namespaces
  : kubectl get all,cm,secret,ing -A
  : kubectl api-resources --verbs=list
  : kubectl get events -A

- API
  : kubectl api-resources

- cdi-uploadproxy
: kubectl get service cdi-uploadproxy -n cdi

- delete terminating ns
#+begin_example
  oleg@guixsd ~$ kubectl proxy
  Starting to serve on 127.0.0.1:8001

  NAMESPACE=cdi
  kubectl get namespace $NAMESPACE -o json |jq '.spec = {"finalizers":[]}' >temp.json
  curl -k -H "Content-Type: application/json" -X PUT --data-binary @temp.json 127.0.0.1:8001/api/v1/namespaces/$NAMESPACE/finalize
#+end_example

- pvc
#+begin_example
  oleg@guixsd ~$ virtctl image-upload --pvc-name=guix-vm-pv --pvc-size=2Gi --image-path=/tmp/guix.qcow2 --uploadproxy-url=https://10.43.181.37 --insecure
  PVC default/guix-vm-pv not found
  PersistentVolumeClaim default/guix-vm-pv created
  Waiting for PVC guix-vm-pv upload pod to be ready...
  Pod now ready
  Uploading data to https://10.43.181.37
#+end_example

- get context
  #+begin_example
    oleg@guixsd ~$ kubectl config get-contexts
    CURRENT   NAME           CLUSTER        AUTHINFO             NAMESPACE
    ,*         k8s-cluster0   k8s-cluster0   k8s-cluster0-admin   
  #+end_example

- change context
  #+begin_example
    kubectl config use-context k8s-cluster0
  #+end_example

- change namespace
  #+begin_example
    kubectl config set-context --current --namespace=<insert-namespace-name-here>
    # Validate it
    kubectl config view --minify | grep namespace:
  #+end_example

* How it works

First of all you should have a working etcd.

#+begin_example
  [root@kube1:~]# ss -tulpn
  Netid          State           Recv-Q          Send-Q                   Local Address:Port                     Peer Address:Port          Process
  tcp            LISTEN          0               4096                         127.0.0.1:38421                         0.0.0.0:*              users:(("containerd",pid=885,fd=14))
  tcp            LISTEN          0               128                       172.16.103.9:22                            0.0.0.0:*              users:(("sshd",pid=911,fd=3))
  tcp            LISTEN          0               4096                      172.16.103.9:443                           0.0.0.0:*              users:(("kube-apiserver",pid=3104049,fd=7))
  tcp            LISTEN          0               4096                      172.16.103.9:2379                          0.0.0.0:*              users:(("etcd",pid=3104054,fd=9))
  tcp            LISTEN          0               4096                      172.16.103.9:2380                          0.0.0.0:*              users:(("etcd",pid=3104054,fd=8))
#+end_example

After that you should start kube-apiserver, which allows to use kubectl
utility, which connects you to the cluster.

#+begin_example
  [root@kube1:~]# kubectl --insecure-skip-tls-verify get -A all
  NAMESPACE   NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
  default     service/kubernetes   ClusterIP   10.0.0.1     <none>        443/TCP   10h
#+end_example

=kubelet= will start itself and =containerd= service

starting the following units: systemd-modules-load.service, systemd-sysctl.service
the following new units were started: containerd.service, kubelet.service

* kubevirt

#+begin_example
  oleg@guixsd ~$ kubectl get pods -n kubevirt
  NAME                               READY   STATUS    RESTARTS        AGE
  virt-api-8986f8d94-m5zr4           1/1     Running   9 (99m ago)     6h56m
  virt-handler-lvzs4                 1/1     Running   28 (101m ago)   2d10h
  virt-controller-5599f57bf4-rjsr9   1/1     Running   9 (101m ago)    6h56m
  virt-controller-5599f57bf4-5qljd   1/1     Running   9 (101m ago)    6h56m
  virt-api-8986f8d94-gww4h           1/1     Running   9 (99m ago)     6h56m
  virt-operator-5df564dc7c-258xk     1/1     Running   9 (101m ago)    6h56m
  virt-operator-5df564dc7c-q7mj2     1/1     Running   9 (101m ago)    6h56m
#+end_example
