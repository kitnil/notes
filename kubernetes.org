:PROPERTIES:
:ID:       169228af-10b2-4a7e-b9fa-0619733b14ed
:END:

* Awesome
- [[https://kubernetes-csi.github.io/docs/drivers.html][Drivers - Kubernetes CSI Developer Documentation]]
- [[https://github.com/k8s-at-home/awesome-home-kubernetes][k8s-at-home/awesome-home-kubernetes: Awesome projects involving running Kubernetes at home]]
- [[https://github.com/Michaelpalacce/HomeLab][Michaelpalacce/HomeLab: My HomeLab environment]]
- [[https://github.com/ramitsurana/awesome-kubernetes][ramitsurana/awesome-kubernetes: A curated list for awesome kubernetes sources]]

* CDI
** EFS
#+begin_quote
EFS is dead slow and not performant at all. Stay away from EFS except for the
lightest of data storage needs.
#+end_quote

* Cheat sheet

- [[https://gist.github.com/egeneralov/4309aec2994af7e025330509905e824e][chroot to host namespace]]
  #+begin_src bash
    #!/bin/sh -xe

    for NAME in $(kubectl get nodes -o name | awk -F \/ '{print $2}'); do
      cat << EOF | kubectl apply -f -
        apiVersion: v1
        kind: Pod
        metadata:
         name: kube-support-$NAME
         namespace: kube-system
        spec:
          terminationGracePeriodSeconds: 1
          containers:
            - name: debian
              image: debian:buster
              command: ["/bin/sleep"]
              args: ["infinity"]
              volumeMounts:
                - name: host
                  mountPath: /host
              securityContext:
                privileged: true
          volumes:
            - name: host
              hostPath:
                path: /
                type: Directory
          nodeSelector:
            kubernetes.io/hostname: $NAME
          tolerations:
            - operator: "Exists"
      EOF
    done
  #+end_src

- [[https://learnk8s.io/a/a-visual-guide-on-troubleshooting-kubernetes-deployments/troubleshooting-kubernetes.en_en.v3.pdf][Visual guide on troubleshooting Kubernetes deployments]]

#+begin_example
  [root@vm30:~]# lsns | grep nginx
  4026532800 mnt         2  80051 root             nginx: master process nginx -g daemon off;
  4026532801 pid         2  80051 root             nginx: master process nginx -g daemon off;
  4026532802 cgroup      2  80051 root             nginx: master process nginx -g daemon off;
  4026532865 mnt        20  90081 101              /usr/bin/dumb-init -- /nginx-ingress-controller --publish-service=ingress-nginx/ingress-nginx-controller --election-id=ingress-controller-leader --controller-class=k8s.io/ingress-nginx --ingress-class=nginx --configmap=ingress-nginx/ingress-nginx-controller --validating-webhook=:8443 --validating-webhook-certificate=/usr/local/certificates/cert --validating-webhook-key=/usr/local/certificates/key
  4026532866 pid        20  90081 101              /usr/bin/dumb-init -- /nginx-ingress-controller --publish-service=ingress-nginx/ingress-nginx-controller --election-id=ingress-controller-leader --controller-class=k8s.io/ingress-nginx --ingress-class=nginx --configmap=ingress-nginx/ingress-nginx-controller --validating-webhook=:8443 --validating-webhook-certificate=/usr/local/certificates/cert --validating-webhook-key=/usr/local/certificates/key
  4026532867 cgroup     20  90081 101              /usr/bin/dumb-init -- /nginx-ingress-controller --publish-service=ingress-nginx/ingress-nginx-controller --election-id=ingress-controller-leader --controller-class=k8s.io/ingress-nginx --ingress-class=nginx --configmap=ingress-nginx/ingress-nginx-controller --validating-webhook=:8443 --validating-webhook-certificate=/usr/local/certificates/cert --validating-webhook-key=/usr/local/certificates/key

  [root@vm30:~]# nsenter -t 80051 -n curl localhost 
  <!DOCTYPE html>
  <html>
  ...
#+end_example

- clean state
  : rm -rf /var/lib/{kubernetes,cfssl,cni,containerd,etcd,kubelet}

- print everything
  : kubectl get all -A
  : kubectl get all --all-namespaces
  : kubectl get all,cm,secret,ing -A
  : kubectl api-resources --verbs=list
  : kubectl get events -A

- API
  : kubectl api-resources
  : kubectl api-versions

- cdi-uploadproxy
: kubectl get service cdi-uploadproxy -n cdi

- delete terminating ns
#+begin_example
  oleg@guixsd ~$ kubectl proxy
  Starting to serve on 127.0.0.1:8001

  NAMESPACE=cdi
  kubectl get namespace $NAMESPACE -o json |jq '.spec = {"finalizers":[]}' >temp.json
  curl -k -H "Content-Type: application/json" -X PUT --data-binary @temp.json 127.0.0.1:8001/api/v1/namespaces/$NAMESPACE/finalize
#+end_example

- pvc
#+begin_example
  oleg@guixsd ~$ virtctl image-upload --pvc-name=guix-vm-pv --pvc-size=2Gi --image-path=/tmp/guix.qcow2 --uploadproxy-url=https://10.43.181.37 --insecure
  PVC default/guix-vm-pv not found
  PersistentVolumeClaim default/guix-vm-pv created
  Waiting for PVC guix-vm-pv upload pod to be ready...
  Pod now ready
  Uploading data to https://10.43.181.37
#+end_example

- get storage info
  : kubectl get --raw "/api/v1/nodes/kube7/proxy/stats/summary

- get specific node
  : kubectl get all --all-namespaces -o wide --field-selector spec.nodeName=kube7

- show node labels
  : kubectl get nodes --show-labels

- get context
  #+begin_example
    oleg@guixsd ~$ kubectl config get-contexts
    CURRENT   NAME           CLUSTER        AUTHINFO             NAMESPACE
    ,*         k8s-cluster0   k8s-cluster0   k8s-cluster0-admin   
  #+end_example

- change context
  #+begin_example
    kubectl config use-context k8s-cluster0
  #+end_example

- change namespace
  #+begin_example
    kubectl config set-context --current --namespace=<insert-namespace-name-here>
    # Validate it
    kubectl config view --minify | grep namespace:
  #+end_example

- run linter
  : docker run --network=host --rm -it -v $HOME/.kube:/root/.kube -e POPEYE_REPORT_DIR=/tmp/popeye -v /tmp/popeye:/tmp/popeye derailed/popeye --context k8s-cluster0-lb -n default --save --out html --output-file report.html

- mark master nodes as unschedulable
  : kubectl taint node kube3 unschedulable=true:NoSchedule

- delete taint
  : kubectl taint node kube8 unschedulable-

- drain node
  : kubectl drain kube6 --ignore-daemonsets --delete-emptydir-data

- reboot node
  : ansible kubeX.intr -m reboot -a 'search_paths=/run/current-system/sw/bin'

- undrain node
  : kubectl uncordon kube6

- get documentation
  : kubectl explain --api-version=networking.k8s.io/v1 ingress.spec.rules.http.paths.backend

- dump all information
  : kubectl cluster-info dump

- run pod with networking utilities for debuging
  : kubectl run --rm -it netshoot --image=nicolaka/netshoot /bin/bash

- run pod on specific node with =kubectl run=
  : kubectl run mypod --image alpine --overrides='{"apiVersion": "v1", "spec": {"nodeSelector": { "kubernetes.io/hostname": "kube1" }}}' --command -- sleep 100000000000000
  : kubectl run --rm -it netshoot --image=nicolaka/netshoot --overrides='{"apiVersion": "v1", "spec": {"nodeSelector": { "kubernetes.io/hostname": "kube1" }}}' /bin/bash

- mariadb client
  : kubectl run --rm -it mysql-client --image=nixery.dev/shell/less/mycli -- /bin/bash

- run with specific multus network
  : kubectl run --rm -it netshoot --image=nicolaka/netshoot --overrides='{"apiVersion": "v1", "metadata": {"annotations": {"k8s.v1.cni.cncf.io/networks": "default/macvlan-br253"}}, "spec": {"nodeSelector": { "kubernetes.io/hostname": "kube6" }}}' /bin/bash

- iperf
  : kubectl run iperf --image nixery.dev/shell/tmux/iperf --overrides='{"apiVersion": "v1", "spec": {"nodeSelector": { "kubernetes.io/hostname": "kube6" }}}' --command -- sleep 100000000000000

- expose
  : kubectl expose --port=5201 --type=LoadBalancer pod iperf

- run nginx on specific node
  : kubectl run --overrides='{"apiVersion": "v1", "spec": {"nodeSelector": { "kubernetes.io/hostname": "kube6" }}}' --image nginx nginx

- expose to specific address
  : kubectl expose --overrides='{"spec": {"loadBalancerIP": "78.108.82.13"}}' --port=80 --type=LoadBalancer pod nginx-76d6c9b8c-6hlfw

- restart coredns deployment
  : kubectl -n kube-system rollout restart deployment coredns

- show authentication privileges
  : kubectl auth can-i get pods

- compare nodes labels
  : diff -u <(kubectl get nodes kube7 -o json | jq --raw-output '.metadata.labels | keys[] | .' | sort -u) <(kubectl get nodes kube8 -o json | jq --raw-output '.metadata.labels | keys[] | .' | sort -u)

** authentication

[[https://stackoverflow.com/questions/51612976/how-to-view-members-of-subject-with-group-kind][kubernetes - How to view members of subject with Group kind - Stack Overflow]]

#+begin_example
  $ kubectl get clusterrolebindings -o json | jq -r '.items[] | select(.subjects[0].kind=="Group") | select(.subjects[0].name=="system:masters")'
  {
    "apiVersion": "rbac.authorization.k8s.io/v1",
    "kind": "ClusterRoleBinding",
    "metadata": {
      "annotations": {
        "rbac.authorization.kubernetes.io/autoupdate": "true"
      },
      "creationTimestamp": "2022-05-14T12:14:48Z",
      "labels": {
        "kubernetes.io/bootstrapping": "rbac-defaults"
      },
      "name": "cluster-admin",
      "resourceVersion": "201",
      "uid": "df5858b7-b5e4-4796-a167-70cab0fe26a0"
    },
    "roleRef": {
      "apiGroup": "rbac.authorization.k8s.io",
      "kind": "ClusterRole",
      "name": "cluster-admin"
    },
    "subjects": [
      {
        "apiGroup": "rbac.authorization.k8s.io",
        "kind": "Group",
        "name": "system:masters"
      }
    ]
  }
#+end_example

#+begin_example
  $ kubectl get clusterrolebindings -o json | jq -r '.items[] | select(.subjects[0].kind=="Group") | select(.subjects[0].name=="system:masters") | .metadata.name'
  cluster-admin
#+end_example

#+begin_example
  $ kubectl get clusterrolebindings -o go-template='{{range .items}}{{range .subjects}}{{.kind}}-{{.name}} {{end}} {{" - "}} {{.metadata.name}} {{"\n"}}{{end}}' | grep "^Group-system:masters"
  Group-system:masters   -  cluster-admin
#+end_example

Have a read through the Kubernetes 'Authenticating' docs. Kubernetes does not
have an in-built mechanism for defining and controlling users (as distinct
from ServiceAccounts which are used to provide a cluster identity for Pods,
and therefore services running on them).

This means that Kubernetes does not therefore have any internal DB to
reference, to determine and display group membership.

In smaller clusters, x509 certificates are typically used to authenticate
users. The API server is configured to trust a CA for the purpose, and then
users are issued certificates signed by that CA. As you had noticed, if the
subject contains an 'Organisation' field, that is mapped to a Kubernetes
group. If you want a user to be a member of more than one group, then you
specify multiple 'O' fields. (As an aside, to my mind it would have made more
sense to use the 'OU' field, but that is not the case)

In answer to your question, it appears that in the case of a cluster where
users are authenticated by certificates, your only route is to have access to
the issued certs, and to check for the presence of the 'O' field in the
subject. I guess in more advanced cases, Kubernetes would be integrated with a
centralised tool such as AD, which could be queried natively for group
membership.

*** Anonymous access

[[https://kubernetes.io/docs/reference/access-authn-authz/rbac/][Using RBAC Authorization | Kubernetes]]

*** User roles
- [[https://kubernetes.io/docs/reference/access-authn-authz/rbac/#auto-reconciliation][Using RBAC Authorization | Kubernetes]]

*** Cheat sheet

: kubectl get rolebindings,clusterrolebindings --all-namespaces  -o custom-columns='KIND:kind,NAMESPACE:metadata.namespace,NAME:metadata.name,SERVICE_ACCOUNTS:subjects[?(@.kind=="ServiceAccount")].name'

#+begin_example
  $ kubectl get clusterroles system:discovery -o yaml
#+end_example

*** kubectl config generation

#+begin_example
  kubectl config --kubeconfig config set-cluster k8s --server=https://kubernetes.intr:6443 --certificate-authority=ssl/ca.pem --embed-certs
  kubectl config --kubeconfig config set-credentials view --client-key ssl/view-key.pem --client-certificate ssl/view.pem --embed-certs
  kubectl config --kubeconfig config set-context default --cluster=k8s --user=view --namespace default
  kubectl config --kubeconfig config use-context default
#+end_example

** Balance
#+begin_src markdown
  [amazon web services - Spread pods over cluster - DevOps Stack Exchange](https://devops.stackexchange.com/questions/12246/spread-pods-over-cluster)

  > Take a look at the [Descheduler](https://github.com/kubernetes-sigs/descheduler). This project runs as a Kubernetes Job that aims at killing pods when it thinks the cluster is unbalanced.
  > 
  > The [`LowNodeUtilization`](https://github.com/kubernetes-sigs/descheduler#lownodeutilization) strategy seems to fit your case:
  > 
  > > This strategy finds nodes that are under utilized and evicts pods, if possible, from other nodes in the hope that recreation of evicted pods will be scheduled on these underutilized nodes.
  > 
  > * * *
  > 
  > Another option is to apply a little of chaos engineering manually, forcing a Rolling Update on your deployment, and hopefully, the scheduler will fix the balance problem when pods are recreated.
  > 
  > You can use the `kubectl rollout restart my-deployment`. It's way better than simply deleting the pods with `kubectl delete pod`, as the rollout will ensure availability during the "rebalancing" (although deleting the pods altogether increases your chances for a better rebalance).
#+end_src

* Community
- [[https://kubernetes.slack.com/][kubernetes.slack.com]]
  - [[https://slack.kubernetes.io/][slack.kubernetes.io]]
- [[https://discuss.kubernetes.io/]]
- [[https://npwg-team.slack.com/][Multus Slack Invite]]

* Helm
- [[https://helm.sh/docs/topics/charts/][Helm Documentation | Charts]]
- [[https://github.com/truecharts/charts][truecharts/charts: Community App Catalog for TrueNAS SCALE]]
- [[https://github.com/twuni/docker-registry.helm][twuni/docker-registry.helm: Helm chart for a Docker registry. Successor to stable/docker-registry chart.]]
** Tools
- [[https://github.com/databus23/schelm][databus23/schelm: Render a helm manifest to a directory]]
** Cheat sheet
: helm create mychart

* How it works

First of all you should have a working etcd.

#+begin_example
  [root@kube1:~]# ss -tulpn
  Netid          State           Recv-Q          Send-Q                   Local Address:Port                     Peer Address:Port          Process
  tcp            LISTEN          0               4096                         127.0.0.1:38421                         0.0.0.0:*              users:(("containerd",pid=885,fd=14))
  tcp            LISTEN          0               128                       172.16.103.9:22                            0.0.0.0:*              users:(("sshd",pid=911,fd=3))
  tcp            LISTEN          0               4096                      172.16.103.9:443                           0.0.0.0:*              users:(("kube-apiserver",pid=3104049,fd=7))
  tcp            LISTEN          0               4096                      172.16.103.9:2379                          0.0.0.0:*              users:(("etcd",pid=3104054,fd=9))
  tcp            LISTEN          0               4096                      172.16.103.9:2380                          0.0.0.0:*              users:(("etcd",pid=3104054,fd=8))
#+end_example

After that you should start kube-apiserver, which allows to use kubectl
utility, which connects you to the cluster.

#+begin_example
  [root@kube1:~]# kubectl --insecure-skip-tls-verify get -A all
  NAMESPACE   NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
  default     service/kubernetes   ClusterIP   10.0.0.1     <none>        443/TCP   10h
#+end_example

=kubelet= will start itself and =containerd= service

starting the following units: systemd-modules-load.service, systemd-sysctl.service
the following new units were started: containerd.service, kubelet.service

* How-to
- [[https://habr.com/ru/post/569124/][Cам себе облако: установка ELK и TICK стеков в Kubernetes / Хабр]]

* Ingress

- install
  : kubectl create namespace ingress-nginx
  : helm install -n ingress-nginx ingress-nginx ingress-nginx/ingress-nginx
* Installation
- [[https://github.com/adieu/nixos-k8s-flake][adieu/nixos-k8s-flake: Kubernetes Flake for NixOS with full control]]
- [[https://github.com/adieu/nixos-k8s-flake][adieu/nixos-k8s-flake: Kubernetes Flake for NixOS with full control]]
- [[https://github.com/alexellis/k8s-on-raspbian][alexellis/k8s-on-raspbian: Kubernetes on Raspbian (Raspberry Pi)]]
- [[https://github.com/bbigras/k3s-on-fly.io][bbigras/k3s-on-fly.io]]
- [[https://github.com/c3os-io/c3os][c3os-io/c3os: Linux Immutable OS for Automated (Decentralized) Kubernetes clusters with k3s]]
- [[https://github.com/canonical/microk8s][canonical/microk8s: MicroK8s is a small, fast, single-package Kubernetes for developers, IoT and edge.]]
- [[https://github.com/containerd/containerd/tree/main/contrib/ansible][containerd/contrib/ansible at main · containerd/containerd]]
- [[https://github.com/devtron-labs/devtron][devtron-labs/devtron: Tool integration platform for Kubernetes]]
- [[https://kubernetes.io/docs/setup/][Getting started | Kubernetes]]
  - [[https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/][Creating a cluster with kubeadm | Kubernetes]]
  - [[https://github.com/vmware-tanzu/sonobuoy][vmware-tanzu/sonobuoy: Sonobuoy is a diagnostic tool that makes it easier to understand the state of a Kubernetes cluster by running a set of Kubernetes conformance tests and other plugins in an accessible and non-destructive manner.]]
- [[https://github.com/giantswarm/mayu][giantswarm/mayu: Mayu helps you to provision a cluster of bare metal machines with CoreOS Container Linux]]
- [[https://github.com/justinas/nixos-ha-kubernetes][justinas/nixos-ha-kubernetes: Toy highly-available Kubernetes cluster on NixOS]]
- [[https://github.com/k0sproject/k0s][k0sproject/k0s: k0s - The Zero Friction Kubernetes by Team Lens]]
- [[https://github.com/karmada-io/karmada][karmada-io/karmada: Open, Multi-Cloud, Multi-Cluster Kubernetes Orchestration]]
- [[https://github.com/kelseyhightower/standalone-kubelet-tutorial][kelseyhightower/standalone-kubelet-tutorial: Standalone Kubelet Tutorial]]
- [[https://kubernetes.io/docs/reference/setup-tools/kubeadm/][Kubeadm | Kubernetes]]
  - [[https://github.com/jpetazzo/ampernetacle][jpetazzo/ampernetacle deploy a Kubernetes cluster on Oracle Cloud Inafrastructure]]
- [[https://github.com/kubealex/libvirt-k8s-provisioner][kubealex/libvirt-k8s-provisioner: Automate your k8s installation]]
- [[https://collabnix.com/3-node-kubernetes-cluster-on-bare-metal-system-in-5-minutes/][Kubernetes Cluster on Bare Metal System Made Possible using MetalLB – Collabnix]]
- [[https://blog.alexellis.io/kubernetes-in-10-minutes/][Kubernetes on bare-metal in 10 minutes]]
- [[https://jamesdefabia.github.io/docs/getting-started-guides/docker/][Kubernetes - Running Kubernetes Locally via Docker]]
- [[https://github.com/miekg/vks][miekg/vks: Virtual Kubelet Provider for Systemd]]
- [[https://github.com/MusicDin/kubitect][MusicDin/kubitect: Kubitect provides a simple way to set up a highly available Kubernetes cluster across multiple hosts.]]
- [[https://github.com/NetBook-ai/spawner][NetBook-ai/spawner: Mulit-Cloud infrastructure orchestrator for kubernetes first development.]]
- [[https://github.com/nocalhost/nocalhost][nocalhost/nocalhost: Nocalhost is Cloud Native Dev Environment.]]
- [[https://www.cloudbees.com/blog/one-command-to-kubernetes-with-docker-compose][One Command to Kubernetes with Docker Compose | Cloudbees Blog]]
- [[https://github.com/poseidon/typhoon][poseidon/typhoon: Minimal and free Kubernetes distribution with Terraform]]
- [[https://github.com/rancher/k3os][rancher/k3os: Purpose-built OS for Kubernetes, fully managed by Kubernetes.]]
- [[https://github.com/techno-tim/k3s-ansible][techno-tim/k3s-ansible: A fully automated HA k3s etcd install with kube-vip, MetalLB, and more]]
- [[https://balaskas.gr/blog/2022/08/31/creating-a-kubernetes-cluster-with-kubeadm-on-ubuntu-2204-lts/][Ευάγγελος Μπαλάσκας - Creating a kubernetes cluster with kubeadm on Ubuntu 22.04 LTS » Evaggelos Balaskas - System Engineer]]

** Rancher

- [[https://rancher.com/quick-start][Getting Started with Kubernetes | Rancher Quick Start]]

#+begin_example
  01 Prepare a Linux Host
  Prepare a Linux host with supported version of Docker on the host.

  02 Start the server
  To install and run Rancher, execute the following Docker command on your host:

  $ sudo docker run --privileged -d --restart=unless-stopped -p 80:80 -p 443:443 rancher/rancher

  To access the Rancher server UI, open a browser and go to the hostname or
  address where the container was installed. You will be guided through setting
  up your first cluster.
#+end_example

* Issues

** [[https://stackoverflow.com/questions/66252195/kubernetes-pod-wont-start-1-nodes-had-a-volume-affinity-conflict][Question]]

I have a pod that won't start with a volume affinity conflict. This is a
bare-metal cluster so it's unrelated to regions. The pod has 4 persistent
volume claims which are all reporting bound so I'm assuming it's not one of
those. There are 4 nodes, one of them is tainted so that the pod will not
start on it, one of them is tainted specifically so that the pod WILL start on
it. That's the only affinity I have set up to my knowledge. The message looks
like this:

0/4 nodes are available: 1 node(s) had taint {XXXXXXX}, 
that the pod didn't tolerate, 1 node(s) had volume node 
affinity conflict, 2 Insufficient cpu, 2 Insufficient memory.

This is what I would have expected apart from the volume affinity
conflict. There are no other affinities set other than to point it at this
node. I'm really not sure why it's doing this or where to even begin. The
message isn't super helpful. It does NOT say which node or which volume there
is a problem with. The one thing I don't really understand is how binding
works. One of the PVC's is mapped to a PV on another node however it is
reporting as bound so I'm not completely certain if that's the problem. I am
using local-storage as the storage class. I'm wondering if that's the problem
but I'm fairly new to Kubernetes and I'm not sure where to look.

** Answer

You got 4 Nodes but none of them are available for scheduling due to a
different set of conditions. Note that each Node can be affected by multiple
issues and so the numbers can add up to more than what you have on total
nodes. Let's try to address these issues one by one:

    Insufficient memory: Execute kubectl describe node <node-name> to check
    how much free memory is available there. Check the requests and limits of
    your pods. Note that Kubernetes will block the full amount of memory a pod
    requests regardless how much this pod uses.

    Insufficient cpu: Analogical as above.

    node(s) had volume node affinity conflict: Check out if the nodeAffinity
    of your PersistentVolume (kubectl describe pv) matches the node label
    (kubectl get nodes). Check if the nodeSelector in your pod also
    matches. Make sure you set up the Affinity and/or AntiAffinity rules
    correctly. More details on that can be found here.

    node(s) had taint {XXXXXXX}, that the pod didn't tolerate: You can use
    kubectl describe node to check taints and kubectl taint nodes <node-name>
    <taint-name>- in order to remove them. Check the Taints and Tolerations
    for more details.

* Katacoda Kubernetes

Minikube is a tool that makes it easy to run Kubernetes locally. Minikube runs a single-node Kubernetes cluster inside a VM on your laptop for users looking to try out Kubernetes or develop with it day-to-day.

More details can be found at https://github.com/kubernetes/minikube

** Step 1 - Start Minikube
Minikube has been installed and configured in the environment. Check that it is properly installed, by running the minikube version command:

minikube version

Start the cluster, by running the minikube start command:

minikube start --wait=false

Great! You now have a running Kubernetes cluster in your online terminal. Minikube started a virtual machine for you, and a Kubernetes cluster is now running in that VM.

** Step 2 - Cluster Info
The cluster can be interacted with using the kubectl CLI. This is the main approach used for managing Kubernetes and the applications running on top of the cluster.

Details of the cluster and its health status can be discovered via kubectl cluster-info

To view the nodes in the cluster using kubectl get nodes

If the node is marked as NotReady then it is still starting the components.

This command shows all nodes that can be used to host our applications. Now we have only one node, and we can see that it’s status is ready (it is ready to accept applications for deployment).

** Step 3 - Deploy Containers
With a running Kubernetes cluster, containers can now be deployed.

Using kubectl run, it allows containers to be deployed onto the cluster - kubectl create deployment first-deployment --image=katacoda/docker-http-server

The status of the deployment can be discovered via the running Pods - kubectl get pods

Once the container is running it can be exposed via different networking options, depending on requirements. One possible solution is NodePort, that provides a dynamic port to a container.

kubectl expose deployment first-deployment --port=80 --type=NodePort

The command below finds the allocated port and executes a HTTP request.

export PORT=$(kubectl get svc first-deployment -o go-template='{{range.spec.ports}}{{if .nodePort}}{{.nodePort}}{{"\n"}}{{end}}{{end}}')
echo "Accessing host01:$PORT"
curl host01:$PORT

The result is the container that processed the request.

** Step 4 - Dashboard
Enable the dashboard using Minikube with the command minikube addons enable dashboard

Make the Kubernetes Dashboard available by deploying the following YAML definition. This should only be used on Katacoda.

kubectl apply -f /opt/kubernetes-dashboard.yaml

The Kubernetes dashboard allows you to view your applications in a UI. In this deployment, the dashboard has been made available on port 30000 but may take a while to start.

To see the progress of the Dashboard starting, watch the Pods within the kube-system namespace using kubectl get pods -n kubernetes-dashboard -w

Once running, the URL to the dashboard is https://2886795308-30000-simba08.environments.katacoda.com/

* kubespray
- [[https://github.com/pulumi/kubespy][pulumi/kubespy: Tools for observing Kubernetes resources in real time, powered by Pulumi.]]

#+begin_src bash
  kubectl -n backup delete job/kubespray

  cat << EOF | kubectl apply -f -
  apiVersion: batch/v1
  kind: Job
  metadata:
    labels:
      app: kubespray
    name: kubespray
    namespace: backup
  spec:
    backoffLimit: 1
    completions: 1
    parallelism: 1
    template:
      metadata:
        labels:
          app: kubespray
      spec:
        containers:
        - command:
          - /usr/bin/ansible-playbook
          - -i
          - /tmp/project-kubespray/inventory/project/inventory.ini
          - cluster.yml
          image: registry.gitlab.com/egeneralov/aio-bundle:a06acba5
          name: kubespray
          volumeMounts:
          - mountPath: /root/.ssh/id_rsa
            name: kubespray
            subPath: id_rsa
          - mountPath: /root/.ssh/config
            name: kubespray
            subPath: config
          - mountPath: /tmp/project-kubespray
            name: kubespray-files
          workingDir: /tmp/project-kubespray
        restartPolicy: Never
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 384
            items:
            - key: id_rsa
              path: id_rsa
            - key: id_rsa.pub
              path: id_rsa.pub
            - key: config
              path: config
            name: backup
          name: kubespray
        - hostPath:
            path: /tmp/project-kubespray
            type: DirectoryOrCreate
          name: kubespray-files
  EOF
#+end_src
* kubevirt

#+begin_example
  oleg@guixsd ~$ kubectl get pods -n kubevirt
  NAME                               READY   STATUS    RESTARTS        AGE
  virt-api-8986f8d94-m5zr4           1/1     Running   9 (99m ago)     6h56m
  virt-handler-lvzs4                 1/1     Running   28 (101m ago)   2d10h
  virt-controller-5599f57bf4-rjsr9   1/1     Running   9 (101m ago)    6h56m
  virt-controller-5599f57bf4-5qljd   1/1     Running   9 (101m ago)    6h56m
  virt-api-8986f8d94-gww4h           1/1     Running   9 (99m ago)     6h56m
  virt-operator-5df564dc7c-258xk     1/1     Running   9 (101m ago)    6h56m
  virt-operator-5df564dc7c-q7mj2     1/1     Running   9 (101m ago)    6h56m
#+end_example

* Learning
- [[https://www.youtube.com/watch?v=n4zxKk2an3U][(28) Learn Kubernetes with this Introductory Course in One Hour (All Core Components and Hands On!) - YouTube]]
- [[https://www.youtube.com/watch?v=lkXLsD6-4jA&list=LL&index=1][(3) Kubernetes kube-proxy Modes: iptables and ipvs, Deep Dive - YouTube]]
- [[https://www.youtube.com/watch?v=xhva6DeKqVU][(7) How load balancing and service discovery works in Kubernetes - YouTube]]
- [[https://www.youtube.com/watch?v=A-tVEoYqQsk][(7) What I Learnt Fixing 50+ Broken Kubernetes Clusters — David Flanagan 2.1.4 - YouTube]]
- [[https://alesnosek.com/blog/2017/02/14/accessing-kubernetes-pods-from-outside-of-the-cluster/][Accessing Kubernetes Pods from Outside of the Cluster - Ales Nosek - The Software Practitioner]]
- [[https://opensource.com/article/19/6/introduction-kubernetes-secrets-and-configmaps][An Introduction to Kubernetes Secrets and ConfigMaps | Opensource.com]]
- [[https://scribe.bus-hit.me/m/global-identity?redirectUrl=https%3A%2F%2Fitnext.io%2Fbreaking-down-and-fixing-kubernetes-4df2f22f87c3][Breaking down and fixing Kubernetes]]
- [[https://polarsquad.com/blog/check-your-kubernetes-deployments][Check your Kubernetes deployments! — Polar Squad]]
- [[https://habr.com/ru/company/flant/blog/329830/][Container Networking Interface (CNI) — сетевой интерфейс и стандарт для Linux-контейнеров / Хабр]]
- [[https://github.com/container-storage-interface/spec][container-storage-interface/spec: Container Storage Interface (CSI) Specification.]]
- [[https://stackoverflow.com/questions/43189487/create-kubernetes-nginx-ingress-without-gcp-load-balancer][Create kubernetes nginx ingress without GCP load-balancer - Stack Overflow]]
- [[https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/][Creating a cluster with kubeadm | Kubernetes]]
- [[https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/high-availability/][Creating Highly Available Clusters with kubeadm | Kubernetes]]
- [[https://media.defense.gov/2022/Aug/29/2003066362/-1/-1/0/CTR_KUBERNETES_HARDENING_GUIDANCE_1.2_20220829.PDF][CTR_KUBERNETES_HARDENING_GUIDANCE_1.2_20220829.PDF]]
- [[https://kubernetes.io/docs/tasks/debug/debug-cluster/crictl/][Debugging Kubernetes nodes with crictl | Kubernetes]]
- [[https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/#ephemeral-container][Debug Running Pods | Kubernetes]]
- [[https://github.com/defo89/kubernetes-the-hard-way-lab][defo89/kubernetes-the-hard-way-lab: Kubernetes The Hard Way in Lab (on VMware ESXi)]]
- [[https://github.com/diegolnasc/kubernetes-best-practices][diegolnasc/kubernetes-best-practices: A cookbook with the best practices to working with kubernetes.]]
- [[https://engineering.empathy.co/distributed-load-testing-with-k6/][Distributed Load Testing with K6]]
- [[https://github.com/eon01/kubernetes-workshop][eon01/kubernetes-workshop: A Gentle introduction to Kubernetes with more than just the basics. Give it a star if you like it.]]
- [[https://github.com/eranyanay/cni-from-scratch][eranyanay/cni-from-scratch: Kubernetes networking: CNI plugin from scratch, in bash]]
- [[https://github.com/erebe/personal-server][erebe/personal-server: Personal server configuration with k3s]]
- [[https://blog.container-solutions.com/fluxcd-argocd-jenkins-x-gitops-tools][FluxCD, ArgoCD or Jenkins X: Which Is the Right GitOps Tool for You?]]
- [[https://agones.dev/site/docs/faq/#how-is-traffic-routed-from-the-allocated-port-to-the-gameserver-container][Frequently Asked Questions | Agones]]
- [[https://scribe.citizen4.eu/m/global-identity?redirectUrl=https%3A%2F%2Fitnext.io%2Fgitopsify-cloud-infrastructure-with-crossplane-and-flux-d605d3043452][GitOpsify Cloud Infrastructure with Crossplane and Flux]]
- [[https://kubernetes.io/docs/reference/glossary/?fundamental=true][Glossary | Kubernetes]]
- [[https://github.com/golang-design/under-the-hood][golang-design/under-the-hood: 📚 Go: Under The Hood | https://golang.design/under-the-hood]]
- [[https://stackoverflow.com/questions/53545732/how-do-i-access-a-private-docker-registry-with-a-self-signed-certificate-using-k][How do I access a private Docker registry with a self signed certificate using Kubernetes? - Stack Overflow]]
- [[https://jvns.ca/blog/2017/08/05/how-kubernetes-certificates-work/][How Kubernetes certificate authorities work]]
- [[https://opensource.com/article/19/11/how-contribute-kubernetes][How to contribute to Kubernetes if you have a full-time job | Opensource.com]]
- [[https://dockerlabs.collabnix.com/kubernetes/beginners/Install-and-configure-a-multi-master-Kubernetes-cluster-with-kubeadm.html][Install and configure a multi-master Kubernetes cluster with kubeadm | dockerlabs]]
- [[https://kubernetes.io/docs/concepts/cluster-administration/addons/][Installing Addons | Kubernetes]]
- [[https://github.com/kelseyhightower/kubernetes-the-hard-way][kelseyhightower/kubernetes-the-hard-way: Bootstrap Kubernetes the hard way on Google Cloud Platform. No scripts.]]
- [[https://github.com/kodekloudhub/certified-kubernetes-administrator-course][kodekloudhub/certified-kubernetes-administrator-course: Certified Kubernetes Administrator - CKA Course]]
- [[https://github.com/kubernetes/kubeadm/blob/main/docs/ha-considerations.md#options-for-software-load-balancing][kubeadm/ha-considerations.md at main · kubernetes/kubeadm]]
- [[https://iximiuz.com/en/posts/kubernetes-api-structure-and-terminology/][Kubernetes API Basics - Resources, Kinds, and Objects]]
- [[https://wiki.archlinux.org/title/Kubernetes][Kubernetes - ArchWiki]]
- [[https://www.youtube.com/watch?v=K3jNo4z5Jx8][Kubernetes Namespaces Explained in 15 mins | Kubernetes Tutorial 21]]
  : kubectl api-resources --namespaced=true
- [[https://rtfm.co.ua/kubernetes-znakomstvo-chast-1-arxitektura-i-osnovnye-komponenty-obzor/][Kubernetes: знакомство, часть 1 – архитектура и основные компоненты, обзор]]
- [[https://habr.com/ru/company/southbridge/blog/334846/][Kubernetes на голом железе за 10 минут / Хабр]]
- [[https://www.youtube.com/watch?v=Z9hBIoO4KOs][KubeVirt deep dive - YouTube]]
  - [[https://github.com/davidvossel/kubevirt-demo-manifests][davidvossel/kubevirt-demo-manifests]]
- [[https://scribe.citizen4.eu/kubernetes-tutorials/learn-how-to-assign-pods-to-nodes-in-kubernetes-using-nodeselector-and-affinity-features-e62c437f3cf8][Learn How to Assign Pods to Nodes in Kubernetes Using nodeSelector and Affinity Features]]
- [[https://learnk8s.io/rbac-kubernetes][Limiting access to Kubernetes resources with RBAC]]
- [[https://github.com/magnologan/awesome-k8s-security][magnologan/awesome-k8s-security: A curated list for Awesome Kubernetes Security resources]]
- [[https://www.starkandwayne.com/blog/managing-your-kubernetes-cluster-with-daemonsets/][Managing Your k8s Cluster via DaemonSets - Stark & Wayne]]
- [[https://kubernetes.io/docs/reference/tools/map-crictl-dockercli/][Mapping from dockercli to crictl | Kubernetes]]
- [[https://scribe.citizen4.eu/aspecto/opentelemetry-operator-for-kubernetes-practical-guide-part-4-1d8d86eb2bb][OpenTelemetry Operator for Kubernetes: Practical Guide | Part 4]]
- [[http://ceur-ws.org/Vol-2839/paper11.pdf][paper11.pdf]]
- Pin pod to specific node:
  - Affinity
  - Toleration
  - Taint
- [[https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/][Pod Lifecycle | Kubernetes]]
- Port forwarding
  - =kubectl port-forward my-deployment-xxxxxxxxxx-xxxxx 8005:80 &=
- [[https://github.com/rootsongjc/kubernetes-handbook][rootsongjc/kubernetes-handbook: Kubernetes中文指南/云原生应用架构实战手册 - https://jimmysong.io/kubernetes-handbook]]
- [[https://github.com/run-x/awesome-kubernetes][run-x/awesome-kubernetes: A curated list for awesome kubernetes projects, tools and resources.]]
- [[https://kubernetes.io/docs/concepts/scheduling-eviction/_print/][Scheduling, Preemption and Eviction | Kubernetes]]
- [[https://devopstales.github.io/kubernetes/k8s-metallb-bgp-pfsense/][Self-hosted Load Balancer for bare metal Kubernetes - devopstales]]
- [[https://kubernetes.io/docs/tasks/administer-cluster/kubelet-config-file/][Set Kubelet parameters via a config file | Kubernetes]]
- [[https://gabrieltanner.org/blog/ha-kubernetes-cluster-using-k3s/][Setting up a HA Kubernetes cluster using K3S]]
- [[https://medium.com/@sven_50828/setting-up-a-high-availability-kubernetes-cluster-with-multiple-masters-31eec45701a2][Setting up a high-availability Kubernetes cluster with multiple masters | by Sven Hakvoort | Medium]]
- Show documentation
  - =kubectl explain deployment=
  - =kubectl explain deployment.spec=
- [[https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/][Taints and Tolerations | Kubernetes]]
- [[https://github.com/techiescamp/kubernetes-learning-path][techiescamp/kubernetes-learning-path: A roadmap to learn Kubernetes from scratch (Beginner to Advanced level)]]
- [[https://habr.com/ru/company/nixys/blog/649663/][Terraform модуль для создания RBAC-правил / Хабр]]
- [[https://www.freecodecamp.org/news/the-kubernetes-handbook/][The Kubernetes Handbook – Learn Kubernetes for Beginners]]
- [[https://kubernetes.io/docs/tasks/debug/debug-cluster/][Troubleshooting Clusters | Kubernetes]]
- [[https://www.alibabacloud.com/help/en/container-service-for-kubernetes/latest/use-the-host-network][Use the host network]]
  #+begin_src yaml
    apiVersion: v1
    kind: Pod
    metadata:
      name: nginx
    spec:
      hostNetwork: true
      containers:
      - name: nginx
        image: nginx
  #+end_src
- [[https://github.com/Vinum-Security/kubernetes-security-checklist][Vinum-Security/kubernetes-security-checklist: Kubernetes Security Checklist and Requirements - All in One (authentication, authorization, logging, secrets, configuration, network, workloads, dockerfile)]]
- [[https://github.com/walidshaari/Certified-Kubernetes-Security-Specialist][walidshaari/Certified-Kubernetes-Security-Specialist: Curated resources help you prepare for the CNCF/Linux Foundation CKS 2021 "Kubernetes Certified Security Specialist" Certification exam. Please provide feedback or requests by raising issues, or making a pull request. All feedback for improvements are welcome. thank you.]]
- [[https://www.techtarget.com/searchitoperations/tip/When-to-use-Kubernetes-operators-vs-Helm-charts][When to use Kubernetes operators vs. Helm charts]]
- [[https://scribe.citizen4.eu/@senthilrch/woot-kubernetes-adds-support-for-swap-memory-92541aad01a0][Woot…Kubernetes Adds Support for Swap Memory]]
- [[https://github.com/wrmilling/k3s-gitops][wrmilling/k3s-gitops: GitOps principles to define kubernetes cluster state via code]]
- [[https://habr.com/ru/company/qiwi/blog/585392/][Безопасность Kubernetes — это просто / Хабр]]
- [[https://habr.com/ru/company/nixys/blog/658985/][Введение в k3s: познакомимся с младшим братом k8s / Хабр]]
- [[https://habr.com/ru/company/flant/blog/420813/][За кулисами сети в Kubernetes / Хабр]]
- [[https://habr.com/ru/post/657641/][Как Kubernetes создает и запускает контейнеры: Иллюстрированное руководство / Хабр]]
- [[https://habr.com/ru/company/flant/blog/521406/][Как pod в Kubernetes получает IP-адрес / Хабр]]
- [[https://serveradmin.ru/kubernetes-ingress/][Настройка Ingress controller в Kubernetes — Server Admin]]
- [[https://habr.com/ru/company/nixys/blog/652925/][О границах масштабируемости Kubernetes / Хабр]]
- [[https://habr.com/ru/company/nixys/blog/664660/][Ошибочные шаблоны при построении образов контейнеров / Хабр]]
- [[https://habr.com/ru/company/netologyru/blog/580902/][Планирование подов для узлов Kubernetes: развёрнутое руководство / Хабр]]
- [[https://dotsandbrackets.com/kubernetes-example-ru/][Разбираем Kubernetes пример - Dots and Brackets]]
- [[http://itisgood.ru/2019/11/18/raspredelennoe-hranenie-dannyh-v-kubernetes/][☸️ Распределенное хранение данных в Kubernetes — IT is good]]
- [[https://habr.com/ru/post/673730/][Сертификаты K8S или как распутать вермишель Часть 1 / Хабр]]
- [[https://habr.com/ru/company/otus/blog/653973/][Тестирование сетевых политик с помощью Minikube / Хабр]]
- [[https://habr.com/ru/company/nixys/blog/657359/][Универсальный Helm-чарт для ваших приложений / Хабр]]
- [[https://serveradmin.ru/kubernetes-ustanovka/][Установка кластера Kubernetes | serveradmin.ru]]

** [[https://discuss.kubernetes.io/t/high-availability-host-numbers/13143][High Availability Host Numbers - General Discussions - Discuss Kubernetes]]
K8s uses the RAFT consensus algorithm for quorum. In order to maintain quorum, you will need floor(n/2)+1 healthy master nodes.

Practicaly this means:

    1 master node: you will require 1 healthy master node for quorum, the loss of the master node will render the cluster headless.
    2 master nodes: you will require 2 healthy master nodes for quorum, the loss of either master node will render the cluster headless.
    3 master nodes: you will require 2 healty master nodes for quorum, the loss of one of the master nodes can be compensated.
    4 master nodes: you will require 3 healty master nodes for quorum, the loss of one on the master nodes can be compensated. A setup with 4 master nodes has no advantage over a 3 master nodes setup.
    5 master nodes: you will require 3 healthy master nodes for quorum, the loss of up to two master nodes can be compsensated.
    6 master nodes: you will require 4 healty master nodes for quorum, the loss of up to two master nodes can be compensated. No advantage compared to 5 master nodes.
    7 master nodes: you will require 4 healthy master nodes for quorum, the loss of up to three master nodes can be compsensated.

This is the reason why it is recommended to use an odd number of master nodes for the control plane. More then 7 master nodes will result in a overhead for determining cluster membership and quorum, it is not recommended. Depending on your needs, you typically end up with 3 or 5 master nodes.

* Misc
- [[https://github.com/aquasecurity/kube-bench][aquasecurity/kube-bench: Checks whether Kubernetes is deployed according to security best practices as defined in the CIS Kubernetes Benchmark]]
- [[https://github.com/kubevirt/kubevirt][kubevirt/kubevirt: Kubernetes Virtualization API and runtime in order to define and manage virtual machines.]]
- [[https://github.com/kubernetes-sigs/kind][kubernetes-sigs/kind: Kubernetes IN Docker - local clusters for testing Kubernetes]]
- [[https://github.com/criticalstack/quake-kube][quake-kube Quake 3 on Kubernetes]]
- [[https://github.com/oneinfra/oneinfra][oneinfra/oneinfra: Kubernetes as a Service]]
- [[https://github.com/hjacobs/kubernetes-failure-stories][hjacobs/kubernetes-failure-stories: Compilation of public failure/horror stories related to Kubernetes]]
- [[https://github.com/kubernetes/kops][kubernetes/kops: Kubernetes Operations (kops) - Production Grade K8s Installation, Upgrades, and Management]]
- [[https://github.com/argoproj/argo-cd/][argoproj/argo-cd: Declarative continuous deployment for Kubernetes.]]
- [[https://fluxcd.io/][Flux]]
- [[https://github.com/criticalstack/quake-kube][criticalstack/quake-kube: Quake 3 on Kubernetes]]
- [[https://github.com/flyteorg/flyte][flyteorg/flyte: Kubernetes-native workflow automation platform for complex, mission-critical data and ML processes at scale. It has been battle-tested at Lyft, Spotify, Freenome, and others and is truly open-source.]]
- [[https://github.com/storax/kubedoom][storax/kubedoom: Kill Kubernetes pods by playing Id's DOOM!]]
- [[https://opensource.com/article/21/6/kube-doom][Play Doom on Kubernetes | Opensource.com]]

* Monitoring
- [[https://habr.com/ru/post/586206/][Kubernetes monitoring от простого к сложному (Николай Храмчихин) / Хабр]]

* Networking

: $ kubectl describe node | grep '^Name\|PodCIDR'
#+begin_example
  Name:               kube1
  PodCIDR:                      10.1.0.0/24
  PodCIDRs:                     10.1.0.0/24
  ...
  Name:               kube7
  PodCIDR:                      10.1.6.0/24
  PodCIDRs:                     10.1.6.0/24
#+end_example

* Operators
- [[https://operatorhub.io/][OperatorHub.io | The registry for Kubernetes Operators]]
- [[https://github.com/flant/shell-operator][flant/shell-operator: Shell-operator is a tool for running event-driven scripts in a Kubernetes cluster]]
- [[https://habr.com/ru/company/southbridge/blog/556860/][Пишем оператор Kubernetes с нуля / Хабр]]

* pv
** dynamic
- [[https://github.com/rancher/local-path-provisioner][rancher/local-path-provisioner: Dynamically provisioning persistent local storage with Kubernetes]]
#+begin_example
  $ kubectl create -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.22/deploy/local-path-storage.yaml
  namespace/local-path-storage created
  serviceaccount/local-path-provisioner-service-account created
  clusterrole.rbac.authorization.k8s.io/local-path-provisioner-role created
  clusterrolebinding.rbac.authorization.k8s.io/local-path-provisioner-bind created
  deployment.apps/local-path-provisioner created
  storageclass.storage.k8s.io/local-path created
  configmap/local-path-config created
#+end_example

#+begin_example
  $ kubectl delete -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.22/deploy/local-path-storage.yaml
  namespace "local-path-storage" deleted
  serviceaccount "local-path-provisioner-service-account" deleted
  clusterrole.rbac.authorization.k8s.io "local-path-provisioner-role" deleted
  clusterrolebinding.rbac.authorization.k8s.io "local-path-provisioner-bind" deleted
  deployment.apps "local-path-provisioner" deleted
  storageclass.storage.k8s.io "local-path" deleted
  configmap "local-path-config" deleted
#+end_example

* Storage
- [[https://vitobotta.com/2020/01/04/linstor-storage-the-kubernetes-way/][Linstor storage for Kubernetes, the Kubernetes way]]
- [[https://github.com/piraeusdatastore/piraeus][piraeusdatastore/piraeus: High Available Datastore for Kubernetes]]
- [[https://temofeev.ru/info/articles/sostoyanie-i-proizvoditelnost-resheniy-dlya-postoyannogo-khraneniya-dannykh-v-kubernetes/][Состояние и производительность решений для постоянного хранения данных в Kubernetes]]

* Tools
- [[https://habr.com/ru/company/southbridge/blog/523358/][11 инструментов, делающих Kubernetes лучше / Блог компании Southbridge / Хабр]]
- [[https://habr.com/ru/company/southbridge/blog/523790/][12 инструментов, делающих Kubernetes легче / Блог компании Southbridge / Хабр]]
- [[https://www.youtube.com/watch?v=CB79eTFbR0w][(2) 10 Must-Have Kubernetes Tools - YouTube]]
- [[https://www.youtube.com/c/%D0%90%D1%80%D1%82%D1%83%D1%80%D0%9A%D1%80%D1%8E%D0%BA%D0%BE%D0%B2/videos][(63) Артур Крюков - YouTube]]
- [[https://github.com/abahmed/kwatch][abahmed/kwatch: monitor & detect crashes in your Kubernetes(K8s) cluster instantly]]
- [[https://github.com/ahmetb/kubectl-tree][ahmetb/kubectl-tree: kubectl plugin to browse Kubernetes object hierarchies as a tree]]
- [[https://github.com/airwallex/k8s-pod-restart-info-collector][airwallex/k8s-pod-restart-info-collector: Automated troubleshooting of Kubernetes Pods issues. Collect K8s pod restart reasons, logs, and events automatically.]]
- [[https://github.com/alexellis/arkade][alexellis/arkade: Your one-stop CLI for Kubernetes]]
- [[https://github.com/alexellis/k3sup][alexellis/k3sup: bootstrap Kubernetes with k3s over SSH < 1 min]]
- [[https://github.com/alexellis/run-job][alexellis/run-job: Run a Kubernetes Job and get the logs when it's done 🏃‍♂️]]
- [[https://github.com/alibaba/open-local][alibaba/open-local: cloud-native local storage management system]]
- [[https://blog.flant.com/announcing-shell-operator-to-simplify-creating-of-kubernetes-operators/][Announcing shell-operator to simplify creating of Kubernetes operators – Flant blog]]
  - [[https://github.com/flant/shell-operator][flant/shell-operator: Shell-operator is a tool for running event-driven scripts in a Kubernetes cluster]]
- [[https://github.com/aquasecurity/starboard][aquasecurity/starboard: Kubernetes-native security toolkit]]
- [[https://github.com/ArctarusLimited/Fractal][ArctarusLimited/Fractal: Zero-compromise Kubernetes resource generation with Nix, Jsonnet and Kustomize. Planned Helm support.]]
- [[https://github.com/armosec/kubescape][armosec/kubescape: kubescape is the first tool for testing if Kubernetes is deployed securely as defined in Kubernetes Hardening Guidance by to NSA and CISA (https://www.nsa.gov/News-Features/Feature-Stories/Article-View/Article/2716980/nsa-cisa-release-kubernetes-hardening-guidance/)]]
- [[https://github.com/arnehilmann/k8s-auto-updater][arnehilmann/k8s-auto-updater: auto-update your cluster: sync your docker images and restart pods running on outdated images]]
- [[https://github.com/aws/karpenter][aws/karpenter: Kubernetes Node Autoscaling: built for flexibility, performance, and simplicity.]]
- [[https://github.com/bitnami-labs/healthcheck-tools][bitnami-labs/healthcheck-tools: Set of Go tools to check different elements of your stack (SSL, SMTP, Permissions...)]]
- [[https://github.com/bitnami-labs/sealed-secrets][bitnami-labs/sealed-secrets: A Kubernetes controller and tool for one-way encrypted Secrets]]
- [[https://github.com/box/kube-iptables-tailer][box/kube-iptables-tailer: A service for better network visibility for your Kubernetes clusters.]]
- [[https://www.heroku.com/careers/builds-pipeline-services-software-engineer-186][Builds & Pipeline Services Software Engineer | Heroku]]
  - [[https://github.com/opencontainers/image-spec][opencontainers/image-spec: OCI Image Format]]
  - [[https://github.com/knative][Knative - Kubernetes-based platform to build, deploy, and manage modern serverless workloads]]
    - [[https://github.com/cppforlife/knctl][cppforlife/knctl: Knative CLI]]
    - [[https://habr.com/ru/company/southbridge/blog/475630/][Knative — платформа как услуга на основе k8s с поддержкой serverless / Хабр]]
  - [[https://github.com/tektoncd/pipeline][tektoncd/pipeline: A cloud-native Pipeline resource.]]
  - [[https://buildpacks.io/][Cloud Native Buildpacks · Cloud Native Buildpacks]]
- [[https://habr.com/ru/company/flant/blog/485716/][Calico для сети в Kubernetes: знакомство и немного из опыта / Хабр]]
- [[https://github.com/carina-io/carina][carina-io/carina: Carina: an high performance and ops-free local storage for kubernetes]]
- [[https://github.com/c-bata/kube-prompt][c-bata/kube-prompt: An interactive kubernetes client featuring auto-complete.]]
- [[https://github.com/cdk8s-team/cdk8s][cdk8s-team/cdk8s: Define Kubernetes native apps and abstractions using object-oriented programming]]
- [[https://github.com/cdk-team/CDK][cdk-team/CDK: 📦 Make security testing of K8s, Docker, and Containerd easier.]]
- [[https://cello-proj.github.io/cello/][Cello - The engine for cloud deployments]]
- [[https://github.com/chenjiandongx/kubectl-images][chenjiandongx/kubectl-images: Show container images used in the cluster.]]
- [[https://github.com/cilium/hubble][cilium/hubble: Hubble - Network, Service & Security Observability for Kubernetes using eBPF]]
- [[https://github.com/cloudnativelabs/kube-router][cloudnativelabs/kube-router: Kube-router, a turnkey solution for Kubernetes networking.]]
- [[https://landscape.cncf.io/][Cloud Native Landscape]]
- [[https://github.com/cloud-native-skunkworks/ubuntu-operator][cloud-native-skunkworks/ubuntu-operator: Control Ubuntu from Kubernetes.]]
- [[https://github.com/clusternet/clusternet][clusternet/clusternet: Managing your Kubernetes clusters (including public, private, edge, etc) as easily as visiting the Internet ⎈]]
- [[https://github.com/containerd/stargz-snapshotter][containerd/stargz-snapshotter: Fast container image distribution plugin with lazy pulling]]
- [[https://github.com/ContainerSolutions/kubernetes-examples][ContainerSolutions/kubernetes-examples: Minimal self-contained examples of standard Kubernetes features and patterns in YAML]]
- [[https://github.com/containers/podman-desktop][containers/podman-desktop: Podman Desktop - A graphical tool for developing on containers and Kubernetes]]
- [[https://github.com/corneliusweig/rakkess][corneliusweig/rakkess: Review Access - kubectl plugin to show an access matrix for k8s server resources]]
- [[https://github.com/darkbitio/k8s-mirror][darkbitio/k8s-mirror: Creates a local mirror of a Kubernetes cluster in a docker container to support offline reviewing]]
- [[https://github.com/datreeio/datree][datreeio/datree: Prevent Kubernetes misconfigurations from reaching production (again 😤 )! The CLI integration provides a policy enforcement solution to run automatic checks for rule violations. See our docs: https://hub.datree.io]]
- [[https://github.com/deislabs/krustlet][deislabs/krustlet: Kubernetes Rust Kubelet]]
- [[https://github.com/derailed/k9s][derailed/k9s: 🐶 Kubernetes CLI To Manage Your Clusters In Style!]]
- [[https://github.com/derailed/popeye][derailed/popeye: 👀 A Kubernetes cluster resource sanitizer]]
- [[https://github.com/devspace-cloud/devspace][devspace-cloud/devspace: DevSpace - The Fastest Developer Tool for Kubernetes ⚡ Automate your deployment workflow with DevSpace and develop software directly inside Kubernetes.]]
- [[https://github.com/dty1er/kubecolor][dty1er/kubecolor: colorizes kubectl output]]
- [[https://github.com/eldadru/ksniff][eldadru/ksniff: Kubectl plugin to ease sniffing on kubernetes pods using tcpdump and wireshark]]
- [[https://github.com/external-secrets/external-secrets][external-secrets/external-secrets: External Secrets Operator reads information from a third-party service like AWS Secrets Manager and automatically injects the values as Kubernetes Secrets.]]
- [[https://github.com/FairwindsOps/polaris][FairwindsOps/polaris: Validation of best practices in your Kubernetes clusters]]
- [[https://github.com/fluxcd/flagger][fluxcd/flagger: Progressive delivery Kubernetes operator (Canary, A/B Testing and Blue/Green deployments)]]
- [[https://github.com/fluxcd/flux2][fluxcd/flux2: Open and extensible continuous delivery solution for Kubernetes. Powered by GitOps Toolkit.]]
- [[https://github.com/furiko-io/furiko][furiko-io/furiko: Cloud-native, enterprise-level cron job platform for Kubernetes]]
- [[https://github.com/gatblau/onix][gatblau/onix: A reactive configuration manager designed to support Infrastructure as a Code provisioning, and bi-directional configuration management providing a single source of truth across multi-cloud environments.]]
- [[https://github.com/giantswarm/kvm-operator][giantswarm/kvm-operator: Handles Kubernetes clusters running on a Kubernetes cluster with workers and masters in KVMs on bare metal]]
- [[https://werf.io/][Giterministic CLI tool | werf]]
- [[https://github.com/GoogleContainerTools/kaniko][GoogleContainerTools/kaniko: Build Container Images In Kubernetes]]
- [[https://github.com/GoogleContainerTools/kpt][GoogleContainerTools/kpt: A package-centric toolchain that enables a WYSIWYG configuration authoring, automation, and delivery experience, which simplifies managing Kubernetes platforms and KRM-driven infrastructure at scale by manipulating declarative Configuration as Data, separated from the code that transforms it.]]
- [[https://github.com/GoogleContainerTools/skaffold][GoogleContainerTools/skaffold: Easy and Repeatable Kubernetes Development]]
- [[https://github.com/GoogleContainerTools/skaffold][GoogleContainerTools/skaffold: Easy and Repeatable Kubernetes Development]]
- [[https://github.com/google/ko][google/ko: Build and deploy Go applications on Kubernetes]]
- [[https://github.com/hall/kubenix][hall/kubenix: Kubernetes management with Nix]]
- [[https://goharbor.io/][Harbor cloud native repository for Kubernetes]]
- [[https://habr.com/ru/post/575646/][Helmwave v0.12.8 / Хабр]]
  - [[https://github.com/helmwave/helmwave][helmwave/helmwave: 🌊 Helmwave is like docker-compose for @helm]]
- [[https://github.com/inercia/k3x][inercia/k3x: A UI for local Kubernetes clusters created with k3d]]
- [[https://github.com/infracloudio/botkube][infracloudio/botkube: An app that helps you monitor your Kubernetes cluster, debug critical deployments & gives recommendations for standard practices]]
- [[https://github.com/instrumenta/kubeval/][instrumenta/kubeval: Validate your Kubernetes configuration files, supports multiple Kubernetes versions]]
- [[https://www.youtube.com/watch?v=KIIkVD7gujY][Introducing Metal³: Kubernetes Native Bare Metal Host Management - Russell Bryant & Doug Hellmann - YouTube]]
- [[https://www.suse.com/c/introduction-k3d-run-k3s-docker-src/][Introduction to k3d: Run K3s in Docker | SUSE Communities]]
- [[https://github.com/istio/istio][istio/istio: Connect, secure, control, and observe services.]]
- [[https://github.com/itzg/kube-metrics-exporter][itzg/kube-metrics-exporter: Simple application that accesses the Kubernetes metrics API and exports the pod metrics for Prometheus scraping]]
- [[https://github.com/jaegertracing/jaeger][jaegertracing/jaeger: CNCF Jaeger, a Distributed Tracing Platform]]
- [[https://github.com/jcmoraisjr/haproxy-ingress][jcmoraisjr/haproxy-ingress: HAProxy Ingress]]
- [[https://github.com/jenkinsci/kubernetes-operator][jenkinsci/kubernetes-operator: Kubernetes native Jenkins Operator]]
- [[https://github.com/jeremykross/konstellate][jeremykross/konstellate: Free and Open Source GUI to Visualize Kubernetes Applications.]]
- [[https://github.com/johanhaleby/kubetail][johanhaleby/kubetail: Bash script to tail Kubernetes logs from multiple pods at the same time]]
- [[https://github.com/k0sproject/k0s][k0sproject/k0s: k0s - Zero Friction Kubernetes]]
- [[https://github.com/k3d-io/k3d][k3d-io/k3d: Little helper to run CNCF's k3s in Docker]]
- [[https://github.com/k3s-io/kine][k3s-io/kine: Run Kubernetes on MySQL, Postgres, sqlite, dqlite, not etcd.]]
- [[https://k3s.io/][K3s: Lightweight Kubernetes]]
- [[https://github.com/k8s-at-home/charts][k8s-at-home/charts: Helm charts for applications you run at home]]
- [[https://github.com/k8snetworkplumbingwg/multus-cni][k8snetworkplumbingwg/multus-cni: A CNI meta-plugin for multi-homed pods in Kubernetes]]
- [[https://github.com/kdash-rs/kdash][kdash-rs/kdash: A simple and fast dashboard for Kubernetes]]
- [[https://github.com/kedacore/keda][kedacore/keda: KEDA is a Kubernetes-based Event Driven Autoscaling component. It provides event driven scale for any container running in Kubernetes]]
- [[https://github.com/kei6u/kubectl-explore][kei6u/kubectl-explore: A better kubectl explain with the fuzzy finder]]
- [[https://github.com/konveyor/move2kube][konveyor/move2kube: Move2Kube is a command-line tool for automating creation of Infrastructure as code (IaC) artifacts. It has inbuilt support for creating IaC artifacts for replatforming to Kubernetes/Openshift.]]
- [[https://github.com/kris-nova/naml][kris-nova/naml: Not another markup language. Framework for replacing Kubernetes YAML with Go.]]
- [[https://github.com/ksync/ksync][ksync/ksync: Sync files between your local system and a kubernetes cluster.]]
- [[https://github.com/kubecfg/kubecfg][kubecfg/kubecfg: A tool for managing complex enterprise Kubernetes environments as code.]]
- [[https://github.com/kubecolor/kubecolor][kubecolor/kubecolor: Colorize your kubectl output]]
- [[https://github.com/kubenav/kubenav][kubenav/kubenav: kubenav is the navigator for your Kubernetes clusters right in your pocket.]]
- [[https://github.com/kubeovn/kube-ovn][kubeovn/kube-ovn: A Kubernetes Network Fabric for Enterprises that is Rich in Functions and Easy in Operations (Project under CNCF)]]
- [[https://kompose.io/][Kubernetes + Compose = Kompose]]
- [[https://www.synacktiv.com/en/publications/kubernetes-namespaces-isolation-what-it-is-what-it-isnt-life-universe-and-everything.html][Kubernetes namespaces isolation - what it is, what it isn't, life,]]
- [[https://github.com/kubernetes/node-problem-detector][kubernetes/node-problem-detector: This is a place for various problem detectors running on the Kubernetes nodes.]]
- [[https://github.com/kubernetes-sigs/cluster-api][kubernetes-sigs/cluster-api: Home for Cluster API, a subproject of sig-cluster-lifecycle]]
- [[https://github.com/kubernetes-sigs/cluster-api][kubernetes-sigs/cluster-api: Home for Cluster API, a subproject of sig-cluster-lifecycle]]
- [[https://github.com/kubernetes-sigs/cluster-api-provider-kubevirt][kubernetes-sigs/cluster-api-provider-kubevirt: Cluster API Provider for KubeVirt]]
- [[https://github.com/kubernetes-sigs/descheduler][kubernetes-sigs/descheduler: Descheduler for Kubernetes]]
- [[https://github.com/kubernetes-sigs/kubefed][kubernetes-sigs/kubefed: Kubernetes Cluster Federation]]
- [[https://github.com/kubernetes-sigs/kube-scheduler-simulator][kubernetes-sigs/kube-scheduler-simulator: A web-based simulator for the Kubernetes scheduler]]
- [[https://github.com/kubernetes-sigs/kui][kubernetes-sigs/kui: A hybrid command-line/UI development experience for cloud-native development]]
- [[https://github.com/kubernetes-sigs/kustomize][kubernetes-sigs/kustomize: Customization of kubernetes YAML configurations]]
- [[https://github.com/kubernetes-sigs/kwok][kubernetes-sigs/kwok: Simulate thousands of fake kubelets, on a laptop with minimum resource footprint.]]
- [[https://github.com/kubernetes-sigs/metrics-server][kubernetes-sigs/metrics-server: Scalable and efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.]]
- [[https://github.com/kubevious/kubevious][kubevious/kubevious: Kubevious - application centric Kubernetes UI and continuous assurance provider]]
- [[https://github.com/kube-vip/kube-vip][kube-vip/kube-vip: Kubernetes Control Plane Virtual IP and Load-Balancer]]
- [[https://kubevirt.io/][KubeVirt.io Building a virtualization API for Kubernetes]]
- [[https://www.cncf.io/blog/2022/07/11/kubevirt-kube-ovn-networking-for-cloud-native-virtualization/][KubeVirt + Kube-OVN: Networking for cloud native virtualization | Cloud Native Computing Foundation]]
- [[https://github.com/kumahq/kuma][kumahq/kuma: 🐻 The multi-zone service mesh for containers, Kubernetes and VMs. Built with Envoy. CNCF Sandbox Project.]]
- [[https://github.com/kvaps/kubectl-build][kvaps/kubectl-build: Build dockerfiles directly in your Kubernetes cluster.]]
- [[https://github.com/kyverno/kyverno][kyverno/kyverno: Kubernetes Native Policy Management]]
- [[https://github.com/Ladicle/kubectl-rolesum][Ladicle/kubectl-rolesum: Summarize Kubernetes RBAC roles for the specified subjects.]]
- [[https://github.com/lastbackend/lastbackend][lastbackend/lastbackend: System for containerized apps management. From build to scaling.]]
- [[https://github.com/lensapp/lens][lensapp/lens: Lens - The Kubernetes IDE]]
- [[https://github.com/lightrun-platform/koolkits][lightrun-platform/koolkits: 🧰 Opinionated, language-specific, batteries-included debug container images for Kubernetes.]]
- [[https://github.com/LINBIT/linstor-server][LINBIT/linstor-server: High Performance Software-Defined Block Storage for container, cloud and virtualisation. Fully integrated with Docker, Kubernetes, Openstack, Proxmox etc.]]
- local development
  - Telepresence
  - garden.io
  - tilt.dev
  - okteto.com
  - devspace
  - skaffold
- [[https://github.com/loft-sh/vcluster][loft-sh/vcluster: vcluster - Create fully functional virtual Kubernetes clusters - Each vcluster runs inside a namespace of the underlying k8s cluster. It's cheaper than creating separate full-blown clusters and it offers better multi-tenancy and isolation than regular namespaces.]]
- [[https://github.com/loft-sh/vcluster][loft-sh/vcluster: vcluster - Create fully functional virtual Kubernetes clusters - Each vcluster runs inside a namespace of the underlying k8s cluster. It's cheaper than creating separate full-blown clusters and it offers better multi-tenancy and isolation than regular namespaces.]]
- [[https://longhorn.io/][Longhorn - Cloud native distributed block storage for Kubernetes]]
- [[https://github.com/longhorn/longhorn][longhorn/longhorn: Cloud-Native distributed storage built on and for Kubernetes]]
- [[https://github.com/madhuakula/kubernetes-goat][madhuakula/kubernetes-goat: Kubernetes Goat is a "Vulnerable by Design" cluster environment to learn and practice Kubernetes security using an interactive hands-on playground 🚀]]
- [[https://github.com/metallb/metallb][metallb/metallb: A network load-balancer implementation for Kubernetes using standard routing protocols]]
- [[https://opensource.com/article/22/5/migrating-databases-kubernetes-using-konveyor][Migrate databases to Kubernetes using Konveyor | Opensource.com]]
  - [[https://github.com/konveyor/tackle-diva][konveyor/tackle-diva: Tackle Data-intensive Validity Analyzer]]
- [[https://opensource.com/article/21/6/migrate-vms-kubernetes-forklift][Migrate virtual machines to Kubernetes with this new tool | Opensource.com]]
- [[https://github.com/nmstate/kubernetes-nmstate][nmstate/kubernetes-nmstate: Declarative node network configuration driven through Kubernetes API.]]
- [[https://github.com/octarinesec/kube-scan][octarinesec/kube-scan: kube-scan: Octarine k8s cluster risk assessment tool]]
- [[https://github.com/okteto/okteto][okteto/okteto: Develop your applications directly in your Kubernetes Cluster]]
- [[https://github.com/omrikiei/ktunnel][omrikiei/ktunnel: A cli that exposes your local resources to kubernetes]]
- [[https://github.com/openebs/openebs][openebs/openebs: Leading Open Source Container Attached Storage, built using Cloud Native Architecture, simplifies running Stateful Applications on Kubernetes.]]
- [[https://github.com/openkruise/kruise][openkruise/kruise: Automate application management on Kubernetes (project under CNCF)]]
- [[https://github.com/piraeusdatastore/linstor-csi][piraeusdatastore/linstor-csi: CSI plugin for LINSTOR]]
- [[https://github.com/pixie-io/pixie][pixie-io/pixie: Instant Kubernetes-Native Application Observability]]
- [[https://habr.com/ru/company/nixys/blog/682612/][Pre-Commit хуки, о которых DevOps-инженер должен знать, чтобы управлять Kubernetes / Хабр]]
- [[https://github.com/projectcalico/calico][projectcalico/calico: Cloud native networking and network security]]
- [[https://github.com/Qovery/pleco][Qovery/pleco: Automatically removes Cloud managed services and Kubernetes resources based on tags with TTL]]
- [[https://github.com/rancher/k3s][rancher/k3s: Lightweight Kubernetes]]
- [[https://github.com/rancher/kim][rancher/kim: In ur kubernetes, buildin ur imagez]]
- [[https://github.com/rancher-sandbox/rancher-desktop][rancher-sandbox/rancher-desktop: Container Management and Kubernetes on the Desktop]]
- [[https://github.com/reactive-tech/kubegres][reactive-tech/kubegres: Kubegres is a Kubernetes operator allowing to create a cluster of PostgreSql instances and manage databases replication, failover and backup.]]
- [[https://github.com/rook/rook][rook/rook: Storage Orchestration for Kubernetes]]
- [[https://github.com/rook/rook][rook/rook: Storage Orchestration for Kubernetes]]
- [[https://charlottemach.com/2020/11/03/windows-kubevirt-k3s.html][Running a Windows VM on KubeVirt on K3s · cookies and containers]]
- [[https://github.com/saschagrunert/kubernix][saschagrunert/kubernix: Single dependency Kubernetes clusters for local testing, experimenting and development]]
- [[https://github.com/saschagrunert/kubernix][saschagrunert/kubernix: Single dependency Kubernetes clusters for local testing, experimenting and development]]
- [[https://github.com/sbstp/kubie][sbstp/kubie: A more powerful alternative to kubectx and kubens]]
- [[https://schemahero.io/][SchemaHero - A modern approach to database schema migrations]]
- [[https://github.com/sealerio/sealer][sealerio/sealer: A tool to seal application's all dependencies and Kubernetes into CloudImage, distribute this application anywhere via CloudImage, and run it within any cluster in one command.]]
- [[https://github.com/senthilrch/kube-fledged][senthilrch/kube-fledged: A kubernetes operator for creating and managing a cache of container images directly on the cluster worker nodes, so application pods start almost instantly]]
- [[https://github.com/slok/simple-ingress-external-auth][slok/simple-ingress-external-auth: A very simple external authentication service for Kubernetes ingresses (ingress-nginx, traefik...)]]
- [[https://github.com/Soluto/kamus][Soluto/kamus: An open source, git-ops, zero-trust secret encryption and decryption solution for Kubernetes applications]]
- [[https://github.com/spacecloud-io/space-cloud][spacecloud-io/space-cloud: Open source Firebase + Heroku to develop, scale and secure serverless apps on Kubernetes]]
- [[https://github.com/stackrox/kube-linter][stackrox/kube-linter: KubeLinter is a static analysis tool that checks Kubernetes YAML files and Helm charts to ensure the applications represented in them adhere to best practices.]]
- [[https://github.com/stackrox/stackrox][stackrox/stackrox: The StackRox Kubernetes Security Platform performs a risk analysis of the container environment, delivers visibility and runtime alerts, and provides recommendations to proactively improve security by hardening the environment.]]
- [[https://github.com/stakater/Reloader][stakater/Reloader: A Kubernetes controller to watch changes in ConfigMap and Secrets and do rolling upgrades on Pods with their associated Deployment, StatefulSet, DaemonSet and DeploymentConfig – [✩Star] if you're using it!]]
- [[https://github.com/stashed/stash][stashed/stash: 🛅 Backup your Kubernetes Stateful Applications]]
- [[https://github.com/tdihp/dspcap][tdihp/dspcap: A humble bash script set that uses daemonset to capture tcpdump from all k8s nodes, then collect the captures.]]
- [[https://github.com/teamcode-inc/kubeorbit][teamcode-inc/kubeorbit: Test your application on Kubernetes in a brand new simple way⚡]]
- [[https://github.com/team-soteria/rback][team-soteria/rback: RBAC in Kubernetes visualizer]]
- [[https://habr.com/ru/company/nixys/blog/481992/][Tekton Pipeline — Kubernetes-нативные pipelines / Хабр]]
- [[https://opensource.com/article/21/6/chaos-mesh-kubernetes][Test your Kubernetes experiments with an open source web interface | Opensource.com]]
- [[https://github.com/tkestack/tke][tkestack/tke: Native Kubernetes container management platform supporting multi-tenant and multi-cluster]]
- [[https://github.com/tohjustin/kube-lineage][tohjustin/kube-lineage: A CLI tool to display all dependencies or dependents of an object in a Kubernetes cluster.]]
- [[https://github.com/tommy351/pullup][tommy351/pullup: Update Kubernetes resources by webhooks.]]
- [[https://github.com/topolvm/pvc-autoresizer][topolvm/pvc-autoresizer: Auto-resize PersistentVolumeClaim objects based on Prometheus metrics]]
- [[https://github.com/traefik/mesh][traefik/mesh: Traefik Mesh - Simpler Service Mesh]]
- [[https://github.com/Trois-Six/k8s-diagrams][Trois-Six/k8s-diagrams: Create diagrams from the Kubernetes API with go-diagrams.]]
- [[https://github.com/troytop/cfk8sterm][troytop/cfk8sterm: A ttyd web terminal image on Alpine with cf, kubectl, and other tools]]
- [[https://github.com/txn2/kubefwd][txn2/kubefwd: Bulk port forwarding Kubernetes services for local development.]]
- [[https://github.com/up9inc/mizu][up9inc/mizu: API traffic viewer for Kubernetes enabling you to view all API communication between microservices. Think TCPDump and Wireshark re-invented for Kubernetes]]
- [[https://developers.redhat.com/blog/2020/11/18/using-multus-and-datavolume-in-kubevirt#using_multus_in_kubevirt][Using Multus and DataVolume in KubeVirt | Red Hat Developer]]
- [[https://github.com/vmware-tanzu/octant][vmware-tanzu/octant: Highly extensible platform for developers to better understand the complexity of Kubernetes clusters.]]
- [[https://github.com/vmware-tanzu/velero][vmware-tanzu/velero: Backup and migrate Kubernetes applications and their persistent volumes]]
- [[https://github.com/weaveworks/kured][weaveworks/kured: Kubernetes Reboot Daemon]]
- [[https://github.com/weaveworks/tf-controller][weaveworks/tf-controller: A GitOps Terraform controller for Kubernetes]]
- [[https://scribe.bus-hit.me/flant-com/kubernetes-operator-in-python-451f2d2e33f3][Writing a Kubernetes Operator in Python without frameworks and SDK]]
- [[https://marketplace.visualstudio.com/items?itemName=redhat.vscode-yaml][YAML and Kubernetes syntax support - Visual Studio Marketplace]]
- [[https://github.com/yokawasa/kubectl-plugin-ssh-jump][yokawasa/kubectl-plugin-ssh-jump: A kubectl plugin to access nodes or remote services using a SSH jump Pod]]
- [[https://github.com/yunionio/cloudpods][yunionio/cloudpods: A cloud-native open-source unified multi-cloud and hybrid-cloud platform. 开源、云原生的多云管理及混合云融合平台]]
- [[https://habr.com/ru/post/540220/][Настройка отказоустойчивого кластера Kubernetes на серверах с публичной и приватной сетью с помощью Kubeadm / Хабр]]
- [[https://habr.com/ru/company/flant/blog/524196/#][Обзор k9s — продвинутого терминального интерфейса для Kubernetes]]
- [[https://habr.com/ru/company/flant/blog/575972/][Обзор Kalm — веб-интерфейса для деплоя приложений и управления ими в Kubernetes / Хабр]]
- [[https://habr.com/ru/post/542834/][Первый взгляд на Tekton Pipelines / Хабр]]
- [[https://habr.com/ru/company/flant/blog/676678/][Снапшоты в Kubernetes: что это и как ими пользоваться / Хабр]]

** [[https://github.com/WoozyMasta/kube-dump][WoozyMasta/kube-dump: Backup a Kubernetes cluster as a yaml manifest]]
#+begin_src shell
  docker run \
         --network host \
         --tty \
         --interactive \
         --rm \
         --volume "${HOME}/.kube:/.kube" \
         --volume "${HOME}/ansible-out/files/kubernetes:/dump" \
         woozymasta/kube-dump:latest \
         dump-namespaces -d /dump --kube-config /.kube/config
#+end_src

** minikube
- [[https://habr.com/ru/company/vk/blog/648117/][Как работать с Minikube: рекомендации и полезные советы / Хабр]]
- [[https://github.com/kubevirt/demo][kubevirt/demo: Easy to use KubeVirt demo based on minikube.]]

** crossplane
- [[https://github.com/crossplane-contrib/provider-ansible][crossplane-contrib/provider-ansible: Crossplane Ansible provider]]
- [[https://github.com/crossplane/provider-template][crossplane/provider-template: A template for building @crossplane providers.]]
- [[https://github.com/crossplane/terrajet][crossplane/terrajet: Generate Crossplane Providers from any Terraform Provider]]

* Problems

#+begin_example
  E1111 19:31:15.276111       1 reflector.go:127] pkg/mod/k8s.io/client-go@v0.19.1/tools/cache/reflector.go:156: Failed to watch *v1.Endpoints: failed to list *v1.Endpoints: endpoints is forbidden: User "system:serviceaccount:kube-system:coredns" cannot list resource "endpoints" in API group "" at the cluster scope
#+end_example

from [[https://giters.com/ivanfioravanti/kubernetes-the-hard-way-on-azure/issues/54][Recent update seems to be missing ClusterRole for CoreDNS - Giters]]

#+begin_src bash
  cat <<EOF | kubectl apply -f -
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: coredns
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    - pods
    - namespaces
    verbs:
    - list
    - watch
  ---
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: coredns
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: coredns
  subjects:
  - kind: ServiceAccount
    name: coredns
    namespace: kube-system
  EOF
#+end_src

then redeploy with:
: kubectl -n kube-system rollout restart deployment coredns

** kubevirt

*** unable to schedule after reboot
#+begin_example
  kubectl describe node kube8
  ...
  Allocatable:
    cpu:                            8
    devices.kubevirt.io/kvm:        0
    devices.kubevirt.io/sev:        0
    devices.kubevirt.io/tun:        0
    devices.kubevirt.io/vhost-net:  0
    ephemeral-storage:              441863943051
    hugepages-1Gi:                  0
    hugepages-2Mi:                  0
    memory:                         65826164Ki
    pods:                           110
#+end_example
