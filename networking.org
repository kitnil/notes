:PROPERTIES:
:ID:       4a6e6370-49af-4b37-8b2b-083183cb1b9d
:END:
#+title: Networking

- [[https://access.ripe.net/?originalUrl=https%3A%2F%2Fmy.ripe.net%2F%23%2Fcontacts][RIPE NCC Access ‚Äî RIPE Network Coordination Centre]]

- [[https://packetpushers.net/][Packet Pushers - Where Too Much Technology Would Be Barely Enough]]
- [[https://baturin.org/docs/iproute2/][Task-centered iproute2 user guide ‚Äî Daniil Baturin]]
- [[https://github.com/leozz37/jaguar][leozz37/jaguar: üêÜ CLI tool for testing socket connections]]
- [[https://github.com/sysdream/chashell][sysdream/chashell: Chashell is a Go reverse shell that communicates over DNS. It can be used to bypass firewalls or tightly restricted networks.]]
- [[https://github.com/sysdream/ligolo][sysdream/ligolo: Reverse Tunneling made easy for pentesters, by pentesters https://sysdream.com/]]
- [[https://github.com/openwisp/openwisp-network-topology][openwisp/openwisp-network-topology: Network topology collector and visualizer. Collects network topology data from dynamic mesh routing protocols or other popular networking software like OpenVPN, allows to visualize the network graph, save daily snapshots that can be viewed in the future and more.]]
- [[https://github.com/prashantgupta24/firewalld-rest][prashantgupta24/firewalld-rest: A rest application to update firewalld rules on a linux server]]
- [[https://github.com/microsoft/ethr][microsoft/ethr: Ethr is a Network Performance Measurement Tool for TCP, UDP & HTTP.]]
- [[https://docs.openvswitch.org/en/latest/howto/lisp/][Using LISP tunneling ‚Äî Open vSwitch 2.16.90 documentation]]
- [[https://github.com/carlmontanari/boxen][carlmontanari/boxen: put your network operating systems in a box!]]
- [[https://github.com/Yawning/obfs4][Yawning/obfs4: The obfourscator (Courtesy mirror)]]
- [[https://github.com/cbeuw/Cloak][cbeuw/Cloak: A censorship circumvention tool to evade detection by authoritarian state adversaries]]

* Firmware
- [[https://unix.stackexchange.com/questions/56614/send-file-by-xmodem-or-kermit-protocol-with-gnu-screen][serial port - Send file by xmodem or kermit protocol with GNU screen - Unix & Linux Stack Exchange]]

* Analyze
- [[https://serveradmin.ru/webpagetest-lokalnaya-ustanovka-i-nastroyka/][WebPageTest ‚Äî –ª–æ–∫–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–∞–π—Ç–∞ ‚Äî Server Admin]]
- [[https://serveradmin.ru/analiz-setevogo-trafika-v-noction-flow-analyzer/][–ê–Ω–∞–ª–∏–∑ —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ Noction Flow Analyzer ‚Äî Server Admin]]

* Benchmark

** ab

- apache benchmark, which could be useful for rate limit test
  : ab -k -c 350 -n 20000 example.org/

** tools
- [[https://github.com/tylertreat/comcast][tylertreat/comcast: Simulating shitty network connections so you can build better systems.]]
- [[https://github.com/baidu/dperf][baidu/dperf: dperf is a network load tester for cloud.]]

* ss
- [[https://www.linuxtechi.com/ss-command-examples-monitor-socket-connections/][Top 14 SS Command Examples to Monitor Socket Connections]]

- kill socket
: ss -K dst 192.168.1.3 dport = 53152

* DHCP
- [[https://github.com/CyberShadow/dhcptest][CyberShadow/dhcptest: Cross-platform DHCP test client]]
- [[https://habr.com/ru/company/dsec/blog/333978/][–ê—Ç–∞–∫—É–µ–º DHCP / –ë–ª–æ–≥ –∫–æ–º–ø–∞–Ω–∏–∏ Digital Security / –•–∞–±—Ä]]

* VLAN

| cisco       | tp-link       |
| access port | untagged port |
| trunk port  | tagged port   |

* Firewall
** netfilter
*** tools
1. conntrack-tools
2. nfacct
3. ulogd

* Scan
- [[https://github.com/marco-lancini/goscan][marco-lancini/goscan: Interactive Network Scanner]]
- [[https://github.com/v-byte-cpu/sx][v-byte-cpu/sx: Fast, modern, easy-to-use network scanner]]

* keepalived
- [[https://tech-geek.ru/keepalived/][–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ–π —Å–µ—Ç–∏ –≤ Linux —Å keepalived]]
- [[https://www.altlinux.org/Keepalived][Keepalived ‚Äî ALT Linux Wiki]]
- [[http://www.linux-admins.net/2015/02/keepalived-using-unicast-track-and.html][Linux Administration: Keepalived using unicast, track and notify scripts]]

* Packets
- [[https://github.com/pesos/rshark][pesos/rshark: Simple Packet Monitoring Tool]]
- [[https://github.com/thombashi/tcconfig][thombashi/tcconfig: A tc command wrapper. Make it easy to set up traffic control of network bandwidth/latency/packet-loss/packet-corruption/etc. to a network-interface/Docker-container(veth).]]

* Learning
- [[http://2f30.org/home.html][division by zero]]
- [[https://radiocrafts.com/why-is-multicasting-becoming-essential-for-mesh-networks/][Why is Multicasting Becoming Essential for Mesh Networks? - Radiocrafts]]
- [[https://unix.stackexchange.com/questions/619068/the-difference-between-ip-link-down-and-physical-link-absence][linux - The difference between ip link down and physical link absence - Unix & Linux Stack Exchange]]
- [[https://habr.com/ru/company/karuna/blog/582292/][–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è —Å–µ—Ç–µ–π / –•–∞–±—Ä]]
- [[https://disnetern.ru/net-type-attack/][–í–∏–¥—ã —Å–µ—Ç–µ–≤—ã—Ö –∞—Ç–∞–∫ | IT Knowledge Base]]
- [[https://disnetern.ru/diff-sfp-sfp-xfp-qsfp-qsfp-cfp-qsfp28-xenpac-x2-gbic/][–†–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É SFP, SFP+, XFP, QSFP/QSFP+, CFP, QSFP28 | IT Knowledge Base]]
- [[https://disnetern.ru/10-samples-netstat-linux/][10 –ø—Ä–∏–º–µ—Ä–æ–≤ –∫–æ–º–∞–Ω–¥—ã Netstat –≤ Linux | IT Knowledge Base]]

* Diagrams
- [[https://www.redhat.com/architect/diagramming-tools-network-architecture][Try these 5 diagramming tools for network architecture | Enable Architect]]

* Filtering
- [[https://habr.com/ru/company/timeweb/blog/586850/][–ü–æ–¥–Ω–∏–º–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –ø—Ä–æ–∫—Å–∏ Squid –Ω–∞ FreeBSD 13.0 / –•–∞–±—Ä]]

* Tunnels
** Misc
 - [[https://github.com/Dreamacro/clash][Dreamacro/clash: A rule-based tunnel in Go.]]
 - [[https://github.com/ekzhang/bore][ekzhang/bore: üï≥ bore is a simple CLI tool for making tunnels to localhost]]
** GRE
 - [[https://community.hetzner.com/tutorials/linux-setup-gre-tunnel][Hetzner Online Community]]
 - [[https://github.com/puxxustc/gre][puxxustc/gre: Userspace GRE tunnel]]
** Misc
 - Shadowsocks + v2ray
 - obfs proxy
 - port knocking
* WOL
- [[https://github.com/mdom/wakeonweb][mdom/wakeonweb: Dashboard for wakeonlan]]
- [[https://github.com/vikmik/reboot-on-lan][vikmik/reboot-on-lan: Reboot a remote machine with a Wake-on-LAN packet]]

* ICMP
- [[https://github.com/m-ou-se/pong][m-ou-se/pong: Fake ping times.]]
- [[https://linux.die.net/man/8/omping][omping(8): test IP multicast - Linux man page]]

* Backup
- [[https://github.com/ytti/oxidized][ytti/oxidized: Oxidized is a network device configuration backup tool. It's a RANCID replacement!]]

* bridge

- Create a bridge
  : ip link add name br0 type bridge

* Connections
** Fibre
- [[https://www.youtube.com/watch?v=EdR2cujwke4][(1) We just leveled up HARDCORE - Fibre Adventure - YouTube]]

* nc
** UDP
  On server listen UDP port:
  : nc -ul 6111

  On client:
  : nc -u <server> 6111

* ip

- Bind port even if no IP address available:
: net.ipv4.ip_nonlocal_bind = 1

#+BEGIN_SRC yaml
  ethernet frame:
    preamble/sfd:
    destination address:
    source address:
    ethernet type:
    payload:
      ip header:
        1:
          version:
            size: 4 bytes
          ihl:
          type of service:
          total length:
        2:
          identification:
          flags:
          fragment offset:
        3:
          time to live:
          protocol:
          header checksum:
        4:
          source address:
        5:
          destination address:
        6: # rarely used
          options:
          padding:
    frame check sequence:
#+END_SRC

** Test gateway

- In =screen= session press Ctrl+C if successful
  : sh -c 'ip r delete default; ip r add default via 172.16.103.208; sleep 10; ip r delete default; ip r add default via 172.16.103.1'

* tcpdump
- [[https://danielmiessler.com/study/tcpdump/][A tcpdump Tutorial with Examples ‚Äî 50 Ways to Isolate Traffic | Daniel Miessler]]

* Traffic shaping
- [[https://github.com/hkbakke/tc-gen][hkbakke/tc-gen: Modern linux traffic shaping made easy]]
- [[https://yandex.ru/search/?text=traffic%20shaping%20linux%20ssh%20%22tc%22][traffic shaping linux ssh "tc" ‚Äî –Ø–Ω–¥–µ–∫—Å: –Ω–∞—à–ª–æ—Å—å 3¬†—Ç—ã—Å.¬†—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤]]
- [[https://www.cyberciti.biz/faq/linux-traffic-shaping-using-tc-to-control-http-traffic/][tc: Linux HTTP Outgoing Traffic Shaping (Port 80 Traffic Shaping) - nixCraft]]
- [[https://yandex.ru/turbo/litl-admin.ru/s/linux/shejpim-trafik-linux-pri-pomoshhi-tc.html][–®–µ–π–ø–∏–º —Ç—Ä–∞—Ñ–∏–∫ Linux –ø—Ä–∏ –ø–æ–º–æ—â–∏ tc]]
- [[https://habr.com/ru/post/88624/][–®–µ–π–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ Linux / –•–∞–±—Ä]]
- [[https://www.google.com/search?q=shapping+traffic+arch&hl=en][shapping traffic arch - Google Search]]
- [[https://wiki.archlinux.org/title/Advanced_traffic_control#Using_tc_only][Advanced traffic control - ArchWiki]]
- [[https://yandex.ru/search/?text=iperf%20example][iperf example ‚Äî –Ø–Ω–¥–µ–∫—Å: –Ω–∞—à–ª–æ—Å—å 2¬†–º–ª–Ω¬†—Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤]]
- [[https://www.google.com/search?q=iperf+example][iperf example - Google Search]]
- [[https://iperf.fr/iperf-doc.php][iPerf - iPerf3 and iPerf2 user documentation]]
- [[https://openmaniak.com/iperf.php][IPERF - The Easy Tutorial]]
- [[http://netwild.ru/iperf/][Iperf. –ß—Ç–æ —Ç–∞–∫–æ–µ –∏ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. | Netwild.ru]]
- [[https://losst.ru/kak-polzovatsya-iperf][–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è iperf | Losst]]
- [[https://iperf.fr/][iPerf - The TCP, UDP and SCTP network bandwidth measurement tool]]
- [[https://www.google.com/search?hl=en&q=traffic%20shaping%20linux%20ssh%20%22tc%22%20reserve%20ssh][traffic shaping linux ssh "tc" reserve ssh - Google Search]]
- [[https://wiki.4psa.com/display/KB/How+to+prioritize+VoIP+traffic+in+the+network][How to prioritize VoIP traffic in the network - 4PSA Knowledge Base - 4PSA Wiki]]

* VXLAN
- [[https://blog.oddbit.com/post/2021-04-17-vm-ovs-vxlan/][Creating a VXLAN overlay network with Open vSwitch ¬∑ The Odd Bit]]

* Packets

- [[https://github.com/netspooky/pdiff][netspooky/pdiff: Binary Protocol Differ]]
- [[https://loicpefferkorn.net/ipdecap/][Ipdecap: remove encapsulation from pcap packets]]
- [[https://github.com/projectdiscovery/nuclei][projectdiscovery/nuclei: Nuclei is a fast tool for configurable targeted scanning based on templates offering massive extensibility and ease of use.]]

- Find all clients connected to HTTP or HTTPS ports 
  : ss -o state established '( dport = :http or sport = :https )'

- Block all IPv4 addresses that has brute forcing our ssh server
  : for idiots in "$(cat /var/log/auth.log|grep invalid| grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b')"; do iptables -A INPUT -s "$idiots" -j DROP; done

* 

http://xmodulo.com/centos-bgp-router-quagga.html

https://www.tldp.org/HOWTO/BRIDGE-STP-HOWTO/set-up-the-bridge.html
https://lists.linuxfoundation.org/pipermail/bridge/2017-December/010832.html
https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/

https://bugzilla.redhat.com/show_bug.cgi?id=542405
oleg@guixsd ~$ sudo sysctl  net.bridge.bridge-nf-call-arptables=0
net.bridge.bridge-nf-call-arptables = 0
oleg@guixsd ~$ sudo sysctl net.bridge.bridge-nf-call-iptables=0
net.bridge.bridge-nf-call-iptables = 0

** Misc
- [[https://github.com/IvanGlinkin/Host-enumeration][IvanGlinkin/Host-enumeration]]

* /etc/hosts

- [[https://github.com/txn2/txeh][txn2/txeh: Go library and CLI utility for /etc/hosts management.]]

* Monitoring
- [[https://github.com/ntop/ntopng][ntop/ntopng: Web-based Traffic and Security Network Traffic Monitoring]]

* Tools
- [[https://github.com/chiakge/Linux-NetSpeed][chiakge/Linux-NetSpeed: Â∞ÜLinuxÁé∞Â∏∏Áî®ÁöÑÁΩëÁªúÂä†ÈÄüÈõÜÊàêÂú®‰∏ÄËµ∑]]
- [[https://github.com/Ripolak/chk][Ripolak/chk: A small CLI tool to check connection from a local machine to a remote target in various protocols.]]
- [[https://github.com/ycd/dstp][ycd/dstp: üß™ Run common networking tests against your site.]]

** WEB interface
- [[https://github.com/phpipam/phpipam][phpipam/phpipam: phpipam development repository]]

* [[id:63242a98-634c-4236-999c-5b26d588b4d9][BGP]]
** AS
 - [[https://github.com/stevenpack/asroute][stevenpack/asroute: Interpret traceroute output to show names of ASN traversed]]

* [[id:8f93f297-e53d-4f15-80f8-47e3213f9ec5][HTTP]]

* [[id:ed7ba502-c59a-4ab0-aada-6a0f342f20cd][rsync]]

* [[id:d5c0438f-65e6-4989-8a60-48e927f4a4d3][SMTP]]

* [[id:0b6880f3-90c4-4052-b176-f59fd7219230][Proxy]]

* Ping

  #+begin_src bash
    for ip in 10.0.0.{1..6}
    do
        if (timeout 1 ping -c 1 "$ip" &> /dev/null)
        then
            :
        else
            echo "$ip"
        fi
    done
  #+end_src

* Juniper/Cisco

[[https://it-wtf.com/juniper/juniper-cisco-commands/][Juniper/Cisco —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–º–∞–Ω–¥ | IT-WTF?!]]

–ö–æ–º–∞–Ω–¥—ã Cisco 	–ö–æ–º–∞–Ω–¥—ã Juniper 	–û–ø–∏—Å–∞–Ω–∏–µ
show run 	sh configuration 	Show running configuration
sh ver 	sh ver 	Show version
show ip interface brief 	show interface terse 	displays the status of interfaces configured for IP
show interface [intfc] 	show interfaces [intfc] detail 	displays the interface configuration, status and statistics.
show controller intfc 	show interfaces intfc extensive 	displays information about a physical port device
show interface | incl (proto|Desc) 	show interfaces description 	displays the interface configuration, status and statistics
show ip route 	show route 	displays summary information about entries in the routing table
show ip bgp summary 	show bgp summary 	displays the status of all Border Gateway Protocol (BGP) connections
show ip bgp net mask 	show route protocol bgp prefix 	will show you how that route is being advertised, look for the first line
show ip bgp net mask longer-prefixes 	show route range prefix 	will show you how that route is being advertised, look for the first line
show ip bgp regexp AS-regexp 	show route aspath-regexp ‚ÄúAS-regexp‚Äù 	displays routes matching the autonomous system (AS) path regular expression
show ip bgp neighbors neigh received-routes 	show route receive-protocol bgp neighshow route source-gateway neigh protocol bgp 	Shows whether a neighbor supports the route refresh capability
show ip bgp neighbor neigh advertised-routes 	show route advertising-protocol bgp neigh 	Shows whether a neighbor supports the route refresh capabilty
show clns neighbors 	show isis adjacency 	displays both ES and IS neighbors
show clns interface 	show isis interface 	shows specific information about each interface
show ip route isis 	show isis routes 	displays the current state of the the routing table
show isis topology 	show isis spf 	displays a list of all connected routers in all areas
show ip ospf interface 	show ospf neighbor 	shows neighbor ID, Priority, IP, & State if the neighbor router, dead time.
show ip ospf interface 	show ospf interface 	shows neighbor id, pri, state, dead time, address and interface
show ip route ospf 	show ospf route 	display the current state of the routing table
show ip ospf database 	show ospf database 	display list of information related to the OSPF database for a specific communication server
show version 	show version, show system uptime 	display the system hardware config., software version, and name and source of configuration files and boot images
show diags 	show chasis hardware 	displays power-on diagnostics status
show processes cpu 	show system process 	displays utilization statistics
show tech-support 	request support info 	displays the current software image, configuration, controllers, counters, stacks, interfaces, memory and buffers
show logging 	show log messages 	display the state of logging to the syslog
show route-map name 	show policy name 	displayall route-maps configured or only the one specified
show ip prefix-list name 	show policy name 	display information about a prefix list or prefix list entries
show ip community-list list 	configure,
show policy-options community name 	display routes that are permitted by BGP community list
show environment all 	show chassis environment 	displays temperature and voltage information on the console
ping dest 	ping dest rapid (for cisco like output)
ping dest (for unix like output) 	to check to see if a destination is alive
ping (setting source int) 	ping dest bypass-routing 	to check to see if a destination is alive
terminal monitor 	monitor start messages 	Change console terminal settings
terminal no monitor 	monitor stop 	Change console terminal settings
terminal length 0 	set cli screen-length 0 	sets the length for displaying command output

* NAT

** 

- [[https://kslift.ru/nastroyka-routera-bez-nat/][–Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–µ—Ä–∞ –±–µ–∑ nat]]

** 

¬´–ù–∞—Ç–∏—Ç—å¬ª –Ω–∏—á–µ–≥–æ –Ω–µ –∑–Ω–∞–µ—Ç –Ω–∏ –ø—Ä–æ ¬´—á—Ç–æ¬ª, –Ω–∏ –ø—Ä–æ ¬´–∫—É–¥–∞¬ª. NAT - —ç—Ç–æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è
–ø–æ–¥–º–µ–Ω—ã –∞–¥—Ä–µ—Å–∞ –≤ –ø–∞–∫–µ—Ç–µ –∏ —Ç–æ–ª—å–∫–æ. ¬´–ö—É–¥–∞¬ª –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–µ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏,
–∫–æ—Ç–æ—Ä–∞—è –Ω–µ –∏–º–µ–µ—Ç –Ω–∏–∫–∞–∫–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ NAT. –£ —Ç–µ–±—è –≤ —Å–∏—Å—Ç–µ–º–µ –µ—Å—Ç—å LO –∏,
–≤–æ–∑–º–æ–∂–Ω–æ, –µ—â–µ –∫–∞–∫–∏–µ-—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã. –î–æ–ø—É—Å—Ç–∏–º, —É —Ç–µ–±—è –µ—Å—Ç—å eth0, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ—Ç—Ä–∏—Ç
–≤ –ª–æ–∫–∞–ª–∫—É, –∏ eth1, –∫–æ—Ç–æ—Ä—ã–π —Å–º–æ—Ç—Ä–∏—Ç –≤ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç. –ï—Å–ª–∏ –ø–∞–∫–µ—Ç –ø—Ä–∏—à–µ–ª –∏–∑ eth –∏
—Ü–µ–ª—å—é —è–≤–ª—è–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, —Ç–æ —ç—Ç–æ INPUT. –ï—Å–ª–∏ –ø–∞–∫–µ—Ç –æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ
–ø—Ä–æ—Ü–µ—Å—Å–∞ —Ö–æ—á–µ—Ç –≤—ã–π—Ç–∏ –≤ eth, —Ç–æ —ç—Ç–æ OUTPUT. –ï—Å–ª–∏ –ø–∞–∫–µ—Ç —Ö–æ—á–µ—Ç –∏–∑ eth –ø–æ–ø–∞—Å—Ç—å –≤
eth (–º–∏–º–æ LO), —Ç–æ —ç—Ç–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –∏–∑ PREROUTIMG - FORWARD -
POSTROUTING. –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è NAT –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–¥–º–µ–Ω–∏—Ç—å ip –∞–¥—Ä–µ—Å –≤ –ø–∞–∫–µ—Ç–µ. –ê–¥—Ä–µ—Å
–∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∏/–∏–ª–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è. –≠—Ç–∞ –ø–æ–¥–º–µ–Ω–∞ —Å–æ—á–µ—Ç–∞–µ—Ç—Å—è —Å —Ç–∞–±–ª–∏—Ü–µ–π
–º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏. –ú–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç DNAT/SNAT —Ç–æ–ª—å–∫–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ–º –∑–Ω–∞–Ω–∏—è
–∫–∞–∫–æ–π ip —Ç—ã –±—É–¥–µ—à—å –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å, –º–∞—Å–∫–∞—Ä–∞–¥ —Å–∞–º –±—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å. –ï—Å–ª–∏ —Ç—ã –∑–Ω–∞–µ—à—å
–∫–∞–∫–æ–π ip –±—É–¥–µ—à—å –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å, —Ç–æ –º–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ù–ï —Å–ª–µ–¥—É–µ—Ç, –¥–ª—è —ç—Ç–æ–≥–æ
–µ—Å—Ç—å SNAT/DNAT. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, —Å –ø–æ–º–æ—â—å—é iptables –º–æ–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å –º–µ—Ç–∫–∏ –Ω–∞ –ø–∞–∫–µ—Ç–∞—Ö,
–∫–æ—Ç–æ—Ä—ã–µ —Ç–æ–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ—Å—Ç–æ –ø–æ–π–º–∏, —á—Ç–æ —ç—Ç–æ –¥–≤–∞
—Ä–∞–∑–Ω—ã—Ö –º–µ—Ö–∞–Ω–∏–∑–º–∞ (iptables –∏ routing), –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–≤–º–µ—Å—Ç–Ω–æ. –¢–∞–º
–µ—â–µ –µ—Å—Ç—å –º–µ—Ö–∞–Ω–∏–∑–º traffic control –∏–∑ –ø–∞–∫–µ—Ç–∞ iproute2, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∑–∞–¥–∞–≤–∞—Ç—å
–ø—Ä–æ–ø—É—Å–∫–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –¥–ª—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π.

** 

–ó–∞–±—É–¥—å –ø—Ä–æ –º–∞—Å–∫–∞—Ä–∞–¥ –≤ —Ü–∏—Å–∫–µ - —Ç–∞–º –≤—Å—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ –¥—Ä—É–≥–æ–º—É. –ù–∞—á–∞—Ç—å —Ö–æ—Ç—è –±—ã —Å
—Ç–æ–≥–æ, —á—Ç–æ –µ—Å–ª–∏ —Ç—ã –Ω–µ —É–∫–∞–∂–µ—à—å –≤—Ö–æ–¥–Ω–æ–π –∏ –≤—ã—Ö–æ–¥–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã - NAT —Ç–∞–º –Ω–µ
–≤–∑–ª–µ—Ç–∏—Ç(–º–æ–º–µ–Ω—Ç —Å interface templates –æ–ø—É—Å—Ç–∏–º –ø–æ–∫–∞) –í Cisco NAT - —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω—ã–π
–Ω–∞–±–æ—Ä –æ–ø–µ—Ä–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω —Å —Ñ–∞–π—Ä–≤–æ–ª–æ–º –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º –æ–±—â–∏—Ö
route-map –Ω–∞–ø—Ä–∏–º–µ—Ä.  –í Linux NAT - —ç—Ç–æ —á–∞—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å
–ø—Ä–æ–¥–µ–ª–∞–Ω–∞ —Å –ø–∞–∫–µ—Ç–∞–º–∏ –≤ —Ä–∞–º–∫–∞—Ö —Ñ–∞–π—Ä–≤–æ–ª–∞. –¢–æ –µ—Å—Ç—å –≥—Ä—É–±–æ –≥–æ–≤–æ—Ä—è - –ø–æ–¥–º–Ω–æ–∂–µ—Å—Ç–≤–æ
–≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π —Ñ–∞–π—Ä–≤–æ–ª–∞.  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø—Ä–∏ —ç—Ç–æ–º –ø—Ä–∞–≤–¥–∞
—Ä–∞–∑–¥—Ä–∞–∂–∞—é—Ç - —Ç–æ –∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–∫–∞–∑–∞—Ç—å –≤—Ö–æ–¥—è—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤
POSTROUTING. –≠—Ç–æ –∫ —Å–ª–æ–≤—É —Ç–æ—Ç —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –º–æ–∂–Ω–æ –≤—ã–∫—Ä—É—Ç–∏—Ç—å—Å—è –º–µ—Ç–∫–∞–º–∏.

–ù–∞ ACL-—è—Ö —Å—Ç—Ä–æ–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ stateless —Ñ–∞–π—Ä–≤–æ–ª. –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –≥–∏–±–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ - –ª—É—á—à–µ —Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Å—Ç–æ—Ä–æ–Ω—ã Zone-based firewall. –ù–∞ —Ç–µ—Ö —Ü–∏—Å–∫–∞—Ö —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —è —Ä–∞–±–æ—Ç–∞—é - –æ–Ω –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ stateful-—Ñ–∞–π—Ä–≤–æ–ª–∞.

–ù–µ, –±–µ—Å—Å–ø–æ—Ä–Ω–æ, –Ω–µ –≤—Å–µ–≥–¥–∞ –Ω—É–∂–µ–Ω firewall —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π, –Ω–æ –Ω–∞ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –º–∞—Å—à—Ç–∞–±–∞—Ö –±–µ–∑ –Ω–µ–≥–æ –æ—á–µ–Ω—å-–æ—á–µ–Ω—å —Ç–æ—Å–∫–ª–∏–≤–æ.

–ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –ª—É—á—à–µ —É–∂ –ø–∏—Å—é–∫ —Å Linux, —á–µ–º –¥—Ä—ã—â–µ-–∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π —Ä–æ—É—Ç–µ—Ä. –ù—É –∞ Cisco –∫–∞–∫ –≤—Å–µ–≥–¥–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ - —ç—Ç–æ —Ü–µ–Ω–Ω–∏–∫ :-)

    route map –∫–∞–∫ –ø–æ–Ω—è–ª —ç—Ç–æ Policy Based Routing

–ù–µ —Ç–æ–ª—å–∫–æ. –ù–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏ –∫–∞–∫ PBR –≤ —Ç–æ–º —á–∏—Å–ª–µ

    –ö–∞–∫ –º–µ—Ç–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –≤—ã–∫—Ä—É—Ç–∏—Ç—å—Å—è? –≠—Ç–æ –∂–µ –ª–∏—à—å –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∞ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–æ—É—Ç–∏–Ω–≥–∞? –ò–ª–∏ —ç—Ç–æ –∏ –∏–º–µ–µ—Ç—Å—è –≤–≤–∏–¥—É(–∫–∞–∫ –≤ –º–æ–µ–º –ø—Ä–∏–º–µ—Ä–µ).

–ù–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫:

–ó–∞–¥–∞—á–∞ - –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Å—ë –ø—Ä–∏—à–µ–¥—à–µ–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å eth0 –Ω–∞—Ç–∏—Ç—å —Å –æ–¥–Ω–∏–º source-–∞–¥—Ä–µ—Å–æ–º, –∞ –ø—Ä–∏—à–µ–¥—à–µ–µ —Å eth2 - —Å –¥—Ä—É–≥–∏–º. –£–∫–∞–∑–∞—Ç—å -i –≤ POSTROUTING –Ω–µ–ª—å–∑—è. –í–∞—Ä–∏–∞–Ω—Ç —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã: –º–∞—Ä–∫–∏—Ä—É–µ–º –ø–∞–∫–µ—Ç—ã —Å eth0 –º–µ—Ç–∫–æ–π –¥–æ–ø—É—Å—Ç–∏–º 10, –∞ —Å eth2 - 20 –≤ PREROUTING. –í –ø—Ä–∞–≤–∏–ª–∞—Ö -j SNAT —É–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π -m mark.

* –û–ª–∏—Ñ–µ—Ä –ö–Ω–∏–≥–∞ –ø–æ —Å–µ—Ç—è–º 6 –∏–∑–¥–∞–Ω–∏–µ

* LACP

[[https://support.f5.com/csp/article/K2289][Using advanced tcpdump filters]]
#+begin_example
  [root@kvm15:~]# tcpdump -pni any -e ether proto 0x8809 -vvv
  tcpdump: listening on any, link-type LINUX_SLL (Linux cooked v1), capture size 262144 bytes
  20:16:20.398110 Out 00:1b:21:8c:be:21 ethertype Slow Protocols (0x8809), length 126: LACPv1, length 110
          Actor Information TLV (0x01), length 20
            System 00:1b:21:8c:be:20, System Priority 65535, Key 9, Port 2, Port Priority 255
            State Flags [Activity, Aggregation, Synchronization, Collecting, Distributing]
            0x0000:  ffff 001b 218c be20 0009 00ff 0002 3d00
            0x0010:  0000
          Partner Information TLV (0x02), length 20
            System 64:64:9b:ac:5c:40, System Priority 127, Key 6, Port 14, Port Priority 127
            State Flags [Activity, Timeout, Aggregation, Synchronization, Collecting, Distributing]
            0x0000:  007f 6464 9bac 5c40 0006 007f 000e 3f00
            0x0010:  0000
          Collector Information TLV (0x03), length 16
            Max Delay 0
            0x0000:  0000 0000 0000 0000 0000 0000 0000
          Terminator TLV (0x00), length 0
#+end_example
