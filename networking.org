- [[https://github.com/sysdream/chashell][sysdream/chashell: Chashell is a Go reverse shell that communicates over DNS. It can be used to bypass firewalls or tightly restricted networks.]]
- [[https://github.com/sysdream/ligolo][sysdream/ligolo: Reverse Tunneling made easy for pentesters, by pentesters https://sysdream.com/]]
- [[https://github.com/openwisp/openwisp-network-topology][openwisp/openwisp-network-topology: Network topology collector and visualizer. Collects network topology data from dynamic mesh routing protocols or other popular networking software like OpenVPN, allows to visualize the network graph, save daily snapshots that can be viewed in the future and more.]]
- [[https://github.com/prashantgupta24/firewalld-rest][prashantgupta24/firewalld-rest: A rest application to update firewalld rules on a linux server]]
- [[https://github.com/microsoft/ethr][microsoft/ethr: Ethr is a Network Performance Measurement Tool for TCP, UDP & HTTP.]]

* Scan
- [[https://github.com/marco-lancini/goscan][marco-lancini/goscan: Interactive Network Scanner]]

* keepalived
- [[https://tech-geek.ru/keepalived/][Настройка отказоустойчивой сети в Linux с keepalived]]

* Tutorials
- [[https://radiocrafts.com/why-is-multicasting-becoming-essential-for-mesh-networks/][Why is Multicasting Becoming Essential for Mesh Networks? - Radiocrafts]]

* Tunnels
** Misc
 - [[https://github.com/Dreamacro/clash][Dreamacro/clash: A rule-based tunnel in Go.]]
** GRE
 - [[https://community.hetzner.com/tutorials/linux-setup-gre-tunnel][Hetzner Online Community]]

* Backup

* ip

- Bind port even if no IP address available:
: net.ipv4.ip_nonlocal_bind = 1

#+BEGIN_SRC yaml
  ethernet frame:
    preamble/sfd:
    destination address:
    source address:
    ethernet type:
    payload:
      ip header:
        1:
          version:
            size: 4 bytes
          ihl:
          type of service:
          total length:
        2:
          identification:
          flags:
          fragment offset:
        3:
          time to live:
          protocol:
          header checksum:
        4:
          source address:
        5:
          destination address:
        6: # rarely used
          options:
          padding:
    frame check sequence:
#+END_SRC

* Traffic shaping
[[https://github.com/hkbakke/tc-gen][hkbakke/tc-gen: Modern linux traffic shaping made easy]]

* Packets

- [[https://github.com/netspooky/pdiff][netspooky/pdiff: Binary Protocol Differ]]
- [[https://loicpefferkorn.net/ipdecap/][Ipdecap: remove encapsulation from pcap packets]]
- [[https://github.com/projectdiscovery/nuclei][projectdiscovery/nuclei: Nuclei is a fast tool for configurable targeted scanning based on templates offering massive extensibility and ease of use.]]

- Find all clients connected to HTTP or HTTPS ports 
  : ss -o state established '( dport = :http or sport = :https )'

- Block all IPv4 addresses that has brute forcing our ssh server
  : for idiots in "$(cat /var/log/auth.log|grep invalid| grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b')"; do iptables -A INPUT -s "$idiots" -j DROP; done

* 

http://xmodulo.com/centos-bgp-router-quagga.html

https://www.tldp.org/HOWTO/BRIDGE-STP-HOWTO/set-up-the-bridge.html
https://lists.linuxfoundation.org/pipermail/bridge/2017-December/010832.html
https://developers.redhat.com/blog/2018/10/22/introduction-to-linux-interfaces-for-virtual-networking/

https://bugzilla.redhat.com/show_bug.cgi?id=542405
oleg@guixsd ~$ sudo sysctl  net.bridge.bridge-nf-call-arptables=0
net.bridge.bridge-nf-call-arptables = 0
oleg@guixsd ~$ sudo sysctl net.bridge.bridge-nf-call-iptables=0
net.bridge.bridge-nf-call-iptables = 0

** Misc
- [[https://github.com/IvanGlinkin/Host-enumeration][IvanGlinkin/Host-enumeration]]

* Monitoring
- [[https://github.com/ntop/ntopng][ntop/ntopng: Web-based Traffic and Security Network Traffic Monitoring]]

* Tools
- [[https://github.com/chiakge/Linux-NetSpeed][chiakge/Linux-NetSpeed: 将Linux现常用的网络加速集成在一起]]

** WEB interface
- [[https://github.com/phpipam/phpipam][phpipam/phpipam: phpipam development repository]]

* AS
- [[https://github.com/stevenpack/asroute][stevenpack/asroute: Interpret traceroute output to show names of ASN traversed]]
