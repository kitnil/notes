- [[https://wiki.archlinux.org/title/Systemd/Journal][systemd/Journal - ArchWiki]]

* ChatGPT

** What is SyslogFacility in journald config?

In the journald configuration, SyslogFacility specifies the syslog facility identifier that journald uses when sending log messages to the syslog protocol. The facility identifies the type of program or service that generated the message.

The possible values for SyslogFacility are:

    0: kernel messages
    1: user-level messages
    2: mail system
    3: system daemons
    4: security/authorization messages (note: this facility is not included in the syslog protocol standards)
    5: messages generated internally by syslogd
    6: line printer subsystem
    7: network news subsystem
    8: UUCP subsystem
    9: clock daemon
    10: security/authorization messages (note: this facility is not included in the syslog protocol standards)
    11: FTP daemon
    12: NTP subsystem
    13: log audit
    14: log alert
    15: clock daemon (note: deprecated by 12)
    16: local use 0 (local0)
    17: local use 1 (local1)
    18: local use 2 (local2)
    19: local use 3 (local3)
    20: local use 4 (local4)
    21: local use 5 (local5)
    22: local use 6 (local6)
    23: local use 7 (local7)

The default value for SyslogFacility is daemon, which corresponds to 3 (system daemons).

** Show me a journald config to send logs to remote `rsyslog`.

To configure journald to send logs to a remote rsyslog server, you can create a new configuration file /etc/systemd/journald.conf.d/remote.conf with the following content:

makefile

[Journal]
ForwardToSyslog=yes
SyslogFacility=daemon

The ForwardToSyslog directive enables forwarding of journal messages to syslog. The SyslogFacility directive specifies the syslog facility to use when forwarding messages to syslog.

After creating or modifying the configuration file, you need to restart the systemd-journald service to apply the changes:

sudo systemctl restart systemd-journald

Next, you need to configure the remote rsyslog server to receive and store the forwarded logs. The exact configuration steps may depend on your specific rsyslog version and environment, but in general, you need to:

    Open the rsyslog configuration file, usually located at /etc/rsyslog.conf or /etc/rsyslog.d/*.conf.

    Add a new configuration block to define the input source for remote logs. For example:

    bash

# Listen for remote logs on UDP port 514
$ModLoad imudp
$UDPServerRun 514

You can also use a different transport protocol, such as TCP or RELP, depending on your needs and security requirements.

Add a new configuration block to define the destination for forwarded logs. For example:

graphql

# Forward logs from journald to remote server at 10.0.0.1
*.* @@10.0.0.1:514

This configuration sends all messages from all facilities and priorities (*.*) to the remote rsyslog server at IP address 10.0.0.1 and port 514.

Restart the rsyslog service to apply the changes.

    sudo systemctl restart rsyslog

After completing these steps, journald should start forwarding logs to the remote rsyslog server, and rsyslog should be able to receive and store them according to its own configuration.
